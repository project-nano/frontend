{"version":3,"sources":["assets/img/login_background.jpg","assets/img/sidebar.jpg","assets/img/nano_white.svg","assets/jss/material-dashboard-react.js","assets/jss/material-dashboard-react/components/typographyStyle.js","components/Typography/Danger.js","assets/jss/material-dashboard-react/components/buttonStyle.js","components/CustomButtons/Button.js","components/CustomInput/InputList.js","components/Backdrop/Backdrop.js","components/Grid/GridItem.js","assets/jss/material-dashboard-react/components/snackbarContentStyle.js","components/Snackbar/SnackbarContent.js","components/Dialog/CustomDialog.js","utils.js","nano_api.js","components/LoggedUser/ModifyPasswordDialog.js","assets/jss/material-dashboard-react/dropdownStyle.js","assets/jss/material-dashboard-react/components/headerLinksStyle.js","components/LoggedUser/LoggedUser.js","components/Navbars/AdminNavbarLinks.js","components/Language/Selector.js","assets/jss/material-dashboard-react/components/headerStyle.js","components/Navbars/Navbar.js","assets/jss/material-dashboard-react/components/sidebarStyle.js","components/Sidebar/Sidebar.js","components/Grid/GridContainer.js","assets/jss/material-dashboard-react/components/cardStyle.js","components/Card/Card.js","assets/jss/material-dashboard-react/components/cardHeaderStyle.js","components/Card/CardHeader.js","assets/jss/material-dashboard-react/components/cardBodyStyle.js","components/Card/CardBody.js","components/Typography/Info.js","components/Snackbar/Snackbar.js","assets/jss/material-dashboard-react/components/tableStyle.js","components/Table/ObjectTable.js","components/CustomButtons/IconButton.js","views/ComputeCells/RemoveDialog.js","views/ComputeCells/AddDialog.js","views/ComputeCells/DetailDialog.js","views/ComputeCells/MigrateDialog.js","views/ComputeCells/ChangeStorageDialog.js","views/ComputeCells/ComputeCells.js","views/Dashboard/PieChart.js","assets/jss/material-dashboard-react/views/dashboardStyle.js","views/Dashboard/PieCard.js","views/Dashboard/LineChart.js","views/Dashboard/LineCard.js","views/Dashboard/StackedBarChart.js","views/Dashboard/StackedBarCard.js","views/Dashboard/MultiBarChart.js","views/Dashboard/MultiBarCard.js","views/Dashboard/ZoneStatus.js","views/Dashboard/SeriesLabels.js","views/Dashboard/PoolStatus.js","views/Dashboard/CellStatus.js","views/ComputePools/DeleteDialog.js","views/ComputePools/CreateDialog.js","views/ComputePools/ModifyDialog.js","views/ComputePools/ComputePools.js","views/AddressPools/DeleteDialog.js","views/AddressPools/CreateDialog.js","views/AddressPools/ModifyDialog.js","views/AddressPools/PoolList.js","views/AddressPools/RemoveRangeDialog.js","views/AddressPools/AddRangeDialog.js","views/AddressPools/PoolStatus.js","views/AddressPools/RangeStatus.js","views/StoragePools/DeleteDialog.js","views/StoragePools/CreateDialog.js","views/StoragePools/ModifyDialog.js","views/StoragePools/StoragePools.js","views/MediaImages/DeleteDialog.js","views/MediaImages/UploadDialog.js","views/MediaImages/ModifyDialog.js","views/MediaImages/SyncDialog.js","views/MediaImages/MediaImages.js","views/DiskImages/DeleteDialog.js","views/DiskImages/UploadDialog.js","views/DiskImages/ModifyDialog.js","views/DiskImages/BuildDialog.js","views/DiskImages/SyncDialog.js","views/DiskImages/DiskImages.js","views/SystemTemplates/DeleteDialog.js","views/SystemTemplates/CreateDialog.js","views/SystemTemplates/ModifyDialog.js","views/SystemTemplates/SystemTemplates.js","components/Table/OperableTable.js","views/Instances/InstanceRow.js","views/Instances/DeleteDialog.js","components/Grid/SingleRow.js","views/Instances/CreateDialog.js","views/Instances/StartWithMediaDialog.js","views/Instances/InsertMediaDialog.js","views/Instances/BuildImageDialog.js","views/Instances/ResetSystemDialog.js","views/Instances/MigrateInstanceDialog.js","views/Instances/BatchStopDialog.js","views/Instances/BatchDeleteDialog.js","views/Instances/BatchCreateDialog.js","views/Instances/InstancesInScope.js","views/Instances/InstanceStatus.js","views/Instances/CreateSnapshotDialog.js","views/Instances/DeleteSnapshotDialog.js","views/Instances/RevertSnapshotDialog.js","views/Instances/Snapshots.js","views/Instances/ModifyNameDialog.js","views/Instances/ModifyCoresDialog.js","views/Instances/ModifyMemoryDialog.js","views/Instances/ModifyPasswordDialog.js","views/Instances/ModifyDiskSizeDialog.js","views/Instances/ShrinkDiskSizeDialog.js","views/Instances/ModifyCPUPriorityDialog.js","views/Instances/ModifyDiskIOPSDialog.js","views/Instances/ModifyNetworkBandwidthDialog.js","views/Instances/ResetSecretDialog.js","views/Instances/Details.js","views/Instances/AllInstances.js","views/Instances/RemoveRuleDialog.js","views/Instances/AddRuleDialog.js","views/Instances/ModifyRuleDialog.js","views/Instances/SecurityPolicies.js","assets/jss/material-dashboard-react/components/customTabsStyle.js","components/CustomTabs/CustomTabs.js","views/Users/CreateUserDialog.js","views/Users/ModifyUserDialog.js","views/Users/DeleteUserDialog.js","views/Users/UserTab.js","views/Users/AddGroupDialog.js","views/Users/ModifyGroupDialog.js","views/Users/RemoveGroupDialog.js","views/Users/GroupTab.js","views/Users/AddMemberDialog.js","views/Users/RemoveMemberDialog.js","views/Users/GroupMemberTab.js","views/Users/AddRoleDialog.js","views/Users/ModifyRoleDialog.js","views/Users/RemoveRoleDialog.js","views/Users/RoleTab.js","views/Users/Main.js","views/Visibilities/Visibilities.js","views/PolicyGroups/DeletePolicyDialog.js","views/PolicyGroups/CreatePolicyDialog.js","views/PolicyGroups/ModifyPolicyDialog.js","views/PolicyGroups/PolicyGroupList.js","views/PolicyGroups/RemoveRuleDialog.js","views/PolicyGroups/AddRuleDialog.js","views/PolicyGroups/ModifyRuleDialog.js","views/PolicyGroups/SecurityRules.js","views/Logs/BatchDeleteDialog.js","views/Logs/Logs.js","layouts/Admin.js","routes.js","views/Dashboard/Dashboard.js","views/AddressPools/AddressPools.js","views/Instances/Instances.js","views/PolicyGroups/PolicyGroups.js","assets/jss/material-dashboard-react/layouts/adminStyle.js","views/Login/Login.js","views/Login/Initial.js","views/Instances/VncDisplay.js","views/Instances/ControlInstance.js","index.js"],"names":["module","exports","hexToRgb","input","replace","test","length","Error","first","second","last","toUpperCase","parseInt","transition","container","paddingRight","paddingLeft","marginRight","marginLeft","defaultFont","fontFamily","fontWeight","lineHeight","primaryColor","warningColor","dangerColor","successColor","infoColor","roseColor","grayColor","boxShadow","primaryBoxShadow","infoBoxShadow","successBoxShadow","warningBoxShadow","dangerBoxShadow","roseBoxShadow","warningCardHeader","background","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","roseCardHeader","defaultBoxShadow","margin","paddingTop","borderTop","height","border","borderRadius","padding","title","color","textDecoration","marginTop","marginBottom","minHeight","typographyStyle","defaultFontStyle","fontSize","defaultHeaderMargins","quote","borderLeft","quoteText","fontStyle","quoteAuthor","display","mutedText","primaryText","infoText","successText","warningText","dangerText","useStyles","makeStyles","styles","Danger","props","classes","children","className","buttonStyle","button","minWidth","backgroundColor","position","textTransform","letterSpacing","willChange","textAlign","whiteSpace","verticalAlign","touchAction","cursor","top","width","transform","left","white","rose","primary","info","success","warning","danger","simple","transparent","disabled","opacity","pointerEvents","lg","sm","round","block","link","justIcon","RegularButton","size","muiClasses","rest","btnClasses","classNames","Button","InputComponent","component","type","label","value","onChange","required","oneRow","options","on","off","rows","step","maxStep","minStep","marks","helper","Box","m","pt","TextField","helperText","fullWidth","rowsMax","multiline","InputLabel","Select","map","option","key","MenuItem","FormControl","FormLabel","RadioGroup","name","row","alignItems","FormControlLabel","control","Radio","Grid","item","Switch","checked","FormGroup","tagValue","tagLabel","has","get","xs","Checkbox","Slider","max","min","valueLabelDisplay","InputList","inputs","theme","backdrop","zIndex","drawer","Backdrop","grid","GridItem","snackbarContentStyle","root","flexWrap","maxWidth","top20","top40","message","close","iconButton","icon","infoIcon","successIcon","warningIcon","dangerIcon","primaryIcon","roseIcon","iconMessage","actionRTL","SnackbarContent","rtlActive","action","messageClasses","undefined","IconButton","aria-label","CustomDialog","promptElement","contentElement","open","operatable","promptPosition","prompt","content","buttons","hideBackdrop","operates","forEach","push","onClick","Dialog","DialogTitle","DialogContent","CircularProgress","DialogActions","displayPrint","getLoggedSession","sessionData","localStorage","getItem","s","JSON","parse","id","logoutSession","setItem","redirectToLogin","to","encodeURIComponent","window","location","pathname","search","bytesToString","bytes","toString","radix","unit","toFixed","bpsToString","truncateToRadix","number","base","Math","pow","getAllMenus","lang","texts","dashboard","computePool","addressPool","storagePool","instance","diskImage","mediaImage","systemTempaltes","securityPolicies","user","log","visibility","getAllComputePools","onSuccess","onFail","getRequest","queryComputeCellsInPool","poolName","modifyComputeCell","cellName","enable","putRequest","getAllStoragePools","getAllNetworkPools","getNetworkPool","searchInstances","url","getInstanceConfig","onCreating","getRequestWithStatus","status","data","progress","created","getInstanceStatus","ejectMedia","instanceID","deleteRequest","stopInstance","deleteRequestWithPayload","reboot","force","restartInstance","resetInstance","getInstanceAdminPassword","password","searchMediaImages","deleteMediaImage","searchDiskImages","getDiskImage","createDiskImage","guest","description","tags","session","request","owner","group","postRequest","deleteDiskImage","checkBatchCreatingStatus","batchID","onProcessing","checkBatchDeletingStatus","checkBatchStoppingStatus","querySystemTemplates","searchSecurityPolicyGroups","enabledOnly","globalOnly","params","URLSearchParams","append","queryAllRoles","writeLog","address","getSystemStatus","callAxiosWithoutSession","nakeGetRequest","callAxios","callAxiosWithStatus","postRequestWithStatus","nakePostRequest","patchRequest","uploadBinary","fileTag","fileData","onProgress","headers","FormData","axios","post","onUploadProgress","e","loaded","total","then","error_code","catch","method","config","i18n","current","new","confirmNew","cancel","confirm","ModifyPasswordDialog","defaultValues","old","new2","onCancel","React","useState","setOperatable","mounted","setMounted","setPrompt","setRequest","resetDialog","onModifyFail","msg","onModifySuccess","handleRequestPropsChanged","target","previous","useEffect","oldPassword","newPassword","changeUserPassword","dropdownStyle","buttonLink","breakpoints","down","links","linkText","popperClose","pooperResponsive","float","WebkitBoxShadow","popperNav","whiteColor","dropdown","listStyle","WebkitBackgroundClip","backgroundClip","dropdownItem","WebkitTransition","MozTransition","OTransition","MsTransition","clear","headerLinksStyle","paddingBottom","justifyContent","searchButton","searchIcon","notifications","up","right","manager","searchWrapper","modify","logout","LoggedUser","username","setUsername","openProfile","setOpenProfile","dialogVisible","setDialogVisible","isLogged","setLogged","handleCloseProfile","onFinished","showModifyPassword","closeModifyPassword","keepAlive","useCallback","apiRoot","put","updateSession","updateInterval","timeout","timerID","setInterval","clearInterval","innerWidth","aria-owns","aria-haspopup","event","contains","currentTarget","icons","Popper","Boolean","anchorEl","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","role","Divider","light","AdminNavbarLinks","Selector","openMenu","bind","closeMenu","languages","locale","initialText","setLang","restProps","changeLanguage","state","language","displayText","this","setState","configData","stringify","currentLang","buttonClass","others","Typography","keepMounted","onClose","selected","updateLanguage","variant","Component","headerStyle","appBar","borderBottom","flex","appResponsive","manual","manualURL","Header","appBarClasses","version","mr","manualButton","Tooltip","Link","href","AppBar","Toolbar","routes","every","prop","indexOf","layout","path","makeBrand","Hidden","smDown","implementation","mdUp","handleDrawerToggle","sidebarStyle","drawerPaper","bottom","overflowY","drawerPaperRTL","logo","logoLink","logoLinkRTL","logoImage","maxHeight","img","backgroundSize","backgroundPosition","list","itemLink","itemIcon","itemIconRTL","itemText","itemTextRTL","whiteFont","purple","blue","green","orange","red","sidebarWrapper","overflow","overflowScrolling","activePro","Sidebar","activeRoute","routeName","image","logoText","List","listItemClasses","whiteFontClasses","activeClassName","ListItem","Icon","ListItemText","disableTypography","brand","src","alt","Drawer","anchor","paper","ModalProps","backgroundImage","GridContainer","cardStyle","card","flexDirection","wordWrap","cardPlain","cardProfile","cardChart","Card","plain","profile","chart","cardClasses","cardHeaderStyle","cardHeader","cardHeaderPlain","cardHeaderStats","cardHeaderIcon","CardHeader","stats","cardHeaderClasses","cardBodyStyle","cardBody","WebkitBoxFlex","cardBodyPlain","cardBodyProfile","CardBody","cardBodyClasses","Info","Snackbar","place","closeNotification","anchorOrigin","vertical","horizontal","ContentProps","tableStyle","warningTableHeader","primaryTableHeader","dangerTableHeader","successTableHeader","infoTableHeader","roseTableHeader","grayTableHeader","table","borderSpacing","borderCollapse","tableHeadCell","tableCell","tableResponsive","spacing","overflowX","tableHeadRow","outline","tableBodyRow","ObjectTable","Table","TableHead","TableRow","TableCell","TableBody","rowKey","cell","cellKey","tooltipPlacement","iconColor","innerButton","createElement","defaultProps","RemoveDialog","pool","onRemoveFail","onRemoveSuccess","removeComputeCell","AddDialog","initialed","setInitialed","setOptions","onAddFail","onAddSuccess","queryUnallocatedComputeCells","dataList","cellList","addComputeCell","Skeleton","alive","enabled","online","offline","attached","storage","DetailDialog","statusLabel","statusIcon","aliveLabel","aliveIcon","tableStyles","fontClasses","fontStyles","error","setError","setStatus","onFetchFail","currentStatus","aria-labelledby","autoFocus","sourcePool","sourceCell","targetCell","MigrateInstancesDialog","cells","onMigrateFail","onMigrateSuccess","source_pool","source_cell","target_cell","migrateInstancesInCell","ChangeStoragePathDialog","onChangeFail","onChangeSuccess","queryComputeCellStorages","payload","system","currentPath","newLocation","pathName","default","changeComputeCellStorage","cardTitleWhite","addButton","tableTitle","noResource","computePools","disable","instances","detail","remove","migrate","changeStorage","ComputeCells","setDataList","useLocation","addDialogVisible","setAddDialogVisible","detailDialogVisible","setDetailDialogVisible","removeDialogVisible","setRemoveDialogVisible","migrateDialogVisible","setMigrateDialogVisible","storageDialogVisible","setStorageDialogVisible","setSelected","notifyColor","setNotifyColor","notifyMessage","setNotifyMessage","closeNotify","showErrorMessage","setTimeout","reloadAllData","err","showNotifyMessage","closeRemoveDialog","closeAddDialog","closeMigrateDialog","closeStorageDialog","CloudQueueIcon","SettingsIcon","StorageIcon","DeleteIcon","LocalShippingRoundedIcon","BlockIcon","concat","CheckIcon","Breadcrumbs","separator","mt","mb","PieChart","series","labels","valueList","colorList","slice","chartData","datasets","borderWidth","hoverBorderWidth","cutoutPercentage","legend","dashboardStyle","upArrowCardCategory","cardCategory","cardCategoryWhite","cardTitle","PieCard","displayValue","chartStyles","dashboardStyles","index","seriesName","topDivider","totalLabel","p","valueLabel","LineChart","maxValueOfAll","minTickStep","maxTicks","maxValue","maxTicksValue","brushColor","dataCount","Array","fill","maxValueFixed","dataSeries","pointBackgroundColor","pointBorderColor","pointRadius","borderColor","lineTension","tickStep","ceil","chartOptions","scales","xAxes","gridLines","drawBorder","lineWidth","zeroLineColor","zeroLineWidth","yAxes","borderDash","ticks","stepSize","fontColor","suggestedMax","suggestedMin","callback","LineCard","lastValueLabels","valueString","lastValue","join","StackedBarChart","barPercentage","stack","i","j","stacked","StackedBarCard","MultiBarChart","MultiBarCard","allButton","pools","disks","coreUsage","memoryUsage","ioUsage","stopped","running","lost","used","available","coresUsed","network","diskIO","receive","send","write","read","seriesColor1","seriesColor2","seriesColor3","seriesColor4","disabledColor","ZoneStatus","coreRecords","memoryRecords","networkRecords","diskRecords","queryZoneStatus","shift","cpu_usage","max_cpu","available_memory","max_memory","receive_speed","send_speed","write_speed","read_speed","startTime","Date","start_time","now","elapsedSeconds","floor","getTime","elapsedDays","elapsedHours","uptimeText","elapsedMinutes","updateTime","align","disabledPools","enabledPools","poolData","poolChart","md","offlineCell","onlineCell","cellData","cellChart","stoppedInstance","runningInstance","lostInstance","migrateInstance","instanceData","instanceChart","availableDisk","available_disk","usedDisk","max_disk","storageData","storageChart","Number","isInteger","usedCores","maxCores","coresChart","usedMemory","availableMemory","memoryChart","mib","networkReceive","networkSend","networkSeries","networkChart","diskWrite","diskRead","diskSeries","SeriesLabels","valueName","colorName","labelName","baseClass","sliceValue","sliceLabel","sliceClassName","viewButton","zone","memory","throughput","shadowChartPanel","cardWithDivider","diskChart","SinglePoolStatus","cellsLabel","instancesLabel","storageLabel","displaySpeedByMB","speed","dataLabels","PoolStatus","allStatus","setAllStatus","statusMap","Map","queryPoolsStatus","CoreArraySize","MemoryArraySize","NetworkIOArraySize","DiskIOArraySize","updated","set","newStatus","nameList","sort","breadcrumbs","disableChart","SingleCellStatus","operators","CellStatus","match","queryCellsStatus","queryComputeCellStatus","DeleteDialog","onDeleteFail","onDeleteSuccess","deleteComputePool","noAddressPool","failover","CreateDialog","onCreateFail","onCreateSuccess","storageList","addressList","onQueryNetworkSuccess","allocated","addresses","gateway","host","createComputePool","ModifyDialog","onGetCurrentConfigueSuccess","getComputePool","modifyComputePool","createButton","noPools","delete","deleteNetworkPool","provider","interface","internal","external","both","dns1","dns2","mode","modeOptions","ipv4Pattern","RegExp","dnsList","dns","createNetworkPool","secondary","modifyNetworkPool","PoolList","createDialogVisible","setCreateDialogVisible","modifyDialogVisible","setModifyDialogVisible","deleteDialogVisible","setDeleteDialogVisible","closeModifyDialog","closeDeleteDialog","closeCreateDialog","BuildIcon","ListIcon","providerName","dataToNodes","rangeType","startAddress","removeAddressRange","start","end","netmask","endAddress","mask","addAddressRange","back","noInternalRange","noAllocated","allocatedAddress","setCurrent","reloadPoolStatus","internalContent","ranges","allocatedContent","internalRanges","VisibilityIcon","dataToAllocated","allocatedList","history","goBack","RangeStatus","reloadRangeStatus","getAddressRangeStatus","deleteStoragePool","hostPattern","pathPattern","createStoragePool","getStoragePool","modifyStoragePool","imageID","file","choose","UploadDialog","uploading","setUploading","setProgress","onUploadFail","onUploadSuccess","tagOptions","tag","LinearProgress","files","imageName","createMediaImage","uploadMediaImage","imageTags","getMediaImage","currentTags","modifyMediaImage","SyncDialog","onSyncFail","onSyncSuccess","syncMediaImages","createTime","modifyTime","uploadButton","syncButton","uploadDiskImage","modifyDiskImage","BuildDialog","creating","setCreating","guests","onBuildFail","onFailAfterCreated","onBuildProgress","onBuildSuccess","poolOptions","onBuildAccept","syncDiskImages","download","buildButton","templateID","deleteSystemTemplate","admin","operatingSystem","disk","usb","tablet","osOptions","diskOptions","networkOptions","displayOptions","controlOptions","usbOptions","tabletOptions","operating_system","onPropertyChanged","listToOptions","createSystemTemplate","getSystemTemplate","modifySystemTemplate","os","createdTime","modifiedTime","OperableTable","startWithMedia","snapshot","createImage","resetSystem","monitor","security","remoteControl","stop","forceStop","reset","insertMedia","autoStartup","mediaAttached","InstanceRow","tableClasses","onNotify","onError","onDelete","onStatusChange","onMediaStart","onInsertMedia","onResetSystem","onBuildImage","onMigrateInstance","checkable","onCheckStatusChanged","startOperator","tips","PlayArrowIcon","handler","startInstance","startWithMediaOperator","PlayCircleOutlineIcon","snapshotOperator","CameraAltIcon","createImageOperator","BackupIcon","resetSystemOperator","ReplayIcon","deleteOperator","migrateOperator","monitorOperator","ShowChartIcon","detailOperator","securityOperator","SecurityIcon","controllOperator","DesktopWindowsIcon","stopOperator","PowerSettingsNewIcon","forceStopOperator","PowerIcon","forceStopInstance","rebootOperator","RotateRightIcon","resetOperator","RefreshIcon","insertMediaOperator","ArrowDropDownIcon","ejectMediaOperator","ArrowDropUpIcon","auto_start","media_attached","addressLabel","network_address","memoryLabel","rowHeader","diskLabel","isChecked","handleCheckChanged","cores","operator","deleteInstance","SingleRow","resourcePool","core","systemDisk","dataDisk","systemVersion","sourceImage","blankSystem","qos","cpuPriority","iops","outbound","inbound","noDataDisk","noLimit","cpuPriorityHigh","cpuPriorityMedium","cpuPriorityLow","modules","adminName","adminPassword","blankHelper","dataPath","ciOptions","securityPolicy","system_disk","data_disk","system_template","from_image","security_policy","module_cloud_init_admin_name","module_cloud_init_admin_password","module_cloud_init_data_path","priority","images","versions","policies","result","onCreateAccept","checkCreatingProgress","handleSliderValueChanged","imageOptions","templateOptions","onQueryPoliciesSuccess","datalist","onQueryTemplateSuccess","onQueryImageSuccess","coresOptions","systemDiskSlider","memoryOptions","rate","dataDiskSlider","systemMarks","moduleOption","dataMarks","ciComponents","groupName","propertyName","inputComponents","priorityOptions","qosComponents","pb","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","isNaN","fromImage","ciEnabled","cloudInit","admin_name","admin_secret","data_path","cpu_priority","write_iops","read_iops","onAccept","template","cloud_init","security_policy_group","createInstance","StartWithMediaDialog","onStartFail","onStartSuccess","imageList","from_media","source","startInstanceWithMedia","InsertWithMediaDialog","onInsertFail","onInsertSuccess","ResetSystemDialog","onResetFail","onResetSuccess","onResetAccept","MigrateInstanceDialog","migrateSingleInstance","content1","content2","finish","fail","complete","processing","BatchStopDialog","StageEnum","targets","stage","setStage","resultList","setResultList","onStopFail","cancelButton","confirmButton","onComplete","idList","batchStoppingGuests","finishButton","resultToTable","text","TableContainer","scope","BatchDeleteDialog","batchDeletingGuests","rule","ruleOrder","ruleMAC","ruleAddress","prefix","count","RuleEmum","name_rule","name_prefix","batchCreatingGuests","htmlFor","inputProps","batchCreate","batchDelete","batchStop","enterBatch","exitBatch","InstancesInScope","instanceList","setInstanceList","checkedMap","setCheckedMap","batchMode","setBatchMode","queryParams","mediaStartDialogVisible","setMediaStartDialogVisible","insertMediaDialogVisible","setInsertMediaDialogVisible","resetSystemDialogVisible","setResetSystemDialogVisible","buildImageDialogVisible","setBuildImageDialogVisible","batchStopDialogVisible","setBatchStopDialogVisible","batchDeleteDialogVisible","setBatchDeleteDialogVisible","batchCreateDialogVisible","setBatchCreateDialogVisible","currentInstance","setCurrentInstance","setSourcePool","setSourceCell","reloadAllInstances","modified","removeTargets","some","showDeleteDialog","showMediaStartDialog","closeMediaStartDialog","showInsertMediaDialog","closeInsertMediaDialog","showResetSystemDialog","closeResetSystemDialog","showBuildImageDialog","closeBuildImageDialog","showMigrateDialog","closeBatchStopDialog","closeBatchDeleteDialog","closeBatchCreateDialog","handleInstanceChecked","checkedStatus","console","nameHeader","keys","buttonProperties","AddIcon","PlaylistAddIcon","ExitToAppIcon","batchTargets","internalAddress","externalAddress","flags","SingleInstanceStatus","tick","networkSpeed","diskSpeed","coreLabel","sizeLabels","internalLabel","externalLabel","InstanceStatus","setInstance","speedReady","onGetStatusSuccess","memory_available","bytes_received","bytes_sent","bytes_written","bytes_read","receiveSpeed","sendSpeed","writeSpeed","readSpeed","IntervalInSecond","CreateSnapshotDialog","snapshotName","createInstanceSnapshot","DeleteSnapshotDialog","deleteInstanceSnapshot","RevertSnapshotDialog","onRevertFail","onRevertSuccess","restoreInstanceSnapshot","panel","grey","create","revert","realtime","Snapshots","snapshots","setSnapshots","selectedSnapshot","setSelectedSnapshot","revertDialogVisible","setRevertDialogVisible","buildChildrenNode","parent","dependent","nodes","node","isCurrent","reloadSnapshots","instanceName","queryInstanceSnapshots","rootName","rootNode","snapshotMap","Object","dependentMap","is_root","is_current","backing","parentName","closeRevertDialog","onSelectSnapshot","getInstanceSnapshot","selectPanel","expanded","rootFolder","nodeToTree","nodeId","preventDefault","childrenNodes","child","TreeItem","snapshotTree","TreeView","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","defaultExpanded","tableData","create_time","panelButtons","pl","pr","ModifyNameDialog","currentName","newName","modifyInstanceName","ModifyCoresDialog","currentCores","newCores","modifyInstanceCores","ModifyMemoryDialog","currentMemory","currentLabel","newMemory","memoryInMB","sizeInBytes","modifyInstanceMemory","modifyInstanceAdminPassword","ModifyDiskDialog","currentDisk","diskIndex","newDisk","sizeInGB","resizeInstanceDisk","ShrinkDiskSizeDialog","onShrinkFail","onShrinkSuccess","immediate","shrinkInstanceDisk","ModifyCPUPriorityDialog","modifyInstancePriority","ModifyDiskIOPSDialog","modifyInstanceDiskIOPS","ModifyNetworkBandwidthDialog","modifyInstanceBandwidth","ResetMonitorSecretDialog","guestID","guestName","resetMonitorSecret","monitorAddress","monitorSecret","ethernetAddress","bandwidth","disabledWhenRunning","disabledWhenStopped","hide","extendDisk","shrinkDisk","resetSecret","Details","setGuest","setAdminPassword","secretVisiable","setSecretVisiable","modifyNameVisiable","setModifyNameVisible","modifyCoresVisiable","setModifyCoresVisible","modifyMemoryVisiable","setModifyMemoryVisible","modifyPasswordVisiable","setModifyPasswordVisible","modifyDiskSizeVisiable","setModifyDiskSizeVisible","shrinkDiskSizeVisiable","setShrinkDiskSizeVisible","modifyCPUPriorityVisiable","setModifyCPUPriorityVisible","modifyDiskIOPSVisiable","setModifyDiskIOPSVisible","modifyNetworkBandwidthVisiable","setModifyNetworkBandwidthVisible","resetSecretVisiable","setResetSecretVisible","setDiskIndex","reloadGuestConfig","closeModifyNameDialog","closeModifyCoresDialog","closeModifyMemoryDialog","closeModifyPasswordDialog","showModifyDiskSizeDialog","closeModifyDiskSizeDialog","showShrinkDiskSizeDialog","closeShrinkDiskSizeDialog","closeModifyCPUPriorityDialog","closeModifyDiskIOPSDialog","closeModifyNetworkBandwidthDialog","showResetSecretDialog","closeResetSecretDialog","setAutoStartSuccess","setAutoStartFail","disabledWhenRunningIcon","LockIcon","disabledWhenStoppedIcon","display_protocol","display_address","bandwidthLabel","adminPasswordOperators","VisibilityOffIcon","priorityLabel","ethernet_address","monitor_secret","AutorenewIcon","ZoomOutMapIcon","SystemUpdateAltIcon","currentIndex","allocated_address","setAutoStart","Container","allCells","allPools","keyword","notMatch","AllInstances","defaultPoolName","defaultCellName","setScope","setPools","setCells","offset","setOffset","setKeyword","keywordInput","setKeywordInput","totalCount","setTotalCount","clearState","limit","searchGuests","r","poolList","pagination","totalPages","currentPage","Pagination","page","boundaryCount","showFirstButton","showLastButton","cellOptions","poolSelector","cellSelector","ml","removeGuestSecurityRule","accept","reject","protocol","sourceAddress","targetPort","AddRuleDialog","port","actionOptions","to_port","addGuestSecurityRule","sourceModifyress","ModifyRuleDialog","modifyGuestSecurityRule","moveUp","moveDown","SystemTemplates","setData","remoeDialogVisible","getGuestSecurityPolicy","direction","moveUpGuestSecurityRule","moveDownGuestSecurityRule","defaultAction","default_action","changeGuestSecurityPolicyAction","rules","showModifyDialog","showRemoveDialog","ArrowDownwardIcon","ArrowUpwardIcon","from_address","buttonProps","NavigateBeforeIcon","customTabsStyle","cardTitleRTL","displayNone","tabsRoot","tabRootButton","tabSelected","tabWrapper","CustomTabs","setValue","headerColor","plainTabs","tabs","Tabs","indicator","scrollButtons","tabIcon","Tab","wrapper","tabName","tabContent","password2","nick","mail","CreateUserDialog","namePattern","createUser","ModifyUserDialog","getUser","modifyUser","DeleteUserDialog","deleteUser","UserTab","userList","setUserList","currentUser","setCurrentUser","reloadAllUsers","EditIcon","AddGroupDialog","Set","handleTagsChanged","add","rolename","roles","roleList","addGroup","ModifyGroupDialog","onGetGroupSuccess","getGroup","modifyGroup","RemoveGroupDialog","removeGroup","member","GroupTab","showMembers","setGroup","groupList","setGroupList","currentGroup","setCurrentGroup","reloadAllGroups","GroupIcon","AddMemberDialog","searchUsers","addGroupMember","RemoveMemberDialog","removeGroupMember","backButton","GroupMemberTab","onBack","memberList","setMemberList","currentMember","setCurrentMember","reloadAllMembers","queryGroupMembers","menu","AddRoleDialog","menus","menuList","addRole","ModifyRoleDialog","getRole","itemValue","modifyRole","RemoveRoleDialog","removeRole","RoleTab","setRoleList","currentRole","setCurrentRole","reloadAllRoles","MutableGroupTab","instanceDescription","diskDescription","media","mediaDescription","VisibilityRow","DeletePolicyDialog","policyID","deleteSecurityPolicyGroup","global","yes","no","format","CreatePolicyDialog","handleRequestSwitchChanged","isGlobal","createSecurityPolicyGroup","ModifyPolicyDialog","getSecurityPolicyGroup","policy","modifySecurityPolicyGroup","PlaylistAddCheckIcon","removeSecurityPolicyRule","addSecurityPolicyRule","modifySecurityPolicyRule","setDatalist","getSecurityPolicyRules","moveUpSecurityPolicyRule","moveDownSecurityPolicyRule","entries","deleteLog","duration","time","day","month","year","LogRow","ps","dashboardRoutes","MultilineChartIcon","exact","render","childrenProps","BlurOnIcon","failoverLabel","ViewQuiltIcon","ShareIcon","CloudIcon","SecurityPolicies","SaveIcon","uploadDialogVisible","setUploadDialogVisible","buildDialogVisible","setBuildDialogVisible","syncDialogVisible","setSyncDialogVisible","closeUploadDialog","closeBuildDialog","closeSyncDialog","GetAppIcon","downloadURL","createLabel","modifyLabel","modify_time","sizeLabel","Chip","noWrap","dataToNode","AlbumIcon","TuneIcon","created_time","modified_time","PolicyGroupList","SecurityRules","PeopleIcon","PersonIcon","ListAltIcon","BorderColorIcon","logList","setLogList","setQueryParams","pages","setPages","dateToString","date","paddingToTwoBytes","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","reloadAllLogs","before","after","setDate","setMonth","setFullYear","queryLogs","logs","logID","handleLogChecked","durationOptions","durationRadioGroup","targetPage","underline","changeCurrentPage","instanceVisible","diskImageVisible","mediaImageVisible","reloadVisibility","instance_visible","disk_image_visible","media_image_visible","setVisiblities","appStyle","mainPanel","SwitchRoutes","firstPath","from","Admin","createRef","mobileOpen","setMobileOpen","resizeFunction","navigator","platform","PerfectScrollbar","suppressScrollX","suppressScrollY","document","body","addEventListener","destroy","removeEventListener","authorizedMenus","allRoutes","bgImage","ref","getClasses","login","Login","nonce","errorMessage","systemReady","setSystemReady","notifyError","onLoginFail","onLoginSuccess","saveLoggedSession","ready","decodeURIComponent","errorBar","possible","charAt","random","generateNonce","flexGrow","justify","welcome","initial","InitialSystem","onInitialFail","onInitialSuccess","redirect","initialSystem","VncDisplay","onFocusChanged","canvas","connection","setConnection","activateFocus","focus","credentials","clipViewport","focusOnClick","qualityLevel","conn","RFB","onEmergency","sendCtrlAltDel","onMouseOver","onMouseOut","blur","onMouseDown","sendKeys","activated","deactivated","ControlInstance","channel","setChannel","setFocus","initializing","setInitializing","onMonitorFail","openMonitorChannel","channelData","delegate","channelID","startsWith","hostURL","hostname","getMonitorURL","isActivated","KeyboardHideIcon","ErrorBoundary","hasError","errorStack","createBrowserHistory","mainTheme","createTheme","palette","main","LanguageProvider","langData","getLanguage","ThemeProvider","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8156b384.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login_background.327add31.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sidebar.18c01f03.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nano_white.a92c198a.svg\";","/*!\r\n\r\n =========================================================\r\n * Material Dashboard React - v1.8.0 based on Material Dashboard - v1.2.0\r\n =========================================================\r\n\r\n * Product Page: http://www.creative-tim.com/product/material-dashboard-react\r\n * Copyright 2019 Creative Tim (http://www.creative-tim.com)\r\n * Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\r\n\r\n =========================================================\r\n\r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n */\r\n\r\n// ##############################\r\n// // // Function that converts from hex color to rgb color\r\n// // // Example: input = #9c27b0 => output = 156, 39, 176\r\n// // // Example: input = 9c27b0 => output = 156, 39, 176\r\n// // // Example: input = #999 => output = 153, 153, 153\r\n// // // Example: input = 999 => output = 153, 153, 153\r\n// #############################\r\nconst hexToRgb = input => {\r\n  input = input + \"\";\r\n  input = input.replace(\"#\", \"\");\r\n  let hexRegex = /[0-9A-Fa-f]/g;\r\n  if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\r\n    throw new Error(\"input is not a valid hex color.\");\r\n  }\r\n  if (input.length === 3) {\r\n    let first = input[0];\r\n    let second = input[1];\r\n    let last = input[2];\r\n    input = first + first + second + second + last + last;\r\n  }\r\n  input = input.toUpperCase(input);\r\n  let first = input[0] + input[1];\r\n  let second = input[2] + input[3];\r\n  let last = input[4] + input[5];\r\n  return (\r\n    parseInt(first, 16) +\r\n    \", \" +\r\n    parseInt(second, 16) +\r\n    \", \" +\r\n    parseInt(last, 16)\r\n  );\r\n};\r\n\r\n// ##############################\r\n// // // Variables - Styles that are used on more than one component\r\n// #############################\r\n\r\nconst drawerWidth = 260;\r\n\r\nconst transition = {\r\n  transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\r\n};\r\n\r\nconst container = {\r\n  paddingRight: \"15px\",\r\n  paddingLeft: \"15px\",\r\n  marginRight: \"auto\",\r\n  marginLeft: \"auto\"\r\n};\r\n\r\nconst defaultFont = {\r\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n  fontWeight: \"300\",\r\n  lineHeight: \"1.5em\"\r\n};\r\n\r\nconst primaryColor = [\"#9c27b0\", \"#ab47bc\", \"#8e24aa\", \"#af2cc5\"];\r\nconst warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\r\nconst dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\r\nconst successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\r\nconst infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\r\nconst roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\r\nconst grayColor = [\r\n  \"#999\",\r\n  \"#777\",\r\n  \"#3C4858\",\r\n  \"#AAAAAA\",\r\n  \"#D2D2D2\",\r\n  \"#DDD\",\r\n  \"#b4b4b4\",\r\n  \"#555555\",\r\n  \"#333\",\r\n  \"#a9afbb\",\r\n  \"#eee\",\r\n  \"#e7e7e7\"\r\n];\r\nconst blackColor = \"#000\";\r\nconst whiteColor = \"#FFF\";\r\n\r\nconst boxShadow = {\r\n  boxShadow:\r\n    \"0 10px 30px -12px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.42), 0 4px 25px 0px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.12), 0 8px 10px -5px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.2)\"\r\n};\r\n\r\nconst primaryBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(primaryColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst infoBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(infoColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst successBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(successColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst warningBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(warningColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst dangerBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(dangerColor[0]) +\r\n    \",.4)\"\r\n};\r\nconst roseBoxShadow = {\r\n  boxShadow:\r\n    \"0 4px 20px 0 rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \",.14), 0 7px 10px -5px rgba(\" +\r\n    hexToRgb(roseColor[0]) +\r\n    \",.4)\"\r\n};\r\n\r\nconst warningCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\r\n  ...warningBoxShadow\r\n};\r\nconst successCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\r\n  ...successBoxShadow\r\n};\r\nconst dangerCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\r\n  ...dangerBoxShadow\r\n};\r\nconst infoCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\r\n  ...infoBoxShadow\r\n};\r\nconst primaryCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\r\n  ...primaryBoxShadow\r\n};\r\nconst roseCardHeader = {\r\n  background:\r\n    \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\r\n  ...roseBoxShadow\r\n};\r\n\r\nconst cardActions = {\r\n  margin: \"0 20px 10px\",\r\n  paddingTop: \"10px\",\r\n  borderTop: \"1px solid \" + grayColor[10],\r\n  height: \"auto\",\r\n  ...defaultFont\r\n};\r\n\r\nconst cardHeader = {\r\n  margin: \"-20px 15px 0\",\r\n  borderRadius: \"3px\",\r\n  padding: \"15px\"\r\n};\r\n\r\nconst card = {\r\n  display: \"inline-block\",\r\n  position: \"relative\",\r\n  width: \"100%\",\r\n  margin: \"25px 0\",\r\n  boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\r\n  borderRadius: \"3px\",\r\n  color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\r\n  background: whiteColor\r\n};\r\n\r\nconst defaultBoxShadow = {\r\n  border: \"0\",\r\n  borderRadius: \"3px\",\r\n  boxShadow:\r\n    \"0 10px 20px -12px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.42), 0 3px 20px 0px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.12), 0 8px 10px -5px rgba(\" +\r\n    hexToRgb(blackColor) +\r\n    \", 0.2)\",\r\n  padding: \"10px 0\",\r\n  transition: \"all 150ms ease 0s\"\r\n};\r\n\r\nconst title = {\r\n  color: grayColor[2],\r\n  textDecoration: \"none\",\r\n  fontWeight: \"300\",\r\n  marginTop: \"30px\",\r\n  marginBottom: \"25px\",\r\n  minHeight: \"32px\",\r\n  fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n  \"& small\": {\r\n    color: grayColor[1],\r\n    fontWeight: \"400\",\r\n    lineHeight: \"1\"\r\n  }\r\n};\r\n\r\nconst cardTitle = {\r\n  ...title,\r\n  marginTop: \"0\",\r\n  marginBottom: \"3px\",\r\n  minHeight: \"auto\",\r\n  \"& a\": {\r\n    ...title,\r\n    marginTop: \".625rem\",\r\n    marginBottom: \"0.75rem\",\r\n    minHeight: \"auto\"\r\n  }\r\n};\r\n\r\nconst cardSubtitle = {\r\n  marginTop: \"-.375rem\"\r\n};\r\n\r\nconst cardLink = {\r\n  \"& + $cardLink\": {\r\n    marginLeft: \"1.25rem\"\r\n  }\r\n};\r\n\r\nexport {\r\n  hexToRgb,\r\n  //variables\r\n  drawerWidth,\r\n  transition,\r\n  container,\r\n  boxShadow,\r\n  card,\r\n  defaultFont,\r\n  primaryColor,\r\n  warningColor,\r\n  dangerColor,\r\n  successColor,\r\n  infoColor,\r\n  roseColor,\r\n  grayColor,\r\n  blackColor,\r\n  whiteColor,\r\n  primaryBoxShadow,\r\n  infoBoxShadow,\r\n  successBoxShadow,\r\n  warningBoxShadow,\r\n  dangerBoxShadow,\r\n  roseBoxShadow,\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  cardActions,\r\n  cardHeader,\r\n  defaultBoxShadow,\r\n  title,\r\n  cardTitle,\r\n  cardSubtitle,\r\n  cardLink\r\n};\r\n","import {\r\n  defaultFont,\r\n  primaryColor,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  dangerColor,\r\n  grayColor\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst typographyStyle = {\r\n  defaultFontStyle: {\r\n    ...defaultFont,\r\n    fontSize: \"14px\"\r\n  },\r\n  defaultHeaderMargins: {\r\n    marginTop: \"20px\",\r\n    marginBottom: \"10px\"\r\n  },\r\n  quote: {\r\n    padding: \"10px 20px\",\r\n    margin: \"0 0 20px\",\r\n    fontSize: \"17.5px\",\r\n    borderLeft: \"5px solid \" + grayColor[10]\r\n  },\r\n  quoteText: {\r\n    margin: \"0 0 10px\",\r\n    fontStyle: \"italic\"\r\n  },\r\n  quoteAuthor: {\r\n    display: \"block\",\r\n    fontSize: \"80%\",\r\n    lineHeight: \"1.42857143\",\r\n    color: grayColor[1]\r\n  },\r\n  mutedText: {\r\n    color: grayColor[1]\r\n  },\r\n  primaryText: {\r\n    color: primaryColor[0]\r\n  },\r\n  infoText: {\r\n    color: infoColor[0]\r\n  },\r\n  successText: {\r\n    color: successColor[0]\r\n  },\r\n  warningText: {\r\n    color: warningColor[0]\r\n  },\r\n  dangerText: {\r\n    color: dangerColor[0]\r\n  }\r\n};\r\n\r\nexport default typographyStyle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Danger(props) {\r\n  const classes = useStyles();\r\n  const { children } = props;\r\n  return (\r\n    <div className={classes.defaultFontStyle + \" \" + classes.dangerText}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nDanger.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n","import {\r\n  grayColor,\r\n  primaryColor,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  dangerColor,\r\n  roseColor,\r\n  whiteColor,\r\n  blackColor,\r\n  hexToRgb\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst buttonStyle = {\r\n  button: {\r\n    minHeight: \"auto\",\r\n    minWidth: \"auto\",\r\n    backgroundColor: grayColor[0],\r\n    color: whiteColor,\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(grayColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(grayColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(grayColor[0]) +\r\n      \", 0.12)\",\r\n    border: \"none\",\r\n    borderRadius: \"3px\",\r\n    position: \"relative\",\r\n    padding: \"12px 30px\",\r\n    margin: \".3125rem 1px\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"400\",\r\n    textTransform: \"uppercase\",\r\n    letterSpacing: \"0\",\r\n    willChange: \"box-shadow, transform\",\r\n    transition:\r\n      \"box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1), background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1)\",\r\n    lineHeight: \"1.42857143\",\r\n    textAlign: \"center\",\r\n    whiteSpace: \"nowrap\",\r\n    verticalAlign: \"middle\",\r\n    touchAction: \"manipulation\",\r\n    cursor: \"pointer\",\r\n    \"&:hover,&:focus\": {\r\n      color: whiteColor,\r\n      backgroundColor: grayColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(grayColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(grayColor[0]) +\r\n        \", 0.2)\"\r\n    },\r\n    \"& .fab,& .fas,& .far,& .fal, &.material-icons\": {\r\n      position: \"relative\",\r\n      display: \"inline-block\",\r\n      top: \"0\",\r\n      marginTop: \"-1em\",\r\n      marginBottom: \"-1em\",\r\n      fontSize: \"1.1rem\",\r\n      marginRight: \"4px\",\r\n      verticalAlign: \"middle\"\r\n    },\r\n    \"& svg\": {\r\n      position: \"relative\",\r\n      display: \"inline-block\",\r\n      top: \"0\",\r\n      width: \"18px\",\r\n      height: \"18px\",\r\n      marginRight: \"4px\",\r\n      verticalAlign: \"middle\"\r\n    },\r\n    \"&$justIcon\": {\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        marginTop: \"0px\",\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        transform: \"none\",\r\n        left: \"0px\",\r\n        top: \"0px\",\r\n        height: \"100%\",\r\n        lineHeight: \"41px\",\r\n        fontSize: \"20px\"\r\n      }\r\n    }\r\n  },\r\n  white: {\r\n    \"&,&:focus,&:hover\": {\r\n      backgroundColor: whiteColor,\r\n      color: grayColor[0]\r\n    }\r\n  },\r\n  rose: {\r\n    backgroundColor: roseColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(roseColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(roseColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(roseColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: roseColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(roseColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(roseColor[0]) +\r\n        \", 0.2)\"\r\n    }\r\n  },\r\n  primary: {\r\n    backgroundColor: primaryColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(primaryColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(primaryColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(primaryColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: primaryColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(primaryColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(primaryColor[0]) +\r\n        \", 0.2)\"\r\n    }\r\n  },\r\n  info: {\r\n    backgroundColor: infoColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: infoColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(infoColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(infoColor[0]) +\r\n        \", 0.2)\"\r\n    }\r\n  },\r\n  success: {\r\n    backgroundColor: successColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: successColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(successColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(successColor[0]) +\r\n        \", 0.2)\"\r\n    }\r\n  },\r\n  warning: {\r\n    backgroundColor: warningColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: warningColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(warningColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(warningColor[0]) +\r\n        \", 0.2)\"\r\n    }\r\n  },\r\n  danger: {\r\n    backgroundColor: dangerColor[0],\r\n    boxShadow:\r\n      \"0 2px 2px 0 rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \", 0.14), 0 3px 1px -2px rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \", 0.2), 0 1px 5px 0 rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \", 0.12)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: dangerColor[0],\r\n      boxShadow:\r\n        \"0 14px 26px -12px rgba(\" +\r\n        hexToRgb(dangerColor[0]) +\r\n        \", 0.42), 0 4px 23px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(dangerColor[0]) +\r\n        \", 0.2)\"\r\n    }\r\n  },\r\n  simple: {\r\n    \"&,&:focus,&:hover\": {\r\n      color: whiteColor,\r\n      background: \"transparent\",\r\n      boxShadow: \"none\"\r\n    },\r\n    \"&$rose\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: roseColor[0]\r\n      }\r\n    },\r\n    \"&$primary\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: primaryColor[0]\r\n      }\r\n    },\r\n    \"&$info\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: infoColor[0]\r\n      }\r\n    },\r\n    \"&$success\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: successColor[0]\r\n      }\r\n    },\r\n    \"&$warning\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: warningColor[0]\r\n      }\r\n    },\r\n    \"&$danger\": {\r\n      \"&,&:focus,&:hover,&:visited\": {\r\n        color: dangerColor[0]\r\n      }\r\n    }\r\n  },\r\n  transparent: {\r\n    \"&,&:focus,&:hover\": {\r\n      color: \"inherit\",\r\n      background: \"transparent\",\r\n      boxShadow: \"none\"\r\n    }\r\n  },\r\n  disabled: {\r\n    opacity: \"0.65\",\r\n    pointerEvents: \"none\"\r\n  },\r\n  lg: {\r\n    padding: \"1.125rem 2.25rem\",\r\n    fontSize: \"0.875rem\",\r\n    lineHeight: \"1.333333\",\r\n    borderRadius: \"0.2rem\"\r\n  },\r\n  sm: {\r\n    padding: \"0.40625rem 1.25rem\",\r\n    fontSize: \"0.6875rem\",\r\n    lineHeight: \"1.5\",\r\n    borderRadius: \"0.2rem\"\r\n  },\r\n  round: {\r\n    borderRadius: \"30px\"\r\n  },\r\n  block: {\r\n    width: \"100% !important\"\r\n  },\r\n  link: {\r\n    \"&,&:hover,&:focus\": {\r\n      backgroundColor: \"transparent\",\r\n      color: grayColor[0],\r\n      boxShadow: \"none\"\r\n    }\r\n  },\r\n  justIcon: {\r\n    paddingLeft: \"12px\",\r\n    paddingRight: \"12px\",\r\n    fontSize: \"20px\",\r\n    height: \"41px\",\r\n    minWidth: \"41px\",\r\n    width: \"41px\",\r\n    \"& .fab,& .fas,& .far,& .fal,& svg,& .material-icons\": {\r\n      marginRight: \"0px\"\r\n    },\r\n    \"&$lg\": {\r\n      height: \"57px\",\r\n      minWidth: \"57px\",\r\n      width: \"57px\",\r\n      lineHeight: \"56px\",\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        fontSize: \"32px\",\r\n        lineHeight: \"56px\"\r\n      },\r\n      \"& svg\": {\r\n        width: \"32px\",\r\n        height: \"32px\"\r\n      }\r\n    },\r\n    \"&$sm\": {\r\n      height: \"30px\",\r\n      minWidth: \"30px\",\r\n      width: \"30px\",\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        fontSize: \"17px\",\r\n        lineHeight: \"29px\"\r\n      },\r\n      \"& svg\": {\r\n        width: \"17px\",\r\n        height: \"17px\"\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default buttonStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n\r\n// material-ui components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/buttonStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function RegularButton(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    color,\r\n    round,\r\n    children,\r\n    disabled,\r\n    simple,\r\n    size,\r\n    block,\r\n    link,\r\n    justIcon,\r\n    className,\r\n    muiClasses,\r\n    ...rest\r\n  } = props;\r\n  const btnClasses = classNames({\r\n    [classes.button]: true,\r\n    [classes[size]]: size,\r\n    [classes[color]]: color,\r\n    [classes.round]: round,\r\n    [classes.disabled]: disabled,\r\n    [classes.simple]: simple,\r\n    [classes.block]: block,\r\n    [classes.link]: link,\r\n    [classes.justIcon]: justIcon,\r\n    [className]: className\r\n  });\r\n  return (\r\n    <Button {...rest} classes={muiClasses} className={btnClasses}>\r\n      {children}\r\n    </Button>\r\n  );\r\n}\r\n\r\nRegularButton.propTypes = {\r\n  color: PropTypes.oneOf([\r\n    \"primary\",\r\n    \"info\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"rose\",\r\n    \"white\",\r\n    \"transparent\"\r\n  ]),\r\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\r\n  simple: PropTypes.bool,\r\n  round: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  block: PropTypes.bool,\r\n  link: PropTypes.bool,\r\n  justIcon: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  // use this to pass the classes props from Material-UI\r\n  muiClasses: PropTypes.object,\r\n  children: PropTypes.node\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nexport function InputComponent(props){\r\n  var { type, label, value, onChange, required, oneRow, disabled, options,\r\n    on, off, rows, step, maxStep, minStep, marks, helper,\r\n    ...rest } = props;\r\n  let component;\r\n  switch (type) {\r\n    case \"text\":\r\n      component = (\r\n        <Box m={0} pt={2}>\r\n          <TextField\r\n            label={label}\r\n            onChange={onChange}\r\n            value={value}\r\n            margin=\"normal\"\r\n            required={required}\r\n            disabled={disabled}\r\n            helperText={helper}\r\n            fullWidth\r\n          />\r\n        </Box>\r\n      )\r\n      break;\r\n    case \"password\":\r\n      component = (\r\n        <Box m={0} pt={2}>\r\n          <TextField\r\n            label={label}\r\n            onChange={onChange}\r\n            value={value}\r\n            type=\"password\"\r\n            margin=\"normal\"\r\n            required={required}\r\n            disabled={disabled}\r\n            fullWidth\r\n          />\r\n        </Box>\r\n      )\r\n      break;\r\n    case \"file\":\r\n      component = (\r\n        <Box m={0} pt={2}>\r\n          <TextField\r\n            label={label}\r\n            onChange={onChange}\r\n            type=\"file\"\r\n            margin=\"normal\"\r\n            required={required}\r\n            disabled={disabled}\r\n            fullWidth\r\n          />\r\n        </Box>\r\n      )\r\n      break;\r\n    case \"textarea\":\r\n      // var { rows } = props;\r\n      if (rows < 2) {\r\n        rows = 3\r\n      }\r\n      component = (\r\n        <Box m={0} pt={2}>\r\n          <TextField\r\n            label={label}\r\n            onChange={onChange}\r\n            value={value}\r\n            margin=\"normal\"\r\n            required={required}\r\n            disabled={disabled}\r\n            rowsMax={rows}\r\n            multiline\r\n            fullWidth\r\n          />\r\n        </Box>\r\n      )\r\n      break;\r\n    case \"select\":\r\n      component = (\r\n        <Box m={0} pt={2}>\r\n          <InputLabel>{label}</InputLabel>\r\n          <Select\r\n            value={value}\r\n            onChange={onChange}\r\n            required={required}\r\n            disabled={disabled}\r\n            fullWidth\r\n          >\r\n            {\r\n              options.map((option, key) =>(\r\n                <MenuItem value={option.value} key={key} disabled={option.disabled}>{option.label}</MenuItem>\r\n              ))\r\n            }\r\n          </Select>\r\n        </Box>\r\n      )\r\n      break;\r\n    case \"radio\":\r\n      component = (\r\n        <Box m={0} pt={2}>\r\n          <FormControl component=\"fieldset\" fullWidth disabled={disabled} >\r\n            <FormLabel component=\"legend\">{label}</FormLabel>\r\n            <RadioGroup name=\"type\" value={value} onChange={onChange} row>\r\n              <Box display='flex' alignItems='center'>\r\n                {\r\n                  options.map((option, key) =>(\r\n                    <Box key={key}>\r\n                      <FormControlLabel value={option.value} control={<Radio />} label={option.label}/>\r\n                    </Box>\r\n                  ))\r\n                }\r\n              </Box>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Box>\r\n      )\r\n      break;\r\n    case \"switch\":\r\n      // const { on, off } = props;\r\n      component = (\r\n        <Box m={0} pt={2}>\r\n          <InputLabel>{label}</InputLabel>\r\n          <Grid item>\r\n            {off}\r\n            <Switch\r\n              checked={value}\r\n              onChange={onChange}\r\n              color=\"primary\"\r\n            />\r\n            {on}\r\n          </Grid>\r\n        </Box>\r\n      )\r\n      break;\r\n    case \"checkbox\":\r\n      component = (\r\n        <Box m={0} pt={2}>\r\n          <FormControl component=\"fieldset\" fullWidth>\r\n            <FormLabel component=\"legend\">{label}</FormLabel>\r\n            <FormGroup>\r\n              <Grid container>\r\n                {\r\n                    options.map((option, key) => {\r\n                      const tagValue = option.value;\r\n                      const tagLabel = option.label;\r\n                      let checked;\r\n                      if (value.has(tagValue)){\r\n                        checked = value.get(tagValue);\r\n                      }else{\r\n                        checked = false;\r\n                      }\r\n                      return (\r\n                        <Grid item xs={6} sm={3} key={key}>\r\n                          <FormControlLabel\r\n                            control={<Checkbox checked={checked} onChange={onChange(tagValue)} value={tagValue}/>}\r\n                            label={tagLabel}\r\n                          />\r\n                        </Grid>\r\n                      )\r\n                    })\r\n                }\r\n              </Grid>\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Box>\r\n      )\r\n      break;\r\n    case \"slider\":\r\n    // const { step, maxStep, minStep, marks } = props;\r\n      component = (\r\n        <Box m={0} pt={2}>\r\n          <FormLabel component=\"legend\">{label}</FormLabel>\r\n          <Slider\r\n            color=\"secondary\"\r\n            value={value}\r\n            max={maxStep}\r\n            min={minStep}\r\n            step={step}\r\n            valueLabelDisplay=\"auto\"\r\n            marks={marks}\r\n            onChange={onChange}\r\n          />\r\n        </Box>\r\n      );\r\n      break;\r\n    default:\r\n      return <div/>;\r\n  }\r\n  var container = (\r\n    <Grid item {...rest}>\r\n      {component}\r\n    </Grid>\r\n  );\r\n\r\n  if (oneRow){\r\n    return (\r\n      <Grid item xs={12}>\r\n        {container}\r\n      </Grid>\r\n    );\r\n  }else{\r\n    return container;\r\n  }\r\n}\r\n\r\nInputComponent.propTypes = {\r\n  type: PropTypes.oneOf([\"text\", \"password\",\"textarea\", \"file\", \"select\", \"radio\", \"switch\", \"checkbox\", \"slider\"]).isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.any,\r\n  onChange: PropTypes.func,\r\n  required: PropTypes.bool,\r\n  oneRow: PropTypes.bool,\r\n  xs: PropTypes.number,\r\n  sm: PropTypes.number,\r\n  md: PropTypes.number,\r\n  lg: PropTypes.number,\r\n  xl: PropTypes.number,\r\n  on: PropTypes.string,\r\n  off: PropTypes.string,\r\n  rows: PropTypes.number,\r\n  step: PropTypes.number,\r\n  maxStep: PropTypes.number,\r\n  minStep: PropTypes.number,\r\n  marks: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string.isRequired,\r\n      value: PropTypes.any.isRequired,\r\n    })\r\n  ),\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string.isRequired,\r\n      value: PropTypes.any.isRequired,\r\n      disabled: PropTypes.bool,\r\n    })\r\n  ),\r\n  helper: PropTypes.string,\r\n};\r\n\r\nexport default function InputList(props){\r\n  const { inputs } = props;\r\n  return (\r\n    <Grid container>\r\n      {\r\n        inputs.map((input, key) => (\r\n          <InputComponent key={key} {...input}/>\r\n        ))\r\n      }\r\n    </Grid>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InnerBackdrop from '@material-ui/core/Backdrop';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport default function Backdrop(props){\r\n  const classes = useStyles();\r\n  const {children, ...rest} = props;\r\n  return (\r\n    <InnerBackdrop className={classes.backdrop} {...rest}>\r\n      {children}\r\n    </InnerBackdrop>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst styles = {\r\n  grid: {\r\n    padding: \"0 15px !important\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function GridItem(props) {\r\n  const classes = useStyles();\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <Grid item {...rest} className={classes.grid}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nGridItem.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n","import {\r\n  defaultFont,\r\n  primaryBoxShadow,\r\n  infoBoxShadow,\r\n  successBoxShadow,\r\n  warningBoxShadow,\r\n  dangerBoxShadow,\r\n  roseBoxShadow,\r\n  whiteColor,\r\n  blackColor,\r\n  grayColor,\r\n  infoColor,\r\n  successColor,\r\n  dangerColor,\r\n  roseColor,\r\n  primaryColor,\r\n  warningColor,\r\n  hexToRgb\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst snackbarContentStyle = {\r\n  root: {\r\n    ...defaultFont,\r\n    flexWrap: \"unset\",\r\n    position: \"relative\",\r\n    padding: \"20px 15px\",\r\n    lineHeight: \"20px\",\r\n    marginBottom: \"20px\",\r\n    fontSize: \"14px\",\r\n    backgroundColor: whiteColor,\r\n    color: grayColor[7],\r\n    borderRadius: \"3px\",\r\n    minWidth: \"unset\",\r\n    maxWidth: \"unset\",\r\n    boxShadow:\r\n      \"0 12px 20px -10px rgba(\" +\r\n      hexToRgb(whiteColor) +\r\n      \", 0.28), 0 4px 20px 0px rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \", 0.12), 0 7px 8px -5px rgba(\" +\r\n      hexToRgb(whiteColor) +\r\n      \", 0.2)\"\r\n  },\r\n  top20: {\r\n    top: \"20px\"\r\n  },\r\n  top40: {\r\n    top: \"40px\"\r\n  },\r\n  info: {\r\n    backgroundColor: infoColor[3],\r\n    color: whiteColor,\r\n    ...infoBoxShadow\r\n  },\r\n  success: {\r\n    backgroundColor: successColor[3],\r\n    color: whiteColor,\r\n    ...successBoxShadow\r\n  },\r\n  warning: {\r\n    backgroundColor: warningColor[3],\r\n    color: whiteColor,\r\n    ...warningBoxShadow\r\n  },\r\n  danger: {\r\n    backgroundColor: dangerColor[3],\r\n    color: whiteColor,\r\n    ...dangerBoxShadow\r\n  },\r\n  primary: {\r\n    backgroundColor: primaryColor[3],\r\n    color: whiteColor,\r\n    ...primaryBoxShadow\r\n  },\r\n  rose: {\r\n    backgroundColor: roseColor[3],\r\n    color: whiteColor,\r\n    ...roseBoxShadow\r\n  },\r\n  message: {\r\n    padding: \"0\",\r\n    display: \"block\",\r\n    maxWidth: \"89%\"\r\n  },\r\n  close: {\r\n    width: \"11px\",\r\n    height: \"11px\"\r\n  },\r\n  iconButton: {\r\n    width: \"24px\",\r\n    height: \"24px\",\r\n    padding: \"0px\"\r\n  },\r\n  icon: {\r\n    display: \"block\",\r\n    left: \"15px\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    marginTop: \"-15px\",\r\n    width: \"30px\",\r\n    height: \"30px\"\r\n  },\r\n  infoIcon: {\r\n    color: infoColor[3]\r\n  },\r\n  successIcon: {\r\n    color: successColor[3]\r\n  },\r\n  warningIcon: {\r\n    color: warningColor[3]\r\n  },\r\n  dangerIcon: {\r\n    color: dangerColor[3]\r\n  },\r\n  primaryIcon: {\r\n    color: primaryColor[3]\r\n  },\r\n  roseIcon: {\r\n    color: roseColor[3]\r\n  },\r\n  iconMessage: {\r\n    paddingLeft: \"50px\",\r\n    display: \"block\"\r\n  },\r\n  actionRTL: {\r\n    marginLeft: \"-8px\",\r\n    marginRight: \"auto\"\r\n  }\r\n};\r\n\r\nexport default snackbarContentStyle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snack from \"@material-ui/core/SnackbarContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// @material-ui/icons\r\nimport Close from \"@material-ui/icons/Close\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/snackbarContentStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function SnackbarContent(props) {\r\n  const classes = useStyles();\r\n  const { message, color, close, icon, rtlActive } = props;\r\n  var action = [];\r\n  const messageClasses = classNames({\r\n    [classes.iconMessage]: icon !== undefined\r\n  });\r\n  if (close !== undefined) {\r\n    action = [\r\n      <IconButton\r\n        className={classes.iconButton}\r\n        key=\"close\"\r\n        aria-label=\"Close\"\r\n        color=\"inherit\"\r\n      >\r\n        <Close className={classes.close} />\r\n      </IconButton>\r\n    ];\r\n  }\r\n  return (\r\n    <Snack\r\n      message={\r\n        <div>\r\n          {icon !== undefined ? <props.icon className={classes.icon} /> : null}\r\n          <span className={messageClasses}>{message}</span>\r\n        </div>\r\n      }\r\n      classes={{\r\n        root: classes.root + \" \" + classes[color],\r\n        message: classes.message,\r\n        action: classNames({ [classes.actionRTL]: rtlActive })\r\n      }}\r\n      action={action}\r\n    />\r\n  );\r\n}\r\n\r\nSnackbarContent.propTypes = {\r\n  message: PropTypes.node.isRequired,\r\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\r\n  close: PropTypes.bool,\r\n  icon: PropTypes.object,\r\n  rtlActive: PropTypes.bool\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Backdrop from 'components/Backdrop/Backdrop';\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\n\r\nexport default function CustomDialog(props){\r\n  const { open, size, operatable, promptPosition, prompt, title, content, buttons, hideBackdrop} = props;\r\n  let promptElement;\r\n  if (prompt){\r\n    promptElement = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={prompt} color=\"warning\"/>\r\n      </GridItem>\r\n    );\r\n  }else{\r\n    promptElement = <GridItem xs={12}/>;\r\n  }\r\n  let contentElement;\r\n  if ('top' === promptPosition){\r\n    contentElement = (\r\n        <Grid container>\r\n          {promptElement}\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n        </Grid>\r\n    );\r\n  }else{\r\n    contentElement = (\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {promptElement}\r\n        </Grid>\r\n    );\r\n  }\r\n  var operates = [];\r\n  if (operatable){\r\n    buttons.forEach((button, key) => {\r\n      operates.push(\r\n        <Button onClick={button.onClick} color={button.color} key={key}>\r\n          {button.label}\r\n        </Button>\r\n      )\r\n    });\r\n  }\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      maxWidth={size}\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <Backdrop open={!hideBackdrop && !operatable}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        {contentElement}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Box display=\"block\" displayPrint=\"none\">\r\n          {operates}\r\n        </Box>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n// import { Redirect } from \"@reach/router\";\r\n\r\nconst SessionTagName = 'nano-session-data';\r\nconst LanguageTagName = 'nano-language-data';\r\n\r\nexport function saveLoggedSession(session){\r\n  localStorage.setItem(SessionTagName, JSON.stringify(session));\r\n}\r\n\r\nexport function getLoggedSession(){\r\n  var sessionData = localStorage.getItem(SessionTagName);\r\n  if (!sessionData || 0 === sessionData.length){\r\n    //no session available\r\n    return null;\r\n  }\r\n  var s = JSON.parse(sessionData);\r\n  if (!s.id){\r\n    return null;\r\n  }\r\n  return s;\r\n}\r\n\r\nexport function logoutSession(){\r\n  localStorage.setItem(SessionTagName, \"\");\r\n}\r\n\r\n//KiB based\r\nexport function bandwidthToString(bandwidthInKiB){\r\n  const MiB = 1 << 10;\r\n  const GiB = 1 << 20;\r\n  if (bandwidthInKiB >= GiB){\r\n    return (bandwidthInKiB / GiB).toString() + ' GiB/s';\r\n  }else if (bandwidthInKiB >= MiB){\r\n    return (bandwidthInKiB / MiB).toString() + ' MiB/s';\r\n  }else{\r\n    return bandwidthInKiB.toString() + ' KiB/s';\r\n  }\r\n}\r\n\r\n//MiB based\r\nexport function quotaToString(quotaInMiB){\r\n  const GiB = 1 << 10;\r\n  if (quotaInMiB >= GiB){\r\n    return (quotaInMiB / GiB).toString() + ' GiB';\r\n  }else{\r\n    return quotaInMiB.toString() + ' MiB';\r\n  }\r\n}\r\n\r\n//MiB based\r\nexport function usageToString(used, quota){\r\n  const GiB = 1 << 10;\r\n  if (quota >= GiB){\r\n    return (used / GiB).toFixed(2) + ' / ' + (quota / GiB).toString() + ' GiB';\r\n  }else{\r\n    return used.toFixed(2) + ' / ' + quota.toString() + ' MiB';\r\n  }\r\n}\r\n\r\nexport function redirectToLogin(){\r\n  // return  <Redirect to={'/login/?previous=' + encodeURIComponent(window.location.pathname)} noThrow/>;\r\n  return  <Redirect to={'/login/?previous=' + encodeURIComponent(window.location.pathname + window.location.search)}/>;\r\n}\r\n\r\nexport function getLanguage(){\r\n  const defaultLang = 'cn';\r\n  var langData = localStorage.getItem(LanguageTagName);\r\n  if (!langData || 0 === langData.length){\r\n    return defaultLang;\r\n  }\r\n  var lang = JSON.parse(langData);\r\n  if (!lang.lang){\r\n    return defaultLang;\r\n  }\r\n  return lang.lang;\r\n}\r\n\r\nexport function changeLanguage(lang){\r\n  var configData = localStorage.getItem(LanguageTagName);\r\n  if (!configData || 0 === configData.length){\r\n    return false;\r\n  }\r\n  var config = JSON.parse(configData);\r\n  if (!config.lang){\r\n    return false;\r\n  }\r\n  if (config.lang === lang){\r\n    return true;\r\n  }\r\n  config.lang = lang;\r\n  localStorage.setItem(LanguageTagName, JSON.stringify(config));\r\n  return true;\r\n}\r\n\r\nexport function bytesToString(bytes){\r\n  const KiB = 1 << 10;\r\n  const MiB = 1 << 20;\r\n  const GiB = 1 << 30;\r\n  const toString = (size, radix, unit) =>{\r\n    if (0 === size % radix){\r\n      return (size / radix).toString() + ' ' + unit;\r\n    }else{\r\n      return (size / radix).toFixed(2) + ' ' + unit;\r\n    }\r\n  }\r\n  if (bytes >= GiB){\r\n    return toString(bytes, GiB, 'GB');\r\n  }else if (bytes >= MiB){\r\n    return toString(bytes, MiB, 'MB');\r\n  }else if (bytes >= KiB){\r\n    return toString(bytes, KiB, 'KB');\r\n  }else{\r\n    return bytes.toString() + ' Bytes';\r\n  }\r\n}\r\n\r\nexport function bpsToString(bytes){\r\n  const KiB = 1 << 7;\r\n  const MiB = 1 << 17;\r\n  const GiB = 1 << 27;\r\n  const toString = (size, radix, unit) =>{\r\n    if (0 === size % radix){\r\n      return (size / radix).toString() + ' ' + unit;\r\n    }else{\r\n      return (size / radix).toFixed(2) + ' ' + unit;\r\n    }\r\n  }\r\n  if (bytes >= GiB){\r\n    return toString(bytes, GiB, 'Gb/s');\r\n  }else if (bytes >= MiB){\r\n    return toString(bytes, MiB, 'Mb/s');\r\n  }else if (bytes >= KiB){\r\n    return toString(bytes, KiB, 'Kb/s');\r\n  }else{\r\n    return bytes.toString() + ' Bits/s';\r\n  }\r\n}\r\n\r\nexport function truncateToRadix(number, radix){\r\n  const base = Math.pow(10, radix);\r\n  return Math.round(number * base) / base;\r\n}\r\n","import axios from \"axios\";\r\nimport { getLoggedSession } from 'utils.js';\r\n\r\n// const apiRoot = 'http://192.168.3.224:5870/api/v1';\r\n// const apiRoot = 'http://192.168.3.26:5870/api/v1';\r\n// const apiRoot = 'http://192.168.1.111:5870/api/v1';\r\n// const apiRoot = 'http://192.168.1.64:5870/api/v1';\r\nconst apiRoot = '/api/v1';\r\nconst HeaderNanoSession = \"Nano-Session\";\r\nconst currentVersion = '1.3.1';\r\n\r\nexport function getCurrentVersion(){\r\n  return currentVersion;\r\n}\r\n\r\nexport function getAllMenus(lang){\r\n  const i18n = {\r\n    'en':{\r\n      dashboard: 'Dashboard',\r\n      computePool: 'Compute Pools',\r\n      addressPool: 'Address Pools',\r\n      storagePool: 'Storage Pools',\r\n      instance: 'Instances',\r\n      diskImage: 'Disk Image',\r\n      mediaImage: 'Media Image',\r\n      systemTempaltes: 'System Templates',\r\n      securityPolicies: 'Security Policies',\r\n      user: 'Users',\r\n      log: 'Logs',\r\n      visibility: 'Resource Visibility',\r\n    },\r\n    'cn':{\r\n      dashboard: '仪表盘',\r\n      computePool: '计算资源池',\r\n      addressPool: '地址资源池',\r\n      storagePool: '存储资源池',\r\n      instance: '云主机实例',\r\n      diskImage: '磁盘镜像',\r\n      mediaImage: '光盘镜像',\r\n      systemTempaltes: '系统模板',\r\n      securityPolicies: '安全策略组',\r\n      user: '用户',\r\n      log: '日志',\r\n      visibility: '资源可见性',\r\n    },\r\n  }\r\n  const texts = i18n[lang];\r\n  const menus = [\r\n    {\r\n      value: 'dashboard',\r\n      label: texts.dashboard,\r\n    },\r\n    {\r\n      value: 'compute_pool',\r\n      label: texts.computePool,\r\n    },\r\n    {\r\n      value: 'address_pool',\r\n      label: texts.addressPool,\r\n    },\r\n    {\r\n      value: 'storage_pool',\r\n      label: texts.storagePool,\r\n    },\r\n    {\r\n      value: 'instance',\r\n      label: texts.instance,\r\n    },\r\n    {\r\n      value: 'image',\r\n      label: texts.diskImage,\r\n    },\r\n    {\r\n      value: 'media',\r\n      label: texts.mediaImage,\r\n    },\r\n    {\r\n      value: 'templates',\r\n      label: texts.systemTempaltes,\r\n    },\r\n    {\r\n      value: 'policies',\r\n      label: texts.securityPolicies,\r\n    },\r\n    {\r\n      value: 'user',\r\n      label: texts.user,\r\n    },\r\n    {\r\n      value: 'log',\r\n      label: texts.log,\r\n    },\r\n    {\r\n      value: 'visibility',\r\n      label: texts.visibility,\r\n    },\r\n  ];\r\n  return menus;\r\n}\r\n\r\nexport function loginUser(name, password, onSuccess, onFail){\r\n  const generateNonce = () =>{\r\n    const length = 16;\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for(var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n  };\r\n  var request = {\r\n    user: name,\r\n    password: password,\r\n    nonce: generateNonce(),\r\n  };\r\n  var url = '/sessions/';\r\n  nakePostRequest(url, request, onSuccess, onFail);\r\n}\r\n\r\nexport function updateSession(onFail){\r\n  var session = getLoggedSession();\r\n  if (null == session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var url = apiRoot + '/sessions/' + session.id;\r\n  var headers = {\r\n    [HeaderNanoSession]:session.id,\r\n  };\r\n  axios.put(url, \"\", {\r\n    headers: headers,\r\n  })\r\n  .then(({data})=>{\r\n    if (0 !== data.error_code){\r\n      onFail(data.message);\r\n      return\r\n    }\r\n    return;\r\n  })\r\n  .catch((e) =>{\r\n    onFail(e.message);\r\n  })\r\n}\r\n\r\nexport function openMonitorChannel(instanceID, onSuccess, onFail){\r\n  const url = '/monitor_channels/';\r\n  const request = {\r\n    guest: instanceID,\r\n  };\r\n  const onOperateSuccess = data =>{\r\n    onSuccess(data.id, data.password);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function getMonitorURL(channelID){\r\n  const WSPrefix = \"ws://\";\r\n  const HTTPPrefix = \"http://\";\r\n  const HTTPSPrefix = \"https://\";\r\n  var url = apiRoot + '/monitor_channels/' + channelID;\r\n  if (url.startsWith(WSPrefix)){\r\n    return url\r\n  }else if (url.startsWith(HTTPPrefix)){\r\n    return url.replace(HTTPPrefix, WSPrefix);\r\n  }else if (url.startsWith(HTTPSPrefix)){\r\n    return url.replace(HTTPSPrefix, WSPrefix);\r\n  }else{\r\n    //plain url\r\n    var hostURL = WSPrefix + window.location.hostname;\r\n    if (window.location.port){\r\n      hostURL += \":\" + window.location.port;\r\n    }\r\n    return hostURL + url;\r\n  }\r\n}\r\n\r\n//Zone status\r\nexport function getZoneStatus(onSuccess, onFail){\r\n  getRequest('/compute_zone_status/', onSuccess, onFail);\r\n}\r\n\r\n//Compute Pool Status\r\nexport function getAllComputePoolStatus(onSuccess, onFail){\r\n  getRequest('/compute_pool_status/', onSuccess, onFail);\r\n}\r\n\r\n//Compute Cell Status\r\nexport function queryComputeCellStatus(poolName, onSuccess, onFail){\r\n  getRequest('/compute_cell_status/' + poolName, onSuccess, onFail);\r\n}\r\n\r\n//Compute pools\r\nexport function getAllComputePools(onSuccess, onFail){\r\n  getRequest('/compute_pools/', onSuccess, onFail);\r\n}\r\n\r\nexport function getComputePool(poolName, onSuccess, onFail){\r\n  var url = '/compute_pools/' + poolName;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function createComputePool(poolName, storage, network, failover, onSuccess, onFail){\r\n  var url = '/compute_pools/' + poolName;\r\n  var request = {\r\n    storage: storage,\r\n    network: network,\r\n    failover: failover,\r\n  }\r\n  const onCreateSuccess = () =>{\r\n    onSuccess(poolName);\r\n  }\r\n  postRequest(url, request, onCreateSuccess, onFail);\r\n}\r\n\r\nexport function modifyComputePool(poolName, storage, network, failover, onSuccess, onFail){\r\n  var url = '/compute_pools/' + poolName;\r\n  var request = {\r\n    storage: storage,\r\n    network: network,\r\n    failover: failover,\r\n  }\r\n  const onModifySuccess = () => {\r\n    onSuccess(poolName);\r\n  }\r\n  putRequest(url, request, onModifySuccess, onFail);\r\n}\r\n\r\nexport function deleteComputePool(poolName, onSuccess, onFail){\r\n  const onDeleteSuccess = () => {\r\n    onSuccess(poolName);\r\n  }\r\n  const onDeleteFail = (msg) => {\r\n    onFail('delete compute pool \"' + poolName +'\" fail: ' + msg);\r\n  }\r\n  deleteRequest('/compute_pools/' + poolName, onDeleteSuccess, onDeleteFail);\r\n}\r\n\r\n//compute cells\r\nexport function queryUnallocatedComputeCells(onSuccess, onFail){\r\n  getRequest('/compute_pool_cells/', onSuccess, onFail);\r\n}\r\n\r\nexport function queryComputeCellsInPool(poolName, onSuccess, onFail){\r\n  var url = '/compute_pool_cells/' + poolName;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function addComputeCell(poolName, cellName, onSuccess, onFail){\r\n  var url = '/compute_pool_cells/' + poolName + '/' + cellName;\r\n  const onAddSuccess = () =>{\r\n    onSuccess(poolName, cellName);\r\n  }\r\n  postRequest(url, \"\", onAddSuccess, onFail);\r\n}\r\n\r\nexport function modifyComputeCell(poolName, cellName, enable, onSuccess, onFail){\r\n  var url = '/compute_pool_cells/' + poolName + '/' + cellName;\r\n  var request = {\r\n    enable: enable,\r\n  }\r\n  const onModifySuccess = () =>{\r\n    onSuccess(poolName, cellName, enable);\r\n  }\r\n  putRequest(url, request, onModifySuccess, onFail);\r\n}\r\n\r\nexport function removeComputeCell(poolName, cellName, onSuccess, onFail){\r\n  var url = '/compute_pool_cells/' + poolName + '/' + cellName;\r\n  const onRemoveSuccess = () =>{\r\n    onSuccess(poolName, cellName);\r\n  }\r\n  const onRemoveFail = (msg) =>{\r\n    onFail('remove cell \"'+ cellName + '\" from pool \"' + poolName +'\" fail: ' + msg);\r\n  }\r\n  deleteRequest(url, onRemoveSuccess, onRemoveFail);\r\n}\r\n\r\nexport function getComputeCell(poolName, cellName, onSuccess, onFail){\r\n  var url = '/compute_pool_cells/' + poolName + '/' + cellName;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function queryComputeCellStorages(poolName, cellName, onSuccess, onFail){\r\n  const url = '/compute_cell_status/' + poolName + '/' + cellName + \"/storages/\";\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function changeComputeCellStorage(poolName, cellName, pathName, onSuccess, onFail){\r\n  const url = '/compute_cell_status/' + poolName + '/' + cellName + \"/storages/\";\r\n  var payload = {\r\n    default: pathName,\r\n  };\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(cellName, poolName);\r\n  }\r\n  putRequest(url, payload, onOperateSuccess, onFail)\r\n}\r\n\r\n//Storage Pools\r\nexport function getAllStoragePools(onSuccess, onFail){\r\n  getRequest('/storage_pools/', onSuccess, onFail);\r\n}\r\n\r\nexport function getStoragePool(name, onSuccess, onFail){\r\n  getRequest('/storage_pools/' + name, onSuccess, onFail);\r\n}\r\n\r\nexport function createStoragePool(name, type, host, target, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  var request = {\r\n    type: type,\r\n    host: host,\r\n    target: target,\r\n  }\r\n  postRequest('/storage_pools/'+ name, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyStoragePool(name, type, host, target, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  var request = {\r\n    type: type,\r\n    host: host,\r\n    target: target,\r\n  }\r\n  putRequest('/storage_pools/'+ name, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function deleteStoragePool(name, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  deleteRequest('/storage_pools/'+ name, onOperateSuccess, onFail);\r\n}\r\n\r\n//Network Pools\r\nexport function getAllNetworkPools(onSuccess, onFail){\r\n  getRequest('/address_pools/', onSuccess, onFail);\r\n}\r\n\r\nexport function getNetworkPool(name, onSuccess, onFail){\r\n  getRequest('/address_pools/' + name, onSuccess, onFail);\r\n}\r\n\r\nexport function createNetworkPool(name, gateway, provider, dnsList, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  var request = {\r\n    gateway: gateway,\r\n    provider: provider,\r\n    dns: dnsList,\r\n  }\r\n  postRequest('/address_pools/' + name, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyNetworkPool(name, gateway, provider, dnsList, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  var request = {\r\n    gateway: gateway,\r\n    provider: provider,\r\n    dns: dnsList,\r\n  }\r\n  putRequest('/address_pools/' + name, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function deleteNetworkPool(name, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  deleteRequest('/address_pools/' + name, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function queryAddressRanges(name, rangeType, onSuccess, onFail){\r\n  getRequest('/address_pools/' + name + '/' + rangeType + '/ranges/', onSuccess, onFail);\r\n}\r\n\r\nexport function getAddressRangeStatus(poolName, rangeType, startAddress, onSuccess, onFail){\r\n  getRequest('/address_pools/' + poolName + '/'+ rangeType +'/ranges/' + startAddress, onSuccess, onFail);\r\n}\r\n\r\nexport function addAddressRange(poolName, rangeType, startAddress, endAddress, mask, onSuccess, onFail){\r\n  const url = '/address_pools/' + poolName + '/'+ rangeType +'/ranges/' + startAddress;\r\n  const request = {\r\n    end: endAddress,\r\n    netmask: mask,\r\n  }\r\n  const onOperateSuccess = () => {\r\n    onSuccess(startAddress, poolName);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function removeAddressRange(poolName, rangeType, startAddress, onSuccess, onFail){\r\n  const url = '/address_pools/' + poolName + '/'+ rangeType +'/ranges/' + startAddress;\r\n  const onOperateSuccess = () => {\r\n    onSuccess(startAddress, poolName);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\n//Instances\r\nexport function searchGuests(limit, offset, poolName, cellName, keyword, onSuccess, onFail){\r\n  const url = `/search/guests/`;\r\n  const defaultLimit = 20;\r\n  var request = {};\r\n  if (limit) {\r\n    request.limit = limit;\r\n  }else {\r\n    request.limit = defaultLimit;\r\n  }\r\n  if (offset){\r\n    request.offset = offset;\r\n  }\r\n  if (poolName){\r\n    request.pool = poolName;\r\n  }\r\n  if (cellName){\r\n    request.cell = cellName;\r\n  }\r\n  if (keyword){\r\n    request.keyword = keyword;\r\n  }\r\n  postRequest(url, request, onSuccess, onFail);\r\n}\r\n\r\nexport function searchInstances(poolName, cellName, onSuccess, onFail){\r\n  if (!poolName){\r\n    onFail('must specify pool name');\r\n    return;\r\n  }\r\n  var url = '/guest_search/?pool=' + poolName;\r\n  if (cellName){\r\n    url += '&cell=' + cellName;\r\n  }\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function getInstanceConfig(id, onSuccess, onFail, onCreating){\r\n  const onGetSuccess = (status, data) =>{\r\n    if (201 === status){\r\n      const { progress, name, created } = data;\r\n      onCreating(progress, name, created);\r\n    }else if (200 === status){\r\n      onSuccess(data);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  getRequestWithStatus('/guests/' + id, onGetSuccess, onFail);\r\n}\r\n\r\nexport function getInstanceStatus(id, onSuccess, onFail, onCreating){\r\n  const onGetSuccess = (status, data) =>{\r\n    if (201 === status){\r\n      const { progress, name, created } = data;\r\n      onCreating(progress, name, created);\r\n    }else if (200 === status){\r\n      onSuccess(data);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  getRequestWithStatus('/instances/' + id, onGetSuccess, onFail);\r\n}\r\n\r\nexport function createInstance(name, pool, cores, memory, disks, autoStartup,\r\n  fromImage, systemVersion, modules, cloudInit, qos, security_policy, onAccept, onSuccess, onFail){\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      onFail('session expired');\r\n      return;\r\n    }\r\n    var request = {\r\n      name: name,\r\n      owner: session.user,\r\n      group: session.group,\r\n      pool: pool,\r\n      cores: cores,\r\n      memory: memory,\r\n      disks: disks,\r\n      auto_start: autoStartup,\r\n      from_image: fromImage,\r\n      template: systemVersion,\r\n    };\r\n    if (modules){\r\n      request.modules = modules;\r\n    }\r\n    if (cloudInit){\r\n      request.cloud_init = cloudInit;\r\n    }\r\n    if (qos){\r\n      request.qos = qos;\r\n    }\r\n    if (security_policy){\r\n      request.security_policy_group = security_policy;\r\n    }\r\n    const onCreateResponse = (status, data) => {\r\n      if (202 === status){\r\n        onAccept(data.id);\r\n      }else if (200 === status){\r\n        onSuccess(data.id);\r\n      }else{\r\n        onFail('unexpected status ' + status.toString());\r\n      }\r\n    }\r\n    postRequestWithStatus('/guests/', request, onCreateResponse, onFail);\r\n}\r\n\r\nexport function deleteInstance(id, onSuccess, onFail){\r\n  var request = {\r\n    force: false,\r\n  }\r\n  deleteRequestWithPayload('/guests/' + id, request, onSuccess, onFail);\r\n}\r\n\r\nexport function startInstance(id, onSuccess, onFail){\r\n  const onStartSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  postRequest('/instances/' + id, {}, onStartSuccess, onFail);\r\n}\r\n\r\nexport function startInstanceWithMedia(instanceID, imageID, onSuccess, onFail){\r\n  const onStartSuccess = () =>{\r\n    onSuccess(instanceID);\r\n  }\r\n  const request = {\r\n    from_media: true,\r\n    source: imageID,\r\n  }\r\n  postRequest('/instances/' + instanceID, request, onStartSuccess, onFail);\r\n}\r\n\r\nexport function insertMedia(instanceID, imageID, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(instanceID);\r\n  }\r\n  const request = {\r\n    source: imageID,\r\n  }\r\n  postRequest('/instances/' + instanceID + '/media', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function ejectMedia(instanceID, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(instanceID);\r\n  }\r\n  deleteRequest('/instances/' + instanceID + '/media', onOperateSuccess, onFail);\r\n}\r\n\r\nexport function stopInstance(id, onSuccess, onFail){\r\n  const onStopSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  var payload = {\r\n    reboot: false,\r\n    force: false,\r\n  }\r\n  deleteRequestWithPayload('/instances/' + id, payload, onStopSuccess, onFail);\r\n}\r\n\r\nexport function forceStopInstance(id, onSuccess, onFail){\r\n  const onStopSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  var payload = {\r\n    reboot: false,\r\n    force: true,\r\n  }\r\n  deleteRequestWithPayload('/instances/' + id, payload, onStopSuccess, onFail);\r\n}\r\n\r\nexport function restartInstance(id, onSuccess, onFail){\r\n  const onRestartSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  var payload = {\r\n    reboot: true,\r\n    force: false,\r\n  }\r\n  deleteRequestWithPayload('/instances/' + id, payload, onRestartSuccess, onFail);\r\n}\r\n\r\nexport function resetInstance(id, onSuccess, onFail){\r\n  const onRestartSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  var payload = {\r\n    reboot: true,\r\n    force: true,\r\n  }\r\n  deleteRequestWithPayload('/instances/' + id, payload, onRestartSuccess, onFail);\r\n}\r\n\r\nexport function resetSystem(instanceID, imageID, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(instanceID);\r\n  }\r\n  const request = {\r\n    from_image: imageID,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/system/', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function resetMonitorSecret(instanceID, onSuccess, onFail){\r\n  const url = \"/guests/\" + instanceID + \"/monitor/secret\";\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(instanceID);\r\n  }\r\n  putRequest(url, \"\", onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstanceName(instanceID, name, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name, instanceID);\r\n  }\r\n  const request = {\r\n    name: name,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/name/', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstanceCores(instanceID, cores, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(cores, instanceID);\r\n  }\r\n  const request = {\r\n    cores: cores,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/cores', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstanceMemory(instanceID, sizeInBytes, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(sizeInBytes, instanceID);\r\n  }\r\n  const request = {\r\n    memory: sizeInBytes,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/memory', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function setAutoStart(instanceID, enable, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(instanceID);\r\n  }\r\n  const request = {\r\n    enable: enable,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/auto_start', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function resizeInstanceDisk(instanceID, index, sizeInBytes, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(index, sizeInBytes, instanceID);\r\n  }\r\n  const request = {\r\n    size: sizeInBytes,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/disks/resize/' + index.toString(), request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function shrinkInstanceDisk(instanceID, index, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(index, instanceID);\r\n  }\r\n  const request = {\r\n    immediate: false,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/disks/shrink/' + index.toString(), request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstanceAdminPassword(instanceID, user, password, onSuccess, onFail){\r\n  const onOperateSuccess = ({user, password}) =>{\r\n    onSuccess(user, password, instanceID);\r\n  }\r\n  var request = {\r\n  }\r\n  if (user){\r\n    request.user = user;\r\n  }\r\n  if (password){\r\n    request.password = password;\r\n  }\r\n  putRequest('/guests/' + instanceID + '/auth', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function getInstanceAdminPassword(instanceID, onSuccess, onFail){\r\n  const onOperateSuccess = ({user, password}) =>{\r\n    onSuccess(user, password, instanceID);\r\n  }\r\n  getRequest('/guests/' + instanceID + '/auth', onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstancePriority(instanceID, priority, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(priority, instanceID);\r\n  }\r\n  var request = {\r\n    priority: priority,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/qos/cpu', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstanceDiskIOPS(instanceID, iops, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(iops, instanceID);\r\n  }\r\n  var request = {\r\n    write_iops: iops,\r\n    read_iops: iops,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/qos/disk', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyInstanceBandwidth(instanceID, inbound, outbound, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(inbound, outbound, instanceID);\r\n  }\r\n  var request = {\r\n    receive_speed: inbound,\r\n    send_speed: outbound,\r\n  }\r\n  putRequest('/guests/' + instanceID + '/qos/network', request, onOperateSuccess, onFail);\r\n}\r\n\r\n//instance snapshots\r\nexport function queryInstanceSnapshots(instanceID, onSuccess, onFail){\r\n  const url = '/instances/' + instanceID + '/snapshots/';\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function createInstanceSnapshot(instanceID, name, description, onSuccess, onFail){\r\n  const url = '/instances/' + instanceID + '/snapshots/';\r\n  const request = {\r\n    name: name,\r\n    description: description,\r\n  }\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name, instanceID)\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function getInstanceSnapshot(instanceID, name, onSuccess, onFail){\r\n  const url = '/instances/' + instanceID + '/snapshots/' + name;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function deleteInstanceSnapshot(instanceID, name, onSuccess, onFail){\r\n  const url = '/instances/' + instanceID + '/snapshots/' + name;\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name, instanceID)\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function restoreInstanceSnapshot(instanceID, name, onSuccess, onFail){\r\n  const url = '/instances/' + instanceID + '/snapshots/';\r\n  const request = {\r\n    target: name,\r\n  }\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name, instanceID)\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function migrateSingleInstance(sourcePool, sourceCell, targetCell, instanceID, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(instanceID);\r\n  }\r\n  var request = {\r\n    source_pool: sourcePool,\r\n    source_cell: sourceCell,\r\n    target_cell: targetCell,\r\n    instances: [instanceID],\r\n  };\r\n  postRequest('/migrations/', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function migrateInstancesInCell(sourcePool, sourceCell, targetCell, onSuccess, onFail){\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(sourceCell, targetCell);\r\n  }\r\n  var request = {\r\n    source_pool: sourcePool,\r\n    source_cell: sourceCell,\r\n    target_cell: targetCell,\r\n  };\r\n  postRequest('/migrations/', request, onOperateSuccess, onFail);\r\n}\r\n\r\n//guest security policy\r\nexport function getGuestSecurityPolicy(guestID, onSuccess, onFail){\r\n  const url = \"/guests/\" + guestID + \"/security_policy/\";\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function changeGuestSecurityPolicyAction(guestID, action, onSuccess, onFail){\r\n  const url = \"/guests/\" + guestID + \"/security_policy/default_action\";\r\n  var request = {\r\n    action: action,\r\n  };\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(guestID);\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function addGuestSecurityRule(guestID, action, protocol, to_port, onSuccess, onFail){\r\n  const url = \"/guests/\" + guestID + \"/security_policy/rules/\";\r\n  var request = {\r\n    action: action,\r\n    protocol: protocol,\r\n    to_port: to_port,\r\n  };\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(guestID);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyGuestSecurityRule(guestID, index, action, protocol, to_port, onSuccess, onFail){\r\n  const url = \"/guests/\" + guestID + \"/security_policy/rules/\" + index;\r\n  var request = {\r\n    action: action,\r\n    protocol: protocol,\r\n    to_port: to_port,\r\n  };\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(guestID, index);\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function removeGuestSecurityRule(guestID, index, onSuccess, onFail){\r\n  const url = \"/guests/\" + guestID + \"/security_policy/rules/\" + index;\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(guestID, index);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function moveUpGuestSecurityRule(guestID, index, onSuccess, onFail){\r\n  const url = '/guests/' + guestID + '/security_policy/rules/' + index + '/order';\r\n  const request = {\r\n    direction: \"up\",\r\n  }\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(guestID, index);\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function moveDownGuestSecurityRule(guestID, index, onSuccess, onFail){\r\n  const url = '/guests/' + guestID + '/security_policy/rules/' + index + '/order';\r\n  const request = {\r\n    direction: \"down\",\r\n  }\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(guestID, index);\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\n//media Images\r\nexport function searchMediaImages(onSuccess, onFail){\r\n  getRequest('/media_image_search/', onSuccess, onFail);\r\n}\r\n\r\nexport function syncMediaImages(onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var request = {\r\n    owner: session.user,\r\n    group: session.group,\r\n  };\r\n  patchRequest('/media_images/', request, onSuccess, onFail);\r\n}\r\n\r\nexport function getMediaImage(id, onSuccess, onFail){\r\n  var url = '/media_images/' + id;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function createMediaImage(name, description, tags, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var url = '/media_images/';\r\n  var request = {\r\n    name: name,\r\n    description: description,\r\n    tags: tags,\r\n    owner: session.user,\r\n    group: session.group,\r\n  };\r\n  const onModifySuccess = (data) => {\r\n    onSuccess(data.id);\r\n  }\r\n  postRequest(url, request, onModifySuccess, onFail);\r\n}\r\n\r\nexport function modifyMediaImage(id, name, description, tags, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var url = '/media_images/' + id;\r\n  var request = {\r\n    name: name,\r\n    description: description,\r\n    tags: tags,\r\n    owner: session.user,\r\n    group: session.group,\r\n  };\r\n  const onModifySuccess = () => {\r\n    onSuccess(id);\r\n  }\r\n  putRequest(url, request, onModifySuccess, onFail);\r\n}\r\n\r\nexport function deleteMediaImage(id, onSuccess, onFail){\r\n  var url = '/media_images/' + id;\r\n  const onDeleteSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  deleteRequest(url, onDeleteSuccess, onFail);\r\n}\r\n\r\nexport function uploadMediaImage(id, file, onProgress, onSuccess, onFail){\r\n  var url = '/media_images/' + id + '/file/';\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  uploadBinary(url, 'image', file, onProgress, onOperateSuccess, onFail);\r\n}\r\n\r\n//disk Images\r\nexport function searchDiskImages(onSuccess, onFail){\r\n  getRequest('/disk_image_search/', onSuccess, onFail);\r\n}\r\n\r\nexport function syncDiskImages(onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var request = {\r\n    owner: session.user,\r\n    group: session.group,\r\n  };\r\n  patchRequest('/disk_images/', request, onSuccess, onFail);\r\n}\r\n\r\nexport function getDiskImage(id, onSuccess, onFail){\r\n  var url = '/disk_images/' + id;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function createDiskImage(name, guest, description, tags, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var url = '/disk_images/';\r\n  var request = {\r\n    name: name,\r\n    description: description,\r\n    tags: tags,\r\n    owner: session.user,\r\n    group: session.group,\r\n  };\r\n  if (guest){\r\n    request.guest = guest;\r\n  }\r\n  const onOperateSuccess = (data) => {\r\n    onSuccess(data.id);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyDiskImage(id, name, description, tags, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var url = '/disk_images/' + id;\r\n  var request = {\r\n    name: name,\r\n    description: description,\r\n    tags: tags,\r\n    owner: session.user,\r\n    group: session.group,\r\n  };\r\n  const onModifySuccess = () => {\r\n    onSuccess(id);\r\n  }\r\n  putRequest(url, request, onModifySuccess, onFail);\r\n}\r\n\r\nexport function deleteDiskImage(id, onSuccess, onFail){\r\n  var url = '/disk_images/' + id;\r\n  const onDeleteSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  deleteRequest(url, onDeleteSuccess, onFail);\r\n}\r\n\r\nexport function uploadDiskImage(id, file, onProgress, onSuccess, onFail){\r\n  var url = '/disk_images/' + id + '/file/';\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(id);\r\n  }\r\n  uploadBinary(url, 'image', file, onProgress, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function getDiskImageURL(id){\r\n  const url = apiRoot + '/disk_images/' + id + '/file/';\r\n  return url;\r\n}\r\n\r\n//batch operates\r\nexport function batchCreatingGuests(rule, prefix, count, pool, cores, memory, disks, autoStartup,\r\n  fromImage, systemVersion, modules, cloudInit, qos, onAccept, onFail){\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      onFail('session expired');\r\n      return;\r\n    }\r\n    var request = {\r\n      name_rule: rule,\r\n      count: count,\r\n      owner: session.user,\r\n      group: session.group,\r\n      pool: pool,\r\n      cores: cores,\r\n      memory: memory,\r\n      disks: disks,\r\n      auto_start: autoStartup,\r\n      from_image: fromImage,\r\n      template: systemVersion,\r\n    };\r\n    if (prefix){\r\n      request.name_prefix = prefix;\r\n    }\r\n    if (modules){\r\n      request.modules = modules;\r\n    }\r\n    if (cloudInit){\r\n      request.cloud_init = cloudInit;\r\n    }\r\n    if (qos){\r\n      request.qos = qos;\r\n    }\r\n    const onCreateResponse = (status, data) => {\r\n      if (202 === status){\r\n        onAccept(data.id);\r\n      }else{\r\n        onFail('unexpected status ' + status.toString());\r\n      }\r\n    }\r\n    postRequestWithStatus('/batch/create_guest/', request, onCreateResponse, onFail);\r\n}\r\n\r\nexport function checkBatchCreatingStatus(batchID, onProcessing, onSuccess, onFail){\r\n  const url = '/batch/create_guest/' + batchID;\r\n  const onOperateSuccess = (status, data) =>{\r\n    if (202 === status){\r\n      onProcessing(data);\r\n    }else if (200 === status){\r\n      onSuccess(data);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  getRequestWithStatus(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function batchDeletingGuests(idList, onAccept, onFail){\r\n  if(!idList || 0 === idList.length){\r\n    onFail('target is empty');\r\n    return;\r\n  }\r\n  var request = {\r\n    guest: idList,\r\n  };\r\n\r\n  const onOperateSuccess = (status, data) => {\r\n    if (202 === status){\r\n      onAccept(data.id);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  postRequestWithStatus('/batch/delete_guest/', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function checkBatchDeletingStatus(batchID, onProcessing, onSuccess, onFail){\r\n  const url = '/batch/delete_guest/' + batchID;\r\n  const onOperateSuccess = (status, data) =>{\r\n    if (202 === status){\r\n      onProcessing(data);\r\n    }else if (200 === status){\r\n      onSuccess(data);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  getRequestWithStatus(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function batchStoppingGuests(idList, onAccept, onFail){\r\n  if(!idList || 0 === idList.length){\r\n    onFail('target is empty');\r\n    return;\r\n  }\r\n  var request = {\r\n    guest: idList,\r\n  };\r\n\r\n  const onOperateSuccess = (status, data) => {\r\n    if (202 === status){\r\n      onAccept(data.id);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  postRequestWithStatus('/batch/stop_guest/', request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function checkBatchStoppingStatus(batchID, onProcessing, onSuccess, onFail){\r\n  const url = '/batch/stop_guest/' + batchID;\r\n  const onOperateSuccess = (status, data) =>{\r\n    if (202 === status){\r\n      onProcessing(data);\r\n    }else if (200 === status){\r\n      onSuccess(data);\r\n    }else{\r\n      onFail('unexpected status ' + status.toString());\r\n    }\r\n  }\r\n  getRequestWithStatus(url, onOperateSuccess, onFail);\r\n}\r\n\r\n//management\r\n//system templates\r\nexport function querySystemTemplates(onSuccess, onFail){\r\n  const url = \"/templates/\";\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function getSystemTemplate(templateID, onSuccess, onFail){\r\n  const url = \"/templates/\" + templateID;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function createSystemTemplate(name, admin, system, disk, network, display,\r\n  control, usb, tablet, onSuccess, onFail) {\r\n    const url = \"/templates/\";\r\n    var payload = {\r\n      name: name,\r\n      admin: admin,\r\n      operating_system: system,\r\n      disk: disk,\r\n      network: network,\r\n      display: display,\r\n      control: control,\r\n    }\r\n    if (usb){\r\n      payload.usb = usb;\r\n    }\r\n    if (tablet){\r\n      payload.tablet = tablet;\r\n    }\r\n    const onOperateSuccess = ({id}) =>{\r\n      onSuccess(id);\r\n    }\r\n    postRequest(url, payload, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifySystemTemplate(id, name, admin, system, disk, network, display,\r\n  control, usb, tablet, onSuccess, onFail) {\r\n    const url = \"/templates/\" + id;\r\n    var payload = {\r\n      name: name,\r\n      admin: admin,\r\n      operating_system: system,\r\n      disk: disk,\r\n      network: network,\r\n      display: display,\r\n      control: control,\r\n    }\r\n    if (usb){\r\n      payload.usb = usb;\r\n    }\r\n    if (tablet){\r\n      payload.tablet = tablet;\r\n    }\r\n    const onOperateSuccess = () =>{\r\n      onSuccess(id);\r\n    }\r\n    putRequest(url, payload, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function deleteSystemTemplate(templateID, onSuccess, onFail){\r\n  const url = \"/templates/\" + templateID;\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(templateID);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\n//Security Policy Groups\r\nexport function searchSecurityPolicyGroups(owner, group, enabledOnly, globalOnly, onSuccess, onFail){\r\n  let url = '/search/security_policy_groups/';\r\n  var params = new URLSearchParams();\r\n  if (owner){\r\n    params.append(\"owner\", owner);\r\n  }\r\n  if (group){\r\n    params.append(\"group\", group);\r\n  }\r\n  if (enabledOnly){\r\n    params.append(\"enabled_only\", enabledOnly);\r\n  }\r\n  if (globalOnly){\r\n    params.append(\"global_only\", globalOnly);\r\n  }\r\n  if ('' !== params.toString()){\r\n    url += '?' + params.toString();\r\n  }\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function getSecurityPolicyGroup(policyID, onSuccess, onFail){\r\n  const url = '/security_policy_groups/' + policyID;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function createSecurityPolicyGroup(name, description, enabled, isGlobal,\r\n  action, onSuccess, onFail){\r\n  const url = '/security_policy_groups/';\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var request = {\r\n    name: name,\r\n    description: description,\r\n    user: session.user,\r\n    group: session.group,\r\n    enabled: enabled,\r\n    global: isGlobal,\r\n    default_action: action,\r\n  };\r\n  const onOperateSuccess = ({id}) =>{\r\n    onSuccess(id);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifySecurityPolicyGroup(policyID, name, description, enabled, isGlobal,\r\n  action, onSuccess, onFail){\r\n  const url = '/security_policy_groups/' + policyID;\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var request = {\r\n    name: name,\r\n    description: description,\r\n    user: session.user,\r\n    group: session.group,\r\n    enabled: enabled,\r\n    global: isGlobal,\r\n    default_action: action,\r\n  };\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(policyID);\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function deleteSecurityPolicyGroup(policyID, onSuccess, onFail){\r\n  const url = '/security_policy_groups/' + policyID;\r\n  const onOperateSuccess = () => {\r\n    onSuccess(policyID);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function getSecurityPolicyRules(policyID, onSuccess, onFail){\r\n  const url = '/security_policy_groups/' + policyID + '/rules/';\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function addSecurityPolicyRule(policyID, action, protocol, to_port, onSuccess, onFail){\r\n  const url = '/security_policy_groups/' + policyID + '/rules/';\r\n  const request = {\r\n    action: action,\r\n    protocol: protocol,\r\n    to_port: to_port,\r\n  };\r\n  postRequest(url, request, onSuccess, onFail);\r\n}\r\n\r\nexport function modifySecurityPolicyRule(policyID, index, action, protocol, to_port, onSuccess, onFail){\r\n  const url = '/security_policy_groups/' + policyID + '/rules/' + index;\r\n  const request = {\r\n    action: action,\r\n    protocol: protocol,\r\n    to_port: to_port,\r\n  };\r\n  const onOperateSuccess = () => {\r\n    onSuccess(policyID, index);\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function removeSecurityPolicyRule(policyID, index, onSuccess, onFail){\r\n  const url = '/security_policy_groups/' + policyID + '/rules/' + index;\r\n  const onOperateSuccess = () => {\r\n    onSuccess(policyID, index);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function moveUpSecurityPolicyRule(policyID, index, onSuccess, onFail){\r\n  const url = '/security_policy_groups/' + policyID + '/rules/' + index + '/order';\r\n  const request = {\r\n    direction: 'up',\r\n  };\r\n  const onOperateSuccess = () => {\r\n    onSuccess(policyID, index);\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function moveDownSecurityPolicyRule(policyID, index, onSuccess, onFail){\r\n  const url = '/security_policy_groups/' + policyID + '/rules/' + index + '/order';\r\n  const request = {\r\n    direction: 'down',\r\n  };\r\n  const onOperateSuccess = () => {\r\n    onSuccess(policyID, index);\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\n//roles\r\nexport function queryAllRoles(onSuccess, onFail){\r\n  getRequest('/roles/', onSuccess, onFail);\r\n}\r\n\r\nexport function getRole(role, onSuccess, onFail){\r\n  const url = '/roles/' + role;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function addRole(role, menuList, onSuccess, onFail){\r\n  const url = '/roles/' + role;\r\n  const request = {\r\n    menu: menuList,\r\n  }\r\n  const onOperateSuccess = () => {\r\n    onSuccess(role);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyRole(role, menuList, onSuccess, onFail){\r\n  const url = '/roles/' + role;\r\n  const request = {\r\n    menu: menuList,\r\n  }\r\n  const onOperateSuccess = () => {\r\n    onSuccess(role);\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function removeRole(role, onSuccess, onFail){\r\n  const url = '/roles/' + role;\r\n  const onOperateSuccess = () => {\r\n    onSuccess(role);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\n//groups\r\nexport function queryAllGroups(onSuccess, onFail){\r\n  getRequest('/user_groups/', onSuccess, onFail);\r\n}\r\n\r\nexport function getGroup(group, onSuccess, onFail){\r\n  const url = '/user_groups/' + group;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function addGroup(group, display, roleList, onSuccess, onFail){\r\n  const url = '/user_groups/' + group;\r\n  var request = {\r\n    display: display,\r\n  }\r\n  if(roleList){\r\n    request.role = roleList;\r\n  }\r\n  const onOperateSuccess = () => {\r\n    onSuccess(group);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyGroup(group, display, roleList, onSuccess, onFail){\r\n  const url = '/user_groups/' + group;\r\n  var request = {\r\n  }\r\n  if (display){\r\n    request.display = display;\r\n  }\r\n  if(roleList){\r\n    request.role = roleList;\r\n  }\r\n  const onOperateSuccess = () => {\r\n    onSuccess(group);\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function removeGroup(group, onSuccess, onFail){\r\n  const url = '/user_groups/' + group;\r\n  const onOperateSuccess = () => {\r\n    onSuccess(group);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function queryGroupMembers(group, onSuccess, onFail){\r\n  const url = '/user_groups/' + group + '/members/';\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function addGroupMember(group, member, onSuccess, onFail){\r\n  const url = '/user_groups/' + group + '/members/' + member;\r\n  var request = {\r\n  }\r\n  const onOperateSuccess = () => {\r\n    onSuccess(member, group);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function removeGroupMember(group, member, onSuccess, onFail){\r\n  const url = '/user_groups/' + group + '/members/' + member;\r\n  const onOperateSuccess = () => {\r\n    onSuccess(member, group);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\n//users\r\nexport function queryAllUsers(onSuccess, onFail){\r\n  const url = '/users/';\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function getUser(user, onSuccess, onFail){\r\n  const url = '/users/' + user;\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function createUser(user, password, nick, mail, onSuccess, onFail){\r\n  const url = '/users/' + user;\r\n  var request = {\r\n    password: password,\r\n  }\r\n  if(nick){\r\n    request.nick = nick;\r\n  }\r\n  if(mail){\r\n    request.mail = mail;\r\n  }\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(user);\r\n  }\r\n  postRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function modifyUser(user, nick, mail, onSuccess, onFail){\r\n  const url = '/users/' + user;\r\n  var request = {\r\n  }\r\n  if(nick){\r\n    request.nick = nick;\r\n  }\r\n  if(mail){\r\n    request.mail = mail;\r\n  }\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(user);\r\n  }\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function deleteUser(user, onSuccess, onFail){\r\n  const url = '/users/' + user;\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(user);\r\n  }\r\n  deleteRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function changeUserPassword(name, oldPassword, newPassword, onSuccess, onFail){\r\n  const url = '/users/' + name + '/password/';\r\n  const onOperateSuccess = () =>{\r\n    onSuccess(name);\r\n  }\r\n  const request = {\r\n    old: oldPassword,\r\n    new: newPassword,\r\n  };\r\n  putRequest(url, request, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function searchUsers(group, onSuccess, onFail){\r\n  var url = '/user_search/';\r\n  if(group){\r\n    url += '?group=' + group;\r\n  }\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\n//Visibility\r\nexport function getVisibilities(onSuccess, onFail){\r\n  const url = '/resource_visibilities/';\r\n  getRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function setVisiblities(instance, disk, media, onSuccess, onFail){\r\n  const url = '/resource_visibilities/';\r\n  var request = {\r\n  }\r\n  if(instance){\r\n    request.instance_visible = instance;\r\n  }\r\n  if(disk){\r\n    request.disk_image_visible = disk;\r\n  }\r\n  if(media){\r\n    request.media_image_visible = media;\r\n  }\r\n  putRequest(url, request, onSuccess, onFail);\r\n}\r\n\r\n//logs\r\nexport function queryLogs(limit, start, after, before, onSuccess, onFail){\r\n  var url = '/logs/?limit=' + limit;\r\n  if(start){\r\n    url += '&start=' + start;\r\n  }\r\n  if(after){\r\n    url += '&after=' + after;\r\n  }\r\n  if(before){\r\n    url += '&before=' + before;\r\n  }\r\n  const onOperateSuccess = data => {\r\n    let offset = 0;\r\n    if (start){\r\n      offset = start;\r\n    }\r\n    onSuccess({\r\n      ...data,\r\n      offset: offset,\r\n    })\r\n  }\r\n  getRequest(url, onOperateSuccess, onFail);\r\n}\r\n\r\nexport function writeLog(log, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  var content = session.group + '.' + session.user;\r\n  if (session.address){\r\n    content += '('+ session.address +') : ' + log;\r\n  }else{\r\n    content += ': ' + log;\r\n  }\r\n  const url = '/logs/';\r\n  const request = {\r\n    content: content,\r\n  }\r\n  postRequest(url, request, onSuccess, onFail);\r\n}\r\n\r\nexport function deleteLog(entries, onSuccess, onFail){\r\n  const url = '/logs/';\r\n  const request = {\r\n    entries: entries,\r\n  }\r\n  deleteRequestWithPayload(url, request, onSuccess, onFail);\r\n}\r\n\r\n//system\r\nexport function getSystemStatus(onSuccess, onFail){\r\n  const url = '/system/';\r\n  nakeGetRequest(url, onSuccess, onFail);\r\n}\r\n\r\nexport function initialSystem(user, group, display, role, password,\r\n  menuList, onSuccess, onFail){\r\n  const url = '/system/';\r\n  var request = {\r\n    user: user,\r\n    password: password,\r\n    menu: menuList,\r\n  }\r\n  if(group){\r\n    request.group = group;\r\n  }\r\n  if(display){\r\n    request.display = display;\r\n  }\r\n  if(role){\r\n    request.role = role;\r\n  }\r\n  nakePostRequest(url, request, onSuccess, onFail);\r\n}\r\n\r\n//basic request functions\r\nfunction getRequest(url, onSuccess, onFail){\r\n  callAxios('get', url, null, onSuccess, onFail);\r\n}\r\n\r\nfunction getRequestWithStatus(url, onSuccess, onFail){\r\n  callAxiosWithStatus('get', url, null, onSuccess, onFail);\r\n}\r\n\r\nfunction nakeGetRequest(url, onSuccess, onFail){\r\n  callAxiosWithoutSession('get', url, null, onSuccess, onFail);\r\n}\r\n\r\nfunction postRequest(url, request, onSuccess, onFail){\r\n  callAxios('post', url, request, onSuccess, onFail);\r\n}\r\n\r\nfunction postRequestWithStatus(url, request, onSuccess, onFail){\r\n  callAxiosWithStatus('post', url, request, onSuccess, onFail);\r\n}\r\n\r\nfunction nakePostRequest(url, request, onSuccess, onFail){\r\n  callAxiosWithoutSession('post', url, request, onSuccess, onFail);\r\n}\r\n\r\nfunction putRequest(url, request, onSuccess, onFail){\r\n  callAxios('put', url, request, onSuccess, onFail);\r\n}\r\n\r\nfunction deleteRequest(url, onSuccess, onFail){\r\n  callAxios('delete', url, null, onSuccess, onFail);\r\n}\r\n\r\nfunction patchRequest(url, request, onSuccess, onFail){\r\n  callAxios('patch', url, request, onSuccess, onFail);\r\n}\r\n\r\nfunction deleteRequestWithPayload(url, request, onSuccess, onFail){\r\n  callAxios('delete', url, request, onSuccess, onFail);\r\n}\r\n\r\nfunction uploadBinary(url, fileTag, fileData, onProgress, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    onFail('session expired');\r\n    return;\r\n  }\r\n  const onUploadProgress = e =>{\r\n    var progress = e.loaded * 100 / e.total;\r\n    onProgress(progress);\r\n  }\r\n  const headers = {\r\n    [HeaderNanoSession]: session.id,\r\n  };\r\n  var request = new FormData();\r\n  request.append(fileTag, fileData);\r\n  axios.post(apiRoot + url, request,\r\n    {\r\n    onUploadProgress: onUploadProgress,\r\n    headers: headers,\r\n  })\r\n  .then(({data})=>{\r\n    if (0 !== data.error_code){\r\n      onFail(data.message);\r\n      return\r\n    }\r\n    onSuccess(data.data);\r\n    return;\r\n  })\r\n  .catch((e) =>{\r\n    onFail(e.message);\r\n  });\r\n}\r\n\r\nfunction callAxios(method, url, data, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    if(onFail){\r\n        onFail('session expired');\r\n    }\r\n    return;\r\n  }\r\n  var config = {\r\n    method: method,\r\n    url: apiRoot + url,\r\n    headers: {\r\n      [HeaderNanoSession]: session.id,\r\n    },\r\n  }\r\n  if (data){\r\n    config.data = data;\r\n  }\r\n  axios(config)\r\n    .then(({data})=>{\r\n      if (0 !== data.error_code){\r\n        if(onFail){\r\n          onFail(data.message);\r\n        }\r\n        return\r\n      }\r\n      if(onSuccess){\r\n        onSuccess(data.data);\r\n      }\r\n      return;\r\n    })\r\n    .catch((e) =>{\r\n      if(onFail){\r\n        onFail(e.message);\r\n      }\r\n    });\r\n}\r\n\r\nfunction callAxiosWithStatus(method, url, data, onSuccess, onFail){\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    if(onFail){\r\n        onFail('session expired');\r\n    }\r\n    return;\r\n  }\r\n  var config = {\r\n    method: method,\r\n    url: apiRoot + url,\r\n    headers: {\r\n      [HeaderNanoSession]: session.id,\r\n    },\r\n  }\r\n  if (data){\r\n    config.data = data;\r\n  }\r\n  axios(config)\r\n    .then(({ data, status })=>{\r\n      if (0 !== data.error_code){\r\n        if(onFail){\r\n          onFail(data.message);\r\n        }\r\n        return\r\n      }\r\n      if(onSuccess){\r\n        onSuccess(status, data.data);\r\n      }\r\n      return;\r\n    })\r\n    .catch((e) =>{\r\n      if(onFail){\r\n        onFail(e.message);\r\n      }\r\n    });\r\n}\r\n\r\n\r\nfunction callAxiosWithoutSession(method, url, data, onSuccess, onFail){\r\n  var config = {\r\n    method: method,\r\n    url: apiRoot + url,\r\n  }\r\n  if (data){\r\n    config.data = data;\r\n  }\r\n  axios(config)\r\n    .then(({data})=>{\r\n      if (0 !== data.error_code){\r\n        if(onFail){\r\n          onFail(data.message);\r\n        }\r\n        return\r\n      }\r\n      if(onSuccess){\r\n        onSuccess(data.data);\r\n      }\r\n      return;\r\n    })\r\n    .catch((e) =>{\r\n      if(onFail){\r\n        onFail(e.message);\r\n      }\r\n    });\r\n}\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { changeUserPassword, writeLog } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Password',\r\n    current: 'Current Password',\r\n    new: 'New Password',\r\n    confirmNew: 'Confirm New Password',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改密码',\r\n    current: '当前密码',\r\n    new: '新密码',\r\n    confirmNew: '确认新密码',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  }\r\n};\r\n\r\nexport default function ModifyPasswordDialog(props){\r\n  const defaultValues = {\r\n    old: '',\r\n    new: '',\r\n    new2: '',\r\n  }\r\n  const { lang, user, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifyFail = msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const onModifySuccess = () =>{\r\n    writeLog('change password of ' + user);\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    resetDialog();\r\n    setOperatable(true);\r\n    onSuccess();\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    if ('' === request.old){\r\n      onModifyFail('previous password required');\r\n      return;\r\n    }\r\n    if ('' === request.new){\r\n      onModifyFail('new password required');\r\n      return;\r\n    }\r\n    if (request.new2 !== request.new){\r\n      onModifyFail('confirm password mismatched');\r\n      return;\r\n    }\r\n    changeUserPassword(user, request.old, request.new, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    setMounted(true);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, []);\r\n\r\n  const inputs = [\r\n    {\r\n      type: \"password\",\r\n      label: texts.current,\r\n      onChange: handleRequestPropsChanged('old'),\r\n      value: request.old,\r\n      required: true,\r\n      xs: 12,\r\n    },\r\n    {\r\n      type: \"password\",\r\n      label: texts.new,\r\n      onChange: handleRequestPropsChanged('new'),\r\n      value: request.new,\r\n      required: true,\r\n      xs: 12,\r\n    },\r\n    {\r\n      type: \"password\",\r\n      label: texts.confirmNew,\r\n      onChange: handleRequestPropsChanged('new2'),\r\n      value: request.new2,\r\n      required: true,\r\n      xs: 12,\r\n    },\r\n  ];\r\n  const content = <InputList inputs={inputs}/>\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n}\r\n","import {\r\n  primaryColor,\r\n  whiteColor,\r\n  primaryBoxShadow,\r\n  defaultFont,\r\n  blackColor,\r\n  grayColor,\r\n  hexToRgb\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst dropdownStyle = theme => ({\r\n  buttonLink: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n      marginLeft: \"30px\",\r\n      width: \"auto\"\r\n    }\r\n  },\r\n  links: {\r\n    width: \"20px\",\r\n    height: \"20px\",\r\n    zIndex: \"4\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"block\",\r\n      width: \"30px\",\r\n      height: \"30px\",\r\n      color: grayColor[9],\r\n      marginRight: \"15px\"\r\n    }\r\n  },\r\n  linkText: {\r\n    zIndex: \"4\",\r\n    ...defaultFont,\r\n    fontSize: \"14px\"\r\n  },\r\n  popperClose: {\r\n    pointerEvents: \"none\"\r\n  },\r\n  pooperResponsive: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      zIndex: \"1640\",\r\n      position: \"static\",\r\n      float: \"none\",\r\n      width: \"auto\",\r\n      marginTop: \"0\",\r\n      backgroundColor: \"transparent\",\r\n      border: \"0\",\r\n      WebkitBoxShadow: \"none\",\r\n      boxShadow: \"none\",\r\n      color: \"black\"\r\n    }\r\n  },\r\n  popperNav: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      position: \"static !important\",\r\n      left: \"unset !important\",\r\n      top: \"unset !important\",\r\n      transform: \"none !important\",\r\n      willChange: \"unset !important\",\r\n      \"& > div\": {\r\n        boxShadow: \"none !important\",\r\n        marginLeft: \"0rem\",\r\n        marginRight: \"0rem\",\r\n        transition: \"none !important\",\r\n        marginTop: \"0px !important\",\r\n        marginBottom: \"0px !important\",\r\n        padding: \"0px !important\",\r\n        backgroundColor: \"transparent !important\",\r\n        \"& ul li\": {\r\n          color: whiteColor + \" !important\",\r\n          margin: \"10px 15px 0!important\",\r\n          padding: \"10px 15px !important\",\r\n          \"&:hover\": {\r\n            backgroundColor: \"hsla(0,0%,78%,.2)\",\r\n            boxShadow: \"none\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  dropdown: {\r\n    borderRadius: \"3px\",\r\n    border: \"0\",\r\n    boxShadow: \"0 2px 5px 0 rgba(\" + hexToRgb(blackColor) + \", 0.26)\",\r\n    top: \"100%\",\r\n    zIndex: \"1000\",\r\n    minWidth: \"160px\",\r\n    padding: \"5px 0\",\r\n    margin: \"2px 0 0\",\r\n    fontSize: \"14px\",\r\n    textAlign: \"left\",\r\n    listStyle: \"none\",\r\n    backgroundColor: whiteColor,\r\n    WebkitBackgroundClip: \"padding-box\",\r\n    backgroundClip: \"padding-box\"\r\n  },\r\n  dropdownItem: {\r\n    ...defaultFont,\r\n    fontSize: \"13px\",\r\n    padding: \"10px 20px\",\r\n    margin: \"0 5px\",\r\n    borderRadius: \"2px\",\r\n    WebkitTransition: \"all 150ms linear\",\r\n    MozTransition: \"all 150ms linear\",\r\n    OTransition: \"all 150ms linear\",\r\n    MsTransition: \"all 150ms linear\",\r\n    transition: \"all 150ms linear\",\r\n    display: \"block\",\r\n    clear: \"both\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"1.42857143\",\r\n    color: grayColor[8],\r\n    whiteSpace: \"nowrap\",\r\n    height: \"unset\",\r\n    minHeight: \"unset\",\r\n    \"&:hover\": {\r\n      backgroundColor: primaryColor[0],\r\n      color: whiteColor,\r\n      ...primaryBoxShadow\r\n    }\r\n  }\r\n});\r\n\r\nexport default dropdownStyle;\r\n","import {\r\n  defaultFont,\r\n  dangerColor,\r\n  whiteColor\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nimport dropdownStyle from \"assets/jss/material-dashboard-react/dropdownStyle.js\";\r\n\r\nconst headerLinksStyle = theme => ({\r\n  ...dropdownStyle(theme),\r\n  search: {\r\n    \"& > div\": {\r\n      marginTop: \"0\"\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      margin: \"10px 15px !important\",\r\n      float: \"none !important\",\r\n      paddingTop: \"1px\",\r\n      paddingBottom: \"1px\",\r\n      padding: \"0!important\",\r\n      width: \"60%\",\r\n      marginTop: \"40px\",\r\n      \"& input\": {\r\n        color: whiteColor\r\n      }\r\n    }\r\n  },\r\n  linkText: {\r\n    zIndex: \"4\",\r\n    ...defaultFont,\r\n    fontSize: \"14px\",\r\n    margin: \"0px\"\r\n  },\r\n  buttonLink: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"flex\",\r\n      margin: \"10px 15px 0\",\r\n      width: \"-webkit-fill-available\",\r\n      \"& svg\": {\r\n        width: \"24px\",\r\n        height: \"30px\",\r\n        marginRight: \"15px\",\r\n        marginLeft: \"-15px\"\r\n      },\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        fontSize: \"24px\",\r\n        lineHeight: \"30px\",\r\n        width: \"24px\",\r\n        height: \"30px\",\r\n        marginRight: \"15px\",\r\n        marginLeft: \"-15px\"\r\n      },\r\n      \"& > span\": {\r\n        justifyContent: \"flex-start\",\r\n        width: \"100%\"\r\n      }\r\n    }\r\n  },\r\n  searchButton: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      top: \"-50px !important\",\r\n      marginRight: \"22px\",\r\n      float: \"right\"\r\n    }\r\n  },\r\n  margin: {\r\n    zIndex: \"4\",\r\n    margin: \"0\"\r\n  },\r\n  searchIcon: {\r\n    width: \"17px\",\r\n    zIndex: \"4\"\r\n  },\r\n  notifications: {\r\n    zIndex: \"4\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      position: \"absolute\",\r\n      top: \"2px\",\r\n      border: \"1px solid \" + whiteColor,\r\n      right: \"4px\",\r\n      fontSize: \"9px\",\r\n      background: dangerColor[0],\r\n      color: whiteColor,\r\n      minWidth: \"16px\",\r\n      height: \"16px\",\r\n      borderRadius: \"10px\",\r\n      textAlign: \"center\",\r\n      lineHeight: \"16px\",\r\n      verticalAlign: \"middle\",\r\n      display: \"block\"\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      ...defaultFont,\r\n      fontSize: \"14px\",\r\n      marginRight: \"8px\"\r\n    }\r\n  },\r\n  manager: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\"\r\n    },\r\n    display: \"inline-block\"\r\n  },\r\n  searchWrapper: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"-webkit-fill-available\",\r\n      margin: \"10px 15px 0\"\r\n    },\r\n    display: \"inline-block\"\r\n  }\r\n});\r\n\r\nexport default headerLinksStyle;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import Hidden from \"@material-ui/core/Hidden\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Person from \"@material-ui/icons/Person\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Poppers from \"@material-ui/core/Popper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ModifyPasswordDialog from \"components/LoggedUser/ModifyPasswordDialog.js\";\r\nimport styles from \"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { updateSession,  writeLog } from 'nano_api.js';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    modify: 'Modify Password',\r\n    logout: 'Logout',\r\n  },\r\n  'cn':{\r\n    modify: '修改密码',\r\n    logout: '注销',\r\n  }\r\n};\r\n\r\nexport default function LoggedUser(props){\r\n  const classes = useStyles();\r\n  const { lang } = props;\r\n  const texts = i18n[lang];\r\n  const [ mounted, setMounted ] = React.useState(false)\r\n  const [ username, setUsername] = React.useState(\"\")\r\n  const [ openProfile, setOpenProfile ] = React.useState(null);\r\n  const [ dialogVisible, setDialogVisible ] = React.useState(false);\r\n  const [ isLogged, setLogged ] = React.useState(()=>{\r\n    return (null !== getLoggedSession());\r\n  });\r\n\r\n  const handleClickProfile = event => {\r\n    if (openProfile && openProfile.contains(event.target)) {\r\n      setOpenProfile(null);\r\n    } else {\r\n      setOpenProfile(event.currentTarget);\r\n    }\r\n  };\r\n\r\n  const handleCloseProfile = () => {\r\n    setOpenProfile(null);\r\n  };\r\n\r\n  const logout = () => {\r\n    const onFinished = () => {\r\n      logoutSession();\r\n      setLogged(false);\r\n    }\r\n    writeLog('logout', onFinished, onFinished);\r\n  }\r\n\r\n  const showModifyPassword = () =>{\r\n    setDialogVisible(true);\r\n  }\r\n\r\n  const closeModifyPassword = () =>{\r\n    setDialogVisible(false);\r\n  }\r\n\r\n  const keepAlive = React.useCallback(() => {\r\n    const onUpdateFail = () =>{\r\n      logoutSession();\r\n      if (mounted){\r\n        setLogged(false);\r\n      }\r\n    }\r\n    updateSession(onUpdateFail);\r\n  }, [mounted]);\r\n\r\n  //mount/unmount only\r\n  React.useEffect(() =>{\r\n    setMounted(true);\r\n    keepAlive();\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return;\r\n    }\r\n\r\n    if (mounted){\r\n      setUsername(session.user);\r\n    }\r\n\r\n    var updateInterval = session.timeout * 1000 * 2 / 3;\r\n    // var updateInterval = 3000;\r\n    var timerID = setInterval(()=>{\r\n      keepAlive();\r\n    }, updateInterval);\r\n    return () => {\r\n      setMounted(false);\r\n      clearInterval(timerID);\r\n    }\r\n\r\n  }, [mounted, keepAlive]);\r\n\r\n  //render begin\r\n  if (!isLogged){\r\n    return redirectToLogin();\r\n  }\r\n\r\n  return(\r\n    <div className={classes.manager}>\r\n      <Button\r\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n        simple={!(window.innerWidth > 959)}\r\n        aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClickProfile}\r\n        className={classes.buttonLink}\r\n      >\r\n        {username}\r\n        <Person className={classes.icons} />\r\n      </Button>\r\n      <Poppers\r\n        open={Boolean(openProfile)}\r\n        anchorEl={openProfile}\r\n        transition\r\n        disablePortal\r\n        className={\r\n          classNames({ [classes.popperClose]: !openProfile }) +\r\n          \" \" +\r\n          classes.popperNav\r\n        }\r\n      >\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            id=\"profile-menu-list-grow\"\r\n            style={{\r\n              transformOrigin:\r\n                placement === \"bottom\" ? \"center top\" : \"center bottom\"\r\n            }}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleCloseProfile}>\r\n                <MenuList role=\"menu\">\r\n                  <MenuItem\r\n                    onClick={showModifyPassword}\r\n                    className={classes.dropdownItem}\r\n                  >\r\n                    {texts.modify}\r\n                  </MenuItem>\r\n                  <Divider light />\r\n                  <MenuItem\r\n                    onClick={logout}\r\n                    className={classes.dropdownItem}\r\n                  >\r\n                    {texts.logout}\r\n                  </MenuItem>\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Poppers>\r\n      <ModifyPasswordDialog\r\n        lang={lang}\r\n        open={dialogVisible}\r\n        user={username}\r\n        onSuccess={closeModifyPassword}\r\n        onCancel={closeModifyPassword}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport LoggedUser from \"components/LoggedUser/LoggedUser.js\";\r\n\r\n\r\nexport default function AdminNavbarLinks(props) {\r\n  return (\r\n    <div>\r\n      <LoggedUser {...props}/>\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport { changeLanguage } from 'utils.js';\r\n\r\nclass Selector extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.openMenu = this.openMenu.bind(this);\r\n    this.closeMenu = this.closeMenu.bind(this);\r\n    this.languages = [\r\n      {\r\n        locale: 'cn',\r\n        name: '简体中文',\r\n      },\r\n      {\r\n        locale: 'en',\r\n        name: 'English',\r\n      },\r\n    ];\r\n    const { lang, setLang, ...rest } = props;\r\n    this.restProps = rest;\r\n    this.changeLanguage = setLang;\r\n    let initialText;\r\n    this.languages.forEach(current => {\r\n      if(lang === current.locale){\r\n        initialText = current.name;\r\n      }\r\n    })\r\n\r\n    this.state = {\r\n      language: lang,\r\n      anchorEl: null,\r\n      displayText: initialText,\r\n    };\r\n  }\r\n\r\n  updateLanguage(lang){\r\n    this.languages.forEach(current => {\r\n      if(lang === current.locale){\r\n        this.setState({\r\n          displayText: current.name,\r\n          anchorEl: null,\r\n        })\r\n      }\r\n    })\r\n    changeLanguage(lang);\r\n    this.changeLanguage(lang);\r\n  }\r\n\r\n  openMenu(event){\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n    });\r\n  }\r\n\r\n  closeMenu() {\r\n    this.setState({\r\n      anchorEl: null,\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const currentLang = this.state.language;\r\n    const { buttonClass, ...others } = this.restProps;\r\n    return (\r\n      <Typography component='div'>\r\n        <Button {...others} onClick={this.openMenu} color='transparent' size='sm'>\r\n          <ChatBubbleOutlineIcon fontSize='small' className={buttonClass}/>\r\n           {this.state.displayText}\r\n        </Button>\r\n        <Menu\r\n          keepMounted\r\n          anchorEl={this.state.anchorEl}\r\n          onClose={this.closeMenu}\r\n          open={Boolean(this.state.anchorEl)}\r\n        >\r\n          {\r\n            this.languages.map((lang) => (\r\n              <MenuItem\r\n                key={lang.locale}\r\n                selected={lang.locale === currentLang}\r\n                onClick={() => {\r\n                    this.updateLanguage(lang.locale);\r\n                }}\r\n                >\r\n                <Typography component='div' variant='overline'>\r\n                  {lang.name}\r\n                </Typography>\r\n              </MenuItem>\r\n            ))\r\n          }\r\n        </Menu>\r\n      </Typography>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Selector;\r\n","import {\r\n  container,\r\n  defaultFont,\r\n  primaryColor,\r\n  defaultBoxShadow,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  dangerColor,\r\n  whiteColor,\r\n  grayColor\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst headerStyle = () => ({\r\n  appBar: {\r\n    backgroundColor: \"transparent\",\r\n    boxShadow: \"none\",\r\n    borderBottom: \"0\",\r\n    marginBottom: \"0\",\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    paddingTop: \"10px\",\r\n    zIndex: \"1029\",\r\n    color: grayColor[7],\r\n    border: \"0\",\r\n    borderRadius: \"3px\",\r\n    padding: \"10px 0\",\r\n    transition: \"all 150ms ease 0s\",\r\n    minHeight: \"50px\",\r\n    display: \"block\"\r\n  },\r\n  container: {\r\n    ...container,\r\n    minHeight: \"50px\"\r\n  },\r\n  flex: {\r\n    flex: 1\r\n  },\r\n  title: {\r\n    ...defaultFont,\r\n    letterSpacing: \"unset\",\r\n    lineHeight: \"30px\",\r\n    fontSize: \"18px\",\r\n    borderRadius: \"3px\",\r\n    textTransform: \"none\",\r\n    color: \"inherit\",\r\n    margin: \"0\",\r\n    \"&:hover,&:focus\": {\r\n      background: \"transparent\"\r\n    }\r\n  },\r\n  appResponsive: {\r\n    top: \"8px\"\r\n  },\r\n  primary: {\r\n    backgroundColor: primaryColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow\r\n  },\r\n  info: {\r\n    backgroundColor: infoColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow\r\n  },\r\n  success: {\r\n    backgroundColor: successColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow\r\n  },\r\n  warning: {\r\n    backgroundColor: warningColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow\r\n  },\r\n  danger: {\r\n    backgroundColor: dangerColor[0],\r\n    color: whiteColor,\r\n    ...defaultBoxShadow\r\n  }\r\n});\r\n\r\nexport default headerStyle;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport Box from '@material-ui/core/Box';\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Link from '@material-ui/core/Link';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n// @material-ui/icons\r\nimport Menu from \"@material-ui/icons/Menu\";\r\n// core components\r\nimport AdminNavbarLinks from \"./AdminNavbarLinks.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport LanguageSelector from \"components/Language/Selector.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/headerStyle.js\";\r\nimport { getCurrentVersion } from 'nano_api.js';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    manual: 'Online Manual',\r\n    manualURL: 'https://nanocloud.readthedocs.io/projects/guide/en/latest/',\r\n  },\r\n  'cn':{\r\n    manual: '在线文档',\r\n    manualURL: 'https://nanocloud.readthedocs.io/projects/guide/zh_CN/latest/',\r\n  }\r\n}\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n  function makeBrand() {\r\n    var name = '';\r\n    props.routes.every(prop => {\r\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\r\n        name = prop.display[props.lang]\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n    return name;\r\n  }\r\n  const { color, lang, setLang } = props;\r\n  const texts = i18n[lang];\r\n  const appBarClasses = classNames({\r\n    [\" \" + classes[color]]: color\r\n  });\r\n\r\n  const version = (\r\n    <Box mr={2}>\r\n      <Typography component='span'>\r\n        {'Project Nano ' + getCurrentVersion() + ' © 2018~2020'}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n\r\n  const manualButton = (\r\n    <Tooltip title={texts.manual} placement='top'>\r\n      <Link target='_blank' href={texts.manualURL}>\r\n        <IconButton color='default' size='small'>\r\n          <HelpOutlineIcon/>\r\n        </IconButton>\r\n      </Link>\r\n    </Tooltip>\r\n  )\r\n\r\n  return (\r\n    <AppBar className={classes.appBar + appBarClasses}>\r\n      <Toolbar className={classes.container}>\r\n        <div className={classes.flex}>\r\n          {/* Here we create navbar brand, based on route name */}\r\n          <Button color=\"transparent\" href=\"#\" className={classes.title}>\r\n            {makeBrand()}\r\n          </Button>\r\n        </div>\r\n        <Hidden smDown>\r\n          {version}\r\n          {manualButton}\r\n        </Hidden>\r\n        <LanguageSelector lang={lang} setLang={setLang}/>\r\n        <Hidden smDown implementation=\"css\">\r\n          <AdminNavbarLinks lang={lang}/>\r\n        </Hidden>\r\n        <Hidden mdUp implementation=\"css\">\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={props.handleDrawerToggle}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\r\n  rtlActive: PropTypes.bool,\r\n  handleDrawerToggle: PropTypes.func,\r\n  routes: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n","import {\r\n  drawerWidth,\r\n  transition,\r\n  boxShadow,\r\n  defaultFont,\r\n  primaryColor,\r\n  primaryBoxShadow,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  dangerColor,\r\n  whiteColor,\r\n  grayColor,\r\n  blackColor,\r\n  hexToRgb\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst sidebarStyle = theme => ({\r\n  drawerPaper: {\r\n    border: \"none\",\r\n    position: \"fixed\",\r\n    top: \"0\",\r\n    bottom: \"0\",\r\n    left: \"0\",\r\n    zIndex: \"1\",\r\n    ...boxShadow,\r\n    width: drawerWidth,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: drawerWidth,\r\n      position: \"fixed\",\r\n      height: \"100%\"\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: drawerWidth,\r\n      ...boxShadow,\r\n      position: \"fixed\",\r\n      display: \"block\",\r\n      top: \"0\",\r\n      height: \"100vh\",\r\n      right: \"0\",\r\n      left: \"auto\",\r\n      zIndex: \"1032\",\r\n      visibility: \"visible\",\r\n      overflowY: \"visible\",\r\n      borderTop: \"none\",\r\n      textAlign: \"left\",\r\n      paddingRight: \"0px\",\r\n      paddingLeft: \"0\",\r\n      transform: `translate3d(${drawerWidth}px, 0, 0)`,\r\n      ...transition\r\n    }\r\n  },\r\n  drawerPaperRTL: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      left: \"auto !important\",\r\n      right: \"0 !important\"\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      left: \"0  !important\",\r\n      right: \"auto !important\"\r\n    }\r\n  },\r\n  logo: {\r\n    position: \"relative\",\r\n    padding: \"15px 15px\",\r\n    zIndex: \"4\",\r\n    \"&:after\": {\r\n      content: '\"\"',\r\n      position: \"absolute\",\r\n      bottom: \"0\",\r\n\r\n      height: \"1px\",\r\n      right: \"15px\",\r\n      width: \"calc(100% - 30px)\",\r\n      backgroundColor: \"rgba(\" + hexToRgb(grayColor[6]) + \", 0.3)\"\r\n    }\r\n  },\r\n  logoLink: {\r\n    ...defaultFont,\r\n    textTransform: \"uppercase\",\r\n    padding: \"5px 0\",\r\n    display: \"block\",\r\n    fontSize: \"18px\",\r\n    textAlign: \"left\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"30px\",\r\n    textDecoration: \"none\",\r\n    backgroundColor: \"transparent\",\r\n    \"&,&:hover\": {\r\n      color: whiteColor\r\n    }\r\n  },\r\n  logoLinkRTL: {\r\n    textAlign: \"right\"\r\n  },\r\n  logoImage: {\r\n    width: \"30px\",\r\n    display: \"inline-block\",\r\n    maxHeight: \"30px\",\r\n    marginLeft: \"10px\",\r\n    marginRight: \"15px\"\r\n  },\r\n  img: {\r\n    width: \"35px\",\r\n    top: \"22px\",\r\n    position: \"absolute\",\r\n    verticalAlign: \"middle\",\r\n    border: \"0\"\r\n  },\r\n  background: {\r\n    position: \"absolute\",\r\n    zIndex: \"1\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    display: \"block\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center center\",\r\n    \"&:after\": {\r\n      position: \"absolute\",\r\n      zIndex: \"3\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      background: blackColor,\r\n      opacity: \".8\"\r\n    }\r\n  },\r\n  list: {\r\n    marginTop: \"20px\",\r\n    paddingLeft: \"0\",\r\n    paddingTop: \"0\",\r\n    paddingBottom: \"0\",\r\n    marginBottom: \"0\",\r\n    listStyle: \"none\",\r\n    position: \"unset\"\r\n  },\r\n  item: {\r\n    position: \"relative\",\r\n    display: \"block\",\r\n    textDecoration: \"none\",\r\n    \"&:hover,&:focus,&:visited,&\": {\r\n      color: whiteColor\r\n    }\r\n  },\r\n  itemLink: {\r\n    width: \"auto\",\r\n    transition: \"all 300ms linear\",\r\n    margin: \"10px 15px 0\",\r\n    borderRadius: \"3px\",\r\n    position: \"relative\",\r\n    display: \"block\",\r\n    padding: \"10px 15px\",\r\n    backgroundColor: \"transparent\",\r\n    ...defaultFont\r\n  },\r\n  itemIcon: {\r\n    width: \"24px\",\r\n    height: \"30px\",\r\n    fontSize: \"24px\",\r\n    lineHeight: \"30px\",\r\n    float: \"left\",\r\n    marginRight: \"15px\",\r\n    textAlign: \"center\",\r\n    verticalAlign: \"middle\",\r\n    color: \"rgba(\" + hexToRgb(whiteColor) + \", 0.8)\"\r\n  },\r\n  itemIconRTL: {\r\n    marginRight: \"3px\",\r\n    marginLeft: \"15px\",\r\n    float: \"right\"\r\n  },\r\n  itemText: {\r\n    ...defaultFont,\r\n    margin: \"0\",\r\n    lineHeight: \"30px\",\r\n    fontSize: \"14px\",\r\n    color: whiteColor\r\n  },\r\n  itemTextRTL: {\r\n    textAlign: \"right\"\r\n  },\r\n  whiteFont: {\r\n    color: whiteColor\r\n  },\r\n  purple: {\r\n    backgroundColor: primaryColor[0],\r\n    ...primaryBoxShadow,\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: primaryColor[0],\r\n      ...primaryBoxShadow\r\n    }\r\n  },\r\n  blue: {\r\n    backgroundColor: infoColor[0],\r\n    boxShadow:\r\n      \"0 12px 20px -10px rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \",.28), 0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.12), 0 7px 8px -5px rgba(\" +\r\n      hexToRgb(infoColor[0]) +\r\n      \",.2)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: infoColor[0],\r\n      boxShadow:\r\n        \"0 12px 20px -10px rgba(\" +\r\n        hexToRgb(infoColor[0]) +\r\n        \",.28), 0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.12), 0 7px 8px -5px rgba(\" +\r\n        hexToRgb(infoColor[0]) +\r\n        \",.2)\"\r\n    }\r\n  },\r\n  green: {\r\n    backgroundColor: successColor[0],\r\n    boxShadow:\r\n      \"0 12px 20px -10px rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \",.28), 0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.12), 0 7px 8px -5px rgba(\" +\r\n      hexToRgb(successColor[0]) +\r\n      \",.2)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: successColor[0],\r\n      boxShadow:\r\n        \"0 12px 20px -10px rgba(\" +\r\n        hexToRgb(successColor[0]) +\r\n        \",.28), 0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.12), 0 7px 8px -5px rgba(\" +\r\n        hexToRgb(successColor[0]) +\r\n        \",.2)\"\r\n    }\r\n  },\r\n  orange: {\r\n    backgroundColor: warningColor[0],\r\n    boxShadow:\r\n      \"0 12px 20px -10px rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \",.28), 0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.12), 0 7px 8px -5px rgba(\" +\r\n      hexToRgb(warningColor[0]) +\r\n      \",.2)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: warningColor[0],\r\n      boxShadow:\r\n        \"0 12px 20px -10px rgba(\" +\r\n        hexToRgb(warningColor[0]) +\r\n        \",.28), 0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.12), 0 7px 8px -5px rgba(\" +\r\n        hexToRgb(warningColor[0]) +\r\n        \",.2)\"\r\n    }\r\n  },\r\n  red: {\r\n    backgroundColor: dangerColor[0],\r\n    boxShadow:\r\n      \"0 12px 20px -10px rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \",.28), 0 4px 20px 0 rgba(\" +\r\n      hexToRgb(blackColor) +\r\n      \",.12), 0 7px 8px -5px rgba(\" +\r\n      hexToRgb(dangerColor[0]) +\r\n      \",.2)\",\r\n    \"&:hover,&:focus\": {\r\n      backgroundColor: dangerColor[0],\r\n      boxShadow:\r\n        \"0 12px 20px -10px rgba(\" +\r\n        hexToRgb(dangerColor[0]) +\r\n        \",.28), 0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.12), 0 7px 8px -5px rgba(\" +\r\n        hexToRgb(dangerColor[0]) +\r\n        \",.2)\"\r\n    }\r\n  },\r\n  sidebarWrapper: {\r\n    position: \"relative\",\r\n    height: \"calc(100vh - 75px)\",\r\n    overflow: \"auto\",\r\n    width: \"260px\",\r\n    zIndex: \"4\",\r\n    overflowScrolling: \"touch\"\r\n  },\r\n  activePro: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      bottom: \"13px\"\r\n    }\r\n  }\r\n});\r\n\r\nexport default sidebarStyle;\r\n","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\n// import { Link } from \"@reach/router\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n// core components\r\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\r\n// import RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\n// const NavLink = props => {\r\n//   const {activeClassName, ...rest } = props;\r\n//   return (\r\n//     <Link\r\n//       {...rest}\r\n//       getProps={({ isCurrent }) => {\r\n//         return isCurrent ? { className: activeClassName } : null;\r\n//       }}\r\n//     />\r\n//   )\r\n// };\r\n\r\nexport default function Sidebar(props) {\r\n  const classes = useStyles();\r\n  // verifies if routeName is the one active (in browser input)\r\n  function activeRoute(routeName) {\r\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\r\n  }\r\n  const { color, logo, image, logoText, routes, lang } = props;\r\n  var links = (\r\n    <List className={classes.list}>\r\n      {routes.map((prop, key) => {\r\n        var activePro = \" \";\r\n        var listItemClasses;\r\n        listItemClasses = classNames({\r\n          [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\r\n        });\r\n        const whiteFontClasses = classNames({\r\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\r\n        });\r\n        return (\r\n          <NavLink\r\n            to={prop.layout + prop.path}\r\n            className={activePro + classes.item}\r\n            activeClassName=\"active\"\r\n            key={key}\r\n          >\r\n            <ListItem button className={classes.itemLink + listItemClasses}>\r\n              {typeof prop.icon === \"string\" ? (\r\n                <Icon\r\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\r\n                    [classes.itemIconRTL]: props.rtlActive\r\n                  })}\r\n                >\r\n                  {prop.icon}\r\n                </Icon>\r\n              ) : (\r\n                <prop.icon\r\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\r\n                    [classes.itemIconRTL]: props.rtlActive\r\n                  })}\r\n                />\r\n              )}\r\n              <ListItemText\r\n                primary={prop.display[lang]}\r\n                className={classNames(classes.itemText, whiteFontClasses, {\r\n                  [classes.itemTextRTL]: props.rtlActive\r\n                })}\r\n                disableTypography={true}\r\n              />\r\n            </ListItem>\r\n          </NavLink>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n  var brand = (\r\n    <div className={classes.logo}>\r\n      <a\r\n        href=\"https://nanos.cloud/\"\r\n        className={classNames(classes.logoLink, {\r\n          [classes.logoLinkRTL]: props.rtlActive\r\n        })}\r\n        target=\"_blank\"\r\n      >\r\n        <div className={classes.logoImage}>\r\n          <img src={logo} alt=\"logo\" className={classes.img} />\r\n        </div>\r\n        {logoText}\r\n      </a>\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      <Hidden mdUp implementation=\"css\">\r\n        <Drawer\r\n          variant=\"temporary\"\r\n          anchor={props.rtlActive ? \"left\" : \"right\"}\r\n          open={props.open}\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, {\r\n              [classes.drawerPaperRTL]: props.rtlActive\r\n            })\r\n          }}\r\n          onClose={props.handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true // Better open performance on mobile.\r\n          }}\r\n        >\r\n          {brand}\r\n          <div className={classes.sidebarWrapper}>\r\n            <AdminNavbarLinks lang={lang}/>\r\n            {links}\r\n          </div>\r\n          {image !== undefined ? (\r\n            <div\r\n              className={classes.background}\r\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\r\n            />\r\n          ) : null}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden smDown implementation=\"css\">\r\n        <Drawer\r\n          anchor={props.rtlActive ? \"right\" : \"left\"}\r\n          variant=\"permanent\"\r\n          open\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, {\r\n              [classes.drawerPaperRTL]: props.rtlActive\r\n            })\r\n          }}\r\n        >\r\n          {brand}\r\n          <div className={classes.sidebarWrapper}>{links}</div>\r\n          {image !== undefined ? (\r\n            <div\r\n              className={classes.background}\r\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\r\n            />\r\n          ) : null}\r\n        </Drawer>\r\n      </Hidden>\r\n    </div>\r\n  );\r\n}\r\n\r\nSidebar.propTypes = {\r\n  rtlActive: PropTypes.bool,\r\n  handleDrawerToggle: PropTypes.func,\r\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\r\n  logo: PropTypes.string,\r\n  image: PropTypes.string,\r\n  logoText: PropTypes.string,\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  open: PropTypes.bool\r\n};\r\n","import React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst styles = {\r\n  grid: {\r\n    margin: \"0 -15px !important\",\r\n    width: \"unset\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function GridContainer(props) {\r\n  const classes = useStyles();\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <Grid container {...rest} className={classes.grid}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nGridContainer.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n","import {\r\n  blackColor,\r\n  whiteColor,\r\n  hexToRgb\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst cardStyle = {\r\n  card: {\r\n    border: \"0\",\r\n    marginBottom: \"30px\",\r\n    marginTop: \"30px\",\r\n    borderRadius: \"6px\",\r\n    color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\r\n    background: whiteColor,\r\n    width: \"100%\",\r\n    boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    minWidth: \"0\",\r\n    wordWrap: \"break-word\",\r\n    fontSize: \".875rem\"\r\n  },\r\n  cardPlain: {\r\n    background: \"transparent\",\r\n    boxShadow: \"none\"\r\n  },\r\n  cardProfile: {\r\n    marginTop: \"30px\",\r\n    textAlign: \"center\"\r\n  },\r\n  cardChart: {\r\n    \"& p\": {\r\n      marginTop: \"0px\",\r\n      paddingTop: \"0px\"\r\n    }\r\n  }\r\n};\r\n\r\nexport default cardStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/cardStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Card(props) {\r\n  const classes = useStyles();\r\n  const { className, children, plain, profile, chart, ...rest } = props;\r\n  const cardClasses = classNames({\r\n    [classes.card]: true,\r\n    [classes.cardPlain]: plain,\r\n    [classes.cardProfile]: profile,\r\n    [classes.cardChart]: chart,\r\n    [className]: className !== undefined\r\n  });\r\n  return (\r\n    <div className={cardClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  className: PropTypes.string,\r\n  plain: PropTypes.bool,\r\n  profile: PropTypes.bool,\r\n  chart: PropTypes.bool,\r\n  children: PropTypes.node\r\n};\r\n","import {\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  whiteColor\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst cardHeaderStyle = {\r\n  cardHeader: {\r\n    padding: \"0.75rem 1.25rem\",\r\n    marginBottom: \"0\",\r\n    borderBottom: \"none\",\r\n    background: \"transparent\",\r\n    zIndex: \"3 !important\",\r\n    \"&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n      margin: \"0 15px\",\r\n      padding: \"0\",\r\n      position: \"relative\",\r\n      color: whiteColor\r\n    },\r\n    \"&:first-child\": {\r\n      borderRadius: \"calc(.25rem - 1px) calc(.25rem - 1px) 0 0\"\r\n    },\r\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n      \"&:not($cardHeaderIcon)\": {\r\n        borderRadius: \"3px\",\r\n        marginTop: \"-20px\",\r\n        padding: \"15px\"\r\n      }\r\n    },\r\n    \"&$cardHeaderStats svg\": {\r\n      fontSize: \"36px\",\r\n      lineHeight: \"56px\",\r\n      textAlign: \"center\",\r\n      width: \"36px\",\r\n      height: \"36px\",\r\n      margin: \"10px 10px 4px\"\r\n    },\r\n    \"&$cardHeaderStats i,&$cardHeaderStats .material-icons\": {\r\n      fontSize: \"36px\",\r\n      lineHeight: \"56px\",\r\n      width: \"56px\",\r\n      height: \"56px\",\r\n      textAlign: \"center\",\r\n      overflow: \"unset\",\r\n      marginBottom: \"1px\"\r\n    },\r\n    \"&$cardHeaderStats$cardHeaderIcon\": {\r\n      textAlign: \"right\"\r\n    }\r\n  },\r\n  cardHeaderPlain: {\r\n    marginLeft: \"0px !important\",\r\n    marginRight: \"0px !important\"\r\n  },\r\n  cardHeaderStats: {\r\n    \"& $cardHeaderIcon\": {\r\n      textAlign: \"right\"\r\n    },\r\n    \"& h1,& h2,& h3,& h4,& h5,& h6\": {\r\n      margin: \"0 !important\"\r\n    }\r\n  },\r\n  cardHeaderIcon: {\r\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n      background: \"transparent\",\r\n      boxShadow: \"none\"\r\n    },\r\n    \"& i,& .material-icons\": {\r\n      width: \"33px\",\r\n      height: \"33px\",\r\n      textAlign: \"center\",\r\n      lineHeight: \"33px\"\r\n    },\r\n    \"& svg\": {\r\n      width: \"24px\",\r\n      height: \"24px\",\r\n      textAlign: \"center\",\r\n      lineHeight: \"33px\",\r\n      margin: \"5px 4px 0px\"\r\n    }\r\n  },\r\n  warningCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...warningCardHeader\r\n    }\r\n  },\r\n  successCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...successCardHeader\r\n    }\r\n  },\r\n  dangerCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...dangerCardHeader\r\n    }\r\n  },\r\n  infoCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...infoCardHeader\r\n    }\r\n  },\r\n  primaryCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...primaryCardHeader\r\n    }\r\n  },\r\n  roseCardHeader: {\r\n    color: whiteColor,\r\n    \"&:not($cardHeaderIcon)\": {\r\n      ...roseCardHeader\r\n    }\r\n  }\r\n};\r\n\r\nexport default cardHeaderStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/cardHeaderStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardHeader(props) {\r\n  const classes = useStyles();\r\n  const { className, children, color, plain, stats, icon, ...rest } = props;\r\n  const cardHeaderClasses = classNames({\r\n    [classes.cardHeader]: true,\r\n    [classes[color + \"CardHeader\"]]: color,\r\n    [classes.cardHeaderPlain]: plain,\r\n    [classes.cardHeaderStats]: stats,\r\n    [classes.cardHeaderIcon]: icon,\r\n    [className]: className !== undefined\r\n  });\r\n  return (\r\n    <div className={cardHeaderClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardHeader.propTypes = {\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"success\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"primary\",\r\n    \"rose\"\r\n  ]),\r\n  plain: PropTypes.bool,\r\n  stats: PropTypes.bool,\r\n  icon: PropTypes.bool,\r\n  children: PropTypes.node\r\n};\r\n","const cardBodyStyle = {\r\n  cardBody: {\r\n    padding: \"0.9375rem 20px\",\r\n    flex: \"1 1 auto\",\r\n    WebkitBoxFlex: \"1\",\r\n    position: \"relative\"\r\n  },\r\n  cardBodyPlain: {\r\n    paddingLeft: \"5px\",\r\n    paddingRight: \"5px\"\r\n  },\r\n  cardBodyProfile: {\r\n    marginTop: \"15px\"\r\n  }\r\n};\r\n\r\nexport default cardBodyStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/cardBodyStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardBody(props) {\r\n  const classes = useStyles();\r\n  const { className, children, plain, profile, ...rest } = props;\r\n  const cardBodyClasses = classNames({\r\n    [classes.cardBody]: true,\r\n    [classes.cardBodyPlain]: plain,\r\n    [classes.cardBodyProfile]: profile,\r\n    [className]: className !== undefined\r\n  });\r\n  return (\r\n    <div className={cardBodyClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardBody.propTypes = {\r\n  className: PropTypes.string,\r\n  plain: PropTypes.bool,\r\n  profile: PropTypes.bool,\r\n  children: PropTypes.node\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Info(props) {\r\n  const classes = useStyles();\r\n  const { children } = props;\r\n  return (\r\n    <div className={classes.defaultFontStyle + \" \" + classes.infoText}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nInfo.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snack from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// @material-ui/icons\r\nimport Close from \"@material-ui/icons/Close\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/snackbarContentStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Snackbar(props) {\r\n  const classes = useStyles();\r\n  const { message, color, close, icon, place, open, rtlActive } = props;\r\n  var action = [];\r\n  const messageClasses = classNames({\r\n    [classes.iconMessage]: icon !== undefined\r\n  });\r\n  if (close !== undefined) {\r\n    action = [\r\n      <IconButton\r\n        className={classes.iconButton}\r\n        key=\"close\"\r\n        aria-label=\"Close\"\r\n        color=\"inherit\"\r\n        onClick={() => props.closeNotification()}\r\n      >\r\n        <Close className={classes.close} />\r\n      </IconButton>\r\n    ];\r\n  }\r\n  return (\r\n    <Snack\r\n      anchorOrigin={{\r\n        vertical: place.indexOf(\"t\") === -1 ? \"bottom\" : \"top\",\r\n        horizontal:\r\n          place.indexOf(\"l\") !== -1\r\n            ? \"left\"\r\n            : place.indexOf(\"c\") !== -1\r\n            ? \"center\"\r\n            : \"right\"\r\n      }}\r\n      open={open}\r\n      message={\r\n        <div>\r\n          {icon !== undefined ? <props.icon className={classes.icon} /> : null}\r\n          <span className={messageClasses}>{message}</span>\r\n        </div>\r\n      }\r\n      action={action}\r\n      ContentProps={{\r\n        classes: {\r\n          root: classes.root + \" \" + classes[color],\r\n          message: classes.message,\r\n          action: classNames({ [classes.actionRTL]: rtlActive })\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nSnackbar.propTypes = {\r\n  message: PropTypes.node.isRequired,\r\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\r\n  close: PropTypes.bool,\r\n  icon: PropTypes.object,\r\n  place: PropTypes.oneOf([\"tl\", \"tr\", \"tc\", \"br\", \"bl\", \"bc\"]),\r\n  open: PropTypes.bool,\r\n  rtlActive: PropTypes.bool,\r\n  closeNotification: PropTypes.func\r\n};\r\n","import {\r\n  warningColor,\r\n  primaryColor,\r\n  dangerColor,\r\n  successColor,\r\n  infoColor,\r\n  roseColor,\r\n  grayColor,\r\n  defaultFont\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst tableStyle = theme => ({\r\n  warningTableHeader: {\r\n    color: warningColor[0]\r\n  },\r\n  primaryTableHeader: {\r\n    color: primaryColor[0]\r\n  },\r\n  dangerTableHeader: {\r\n    color: dangerColor[0]\r\n  },\r\n  successTableHeader: {\r\n    color: successColor[0]\r\n  },\r\n  infoTableHeader: {\r\n    color: infoColor[0]\r\n  },\r\n  roseTableHeader: {\r\n    color: roseColor[0]\r\n  },\r\n  grayTableHeader: {\r\n    color: grayColor[0]\r\n  },\r\n  table: {\r\n    marginBottom: \"0\",\r\n    width: \"100%\",\r\n    maxWidth: \"100%\",\r\n    backgroundColor: \"transparent\",\r\n    borderSpacing: \"0\",\r\n    borderCollapse: \"collapse\"\r\n  },\r\n  tableHeadCell: {\r\n    color: \"inherit\",\r\n    ...defaultFont,\r\n    \"&, &$tableCell\": {\r\n      fontSize: \"1em\"\r\n    }\r\n  },\r\n  tableCell: {\r\n    ...defaultFont,\r\n    lineHeight: \"1.42857143\",\r\n    padding: \"12px 8px\",\r\n    verticalAlign: \"middle\",\r\n    fontSize: \"0.8125rem\"\r\n  },\r\n  tableResponsive: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n  tableHeadRow: {\r\n    height: \"56px\",\r\n    color: \"inherit\",\r\n    display: \"table-row\",\r\n    outline: \"none\",\r\n    verticalAlign: \"middle\"\r\n  },\r\n  tableBodyRow: {\r\n    height: \"48px\",\r\n    color: \"inherit\",\r\n    display: \"table-row\",\r\n    outline: \"none\",\r\n    verticalAlign: \"middle\"\r\n  }\r\n});\r\n\r\nexport default tableStyle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function ObjectTable(props){\r\n  const classes = useStyles();\r\n  const { color, headers, rows } = props;\r\n  return (\r\n    <div className={classes.tableResponsive}>\r\n      <Table className={classes.table}>\r\n        <TableHead className={classes[color + \"TableHeader\"]}>\r\n          <TableRow className={classes.tableHeadRow}>\r\n            {headers.map((prop, key) => {\r\n              return (\r\n                <TableCell\r\n                  className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                  key={key}\r\n                >\r\n                  {prop}\r\n                </TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n            rows.map((row, rowKey) => (\r\n              <TableRow key={rowKey} className={classes.tableBodyRow}>\r\n                {\r\n                  row.map((cell, cellKey) => (\r\n                    <TableCell className={classes.tableCell} key={cellKey}>\r\n                      {cell}\r\n                    </TableCell>\r\n                  ))\r\n                }\r\n              </TableRow>\r\n            ))\r\n          }\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nObjectTable.defaultProps = {\r\n  color: \"gray\"\r\n};\r\n\r\nObjectTable.propTypes = {\r\n  color: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"primary\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"info\",\r\n    \"rose\",\r\n    \"gray\"\r\n  ]),\r\n  headers: PropTypes.arrayOf(PropTypes.node),\r\n  rows: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.node)),\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport InnerButton from \"@material-ui/core/IconButton\";\r\n\r\nexport default function IconButton(props){\r\n  const { label, icon, href, placement, color, onClick } = props;\r\n  let tooltipPlacement, iconColor;\r\n  if(placement){\r\n    tooltipPlacement = placement;\r\n  }else{\r\n    tooltipPlacement = 'top';\r\n  }\r\n  if(color){\r\n    iconColor = color;\r\n  }else{\r\n    iconColor = 'inherit';\r\n  }\r\n  let innerButton;\r\n  if (onClick){\r\n    innerButton = <InnerButton onClick={onClick} color={iconColor}>{React.createElement(icon)}</InnerButton>;\r\n  }else if (href){\r\n    innerButton = <Link to={href}><InnerButton color={iconColor}>{React.createElement(icon)}</InnerButton></Link>;\r\n  }else{\r\n    innerButton = <InnerButton color={iconColor}>{React.createElement(icon)}</InnerButton>;\r\n  }\r\n\r\n  return (\r\n    <Tooltip\r\n      title={label}\r\n      placement={tooltipPlacement}\r\n      >\r\n      {innerButton}\r\n    </Tooltip>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { removeComputeCell } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Remove Cell',\r\n    content: 'Are you sure to remove compute cell ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '移除资源节点',\r\n    content: '是否移除资源节点 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst RemoveDialog = (props) =>{\r\n  const { lang, pool, cell, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const content = texts.content + cell;\r\n  const onRemoveFail = (msg) =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRemoveSuccess = (poolName, cellName) =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(cellName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    removeComputeCell(pool, cell, onRemoveSuccess, onRemoveFail);\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n  \r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n\r\nexport default RemoveDialog;\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { queryUnallocatedComputeCells, addComputeCell } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Add Compute Cell To Pool ',\r\n    name: 'Cell Name',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '添加节点到资源池 ',\r\n    name: '资源节点名称',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst AddDialog = (props) =>{\r\n  const defaultValues = {\r\n    cell: '',\r\n  };\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState([]);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onAddFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onAddSuccess = (poolName, cellName) =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(cellName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    const cellName = request.cell;\r\n    if ('' === cellName){\r\n      onAddFail('must select a cell');\r\n      return;\r\n    }\r\n    addComputeCell(pool, cellName, onAddSuccess, onAddFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n\r\n    const onQueryCellSuccess = (dataList) => {\r\n      var cellList = [];\r\n      dataList.forEach((cell)=>{\r\n        var item = {\r\n          label: cell.address ? cell.name + ' (' + cell.address + ')' : cell.name,\r\n          value: cell.name,\r\n        }\r\n        cellList.push(item);\r\n      })\r\n      if (0 === cellList.length){\r\n        onAddFail('no unallocated cells available');\r\n        setInitialed(true);\r\n        return;\r\n      }\r\n      setOptions(cellList);\r\n      setInitialed(true);\r\n    };\r\n\r\n    queryUnallocatedComputeCells(onQueryCellSuccess, onAddFail);\r\n  }, [initialed, open]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"select\",\r\n        label: texts.name,\r\n        onChange: handleRequestPropsChanged('cell'),\r\n        value: request.cell,\r\n        options: options,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n      },\r\n    ];\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n\r\nexport default AddDialog;\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport PowerIcon from '@material-ui/icons/Power';\r\nimport PowerOffIcon from '@material-ui/icons/PowerOff';\r\nimport WifiRoundedIcon from '@material-ui/icons/WifiRounded';\r\nimport WifiOffRoundedIcon from '@material-ui/icons/WifiOffRounded';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\n// core components\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\nimport { getComputeCell } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    name: \"Name\",\r\n    address: \"Address\",\r\n    alive: \"Alive\",\r\n    status: \"Status\",\r\n    enabled: 'Enabled',\r\n    disabled: 'Disabled',\r\n    online: \"Online\",\r\n    offline: \"Offline\",\r\n    title: 'Current Cell Status',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n    attached: 'Attached',\r\n    storage: 'Backend Storage',\r\n    localStorage: 'Use local storage',\r\n  },\r\n  'cn':{\r\n    name: \"名称\",\r\n    address: \"地址\",\r\n    alive: \"活动\",\r\n    status: \"状态\",\r\n    enabled: '已启用',\r\n    disabled: '已禁用',\r\n    online: \"在线\",\r\n    offline: \"离线\",\r\n    title: '当前节点状态',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n    attached: '已挂载',\r\n    storage: '后端存储',\r\n    localStorage: '使用本地存储',\r\n  },\r\n}\r\n\r\nconst DetailDialog = (props) => {\r\n  const classes = makeStyles(tableStyles)();\r\n  const fontClasses = makeStyles(fontStyles)();\r\n  const { lang, pool, cell, open, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ status, setStatus ] = React.useState(null);\r\n\r\n  const texts = i18n[lang];\r\n\r\n  const onFetchFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setStatus(null);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n\r\n  React.useEffect(()=>{\r\n    if (!pool || !cell || !open || initialed ){\r\n      return;\r\n    }\r\n\r\n    const onFetchSuccess = (currentStatus) =>{\r\n      setStatus(currentStatus);\r\n      setInitialed(true);\r\n    }\r\n\r\n    getComputeCell(pool, cell, onFetchSuccess, onFetchFail);\r\n\r\n  }, [initialed, open, pool, cell]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    let statusLabel, statusIcon;\r\n    if (status.enabled){\r\n      statusLabel = texts.enabled;\r\n      statusIcon = <CheckIcon className={fontClasses.successText}/>;\r\n    }else{\r\n      statusLabel = texts.disabled;\r\n      statusIcon = <BlockIcon className={fontClasses.warningText}/>;\r\n    }\r\n\r\n    let aliveLabel, aliveIcon;\r\n    if (status.alive){\r\n      aliveLabel = texts.online;\r\n      aliveIcon = <WifiRoundedIcon className={fontClasses.successText}/>;\r\n    }else{\r\n      aliveLabel = texts.offline;\r\n      aliveIcon = <WifiOffRoundedIcon className={fontClasses.warningText}/>;\r\n    }\r\n\r\n    content = (\r\n      <div className={classes.tableResponsive}>\r\n        <Table className={classes.table}>\r\n          <TableBody>\r\n            <TableRow className={classes.tableBodyRow}>\r\n              <TableCell className={classes.tableCell}>\r\n                {texts.name}\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell}>\r\n                {status.name}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow className={classes.tableBodyRow}>\r\n              <TableCell className={classes.tableCell}>\r\n                {texts.address}\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell}>\r\n                {status.address ? status.address : ''}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow className={classes.tableBodyRow}>\r\n              <TableCell className={classes.tableCell}>\r\n                {texts.status}\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell}>\r\n                <Tooltip\r\n                  title={statusLabel}\r\n                  placement=\"top\"\r\n                  >\r\n                  {statusIcon}\r\n                </Tooltip>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow className={classes.tableBodyRow}>\r\n              <TableCell className={classes.tableCell}>\r\n                {texts.alive}\r\n              </TableCell>\r\n              <TableCell className={classes.tableCell}>\r\n                <Tooltip\r\n                  title={aliveLabel}\r\n                  placement=\"top\"\r\n                  >\r\n                  {aliveIcon}\r\n                </Tooltip>\r\n              </TableCell>\r\n            </TableRow>\r\n            {\r\n              status.storage?\r\n              status.storage.map( storage => {\r\n                let icon;\r\n                if (storage.attached){\r\n                  icon = (\r\n                    <Tooltip\r\n                      title={texts.attached}\r\n                      placement=\"top\"\r\n                      >\r\n                      <PowerIcon className={fontClasses.successText}/>\r\n                    </Tooltip>\r\n                  );\r\n                }else{\r\n                  icon = (\r\n                    <Tooltip\r\n                      title={storage.error}\r\n                      placement=\"top\"\r\n                      >\r\n                      <PowerOffIcon className={fontClasses.warningText}/>\r\n                    </Tooltip>\r\n                  );\r\n                }\r\n                return (\r\n                  <TableRow className={classes.tableBodyRow}>\r\n                    <TableCell className={classes.tableCell}>\r\n                      {storage.name}\r\n                    </TableCell>\r\n                    <TableCell className={classes.tableCell}>\r\n                      {icon}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              }):\r\n              <TableRow className={classes.tableBodyRow}>\r\n                <TableCell className={classes.tableCell}>\r\n                  {texts.storage}\r\n                </TableCell>\r\n                <TableCell className={classes.tableCell}>\r\n                  {texts.localStorage}\r\n                </TableCell>\r\n              </TableRow>\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n\r\nexport default DetailDialog;\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { queryComputeCellsInPool, migrateInstancesInCell } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Migrate All Instance',\r\n    sourcePool: 'Source Pool',\r\n    sourceCell: 'Source Cell',\r\n    targetCell: 'Target Cell',\r\n    offline: 'Offline',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '迁移所有云主机实例',\r\n    sourcePool: '源资源池',\r\n    sourceCell: '源节点',\r\n    targetCell: '目标节点',\r\n    offline: '离线',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\nexport default function MigrateInstancesDialog(props){\r\n  const defaultValues = {\r\n    targetCell: '',\r\n  };\r\n  const { lang, open, sourcePool, sourceCell, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    cells: [],\r\n  });\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onMigrateFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onMigrateSuccess = (sourceCell, targetCell) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(sourceCell, targetCell);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    const targetCell = request.targetCell;\r\n    if ('' === targetCell){\r\n      onMigrateFail('select a target cell');\r\n      return;\r\n    }\r\n    migrateInstancesInCell(sourcePool, sourceCell, targetCell, onMigrateSuccess, onMigrateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    const onQueryCellSuccess = dataList => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var cellList = [];\r\n      dataList.forEach(cell =>{\r\n        if (cell.name !== sourceCell){\r\n          let label;\r\n          if(cell.alive){\r\n            label = cell.name + '('+ cell.address +')';\r\n          }else{\r\n            label = cell.name + '('+ texts.offline +')';\r\n          }\r\n\r\n          cellList.push({\r\n            label: label,\r\n            value: cell.name,\r\n            disabled: !cell.alive,\r\n          })\r\n        }\r\n      });\r\n      if (0 === cellList.length){\r\n        onMigrateFail('no target cell available');\r\n        return;\r\n      }\r\n      setOptions({\r\n        cells: cellList,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n\r\n    queryComputeCellsInPool(sourcePool, onQueryCellSuccess, onMigrateFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, sourcePool, sourceCell, onMigrateFail, texts.offline]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.sourcePool,\r\n        value: sourcePool,\r\n        disabled: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 8,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.sourceCell,\r\n        value: sourceCell,\r\n        disabled: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 8,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.targetCell,\r\n        onChange: handleRequestPropsChanged('targetCell'),\r\n        value: request.targetCell,\r\n        options: options.cells,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { queryComputeCellStorages, changeComputeCellStorage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Change Storage Path',\r\n    current: \"Current Storage Path\",\r\n    location: \"New Storage Location\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改存储路径',\r\n    current: \"当前存储路径\",\r\n    location: \"新存储路径\",\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\nexport default function ChangeStoragePathDialog(props){\r\n  const defaultValues = {\r\n    current: \"\",\r\n    path: \"\",\r\n  };\r\n  const { lang, open, pool, cell, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onChangeFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onChangeSuccess = () =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(request.path, cell, pool);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    const newLocation = request.path;\r\n    if ('' === newLocation){\r\n      onChangeFail('input a new location');\r\n      return;\r\n    }\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    changeComputeCellStorage(pool, cell, newLocation, onChangeSuccess, onChangeFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || !pool || !cell){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    const onQueryPathsSuccess = payload => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      if (!payload.system){\r\n        onChangeFail('no system paths available');\r\n        return;\r\n      }\r\n      if (0 === payload.system.length){\r\n        onChangeFail('no system paths available');\r\n        return;\r\n      }\r\n      var currentPath = payload.system[0];\r\n      if (!currentPath){\r\n        onChangeFail('no system paths available');\r\n        return;\r\n      }\r\n      setRequest({\r\n        current: currentPath,\r\n        path: \"\",\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    queryComputeCellStorages(pool, cell, onQueryPathsSuccess, onChangeFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, pool, cell, onChangeFail]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.current,\r\n        value: request.current,\r\n        disabled: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 8,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.location,\r\n        onChange: handleRequestPropsChanged('path'),\r\n        value: request.path,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 8,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LocalShippingRoundedIcon from '@material-ui/icons/LocalShippingRounded';\r\nimport WifiRoundedIcon from '@material-ui/icons/WifiRounded';\r\nimport WifiOffRoundedIcon from '@material-ui/icons/WifiOffRounded';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Table from \"components/Table/ObjectTable.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport RemoveDialog from \"views/ComputeCells/RemoveDialog.js\";\r\nimport AddDialog from \"views/ComputeCells/AddDialog.js\";\r\nimport DetailDialog from \"views/ComputeCells/DetailDialog.js\";\r\nimport MigrateDialog from \"views/ComputeCells/MigrateDialog\";\r\nimport StorageDialog from \"views/ComputeCells/ChangeStorageDialog\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\nimport { queryComputeCellsInPool, modifyComputeCell, writeLog } from \"nano_api.js\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  ...fontStyles,\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    addButton: \"Add Compute Cell\",\r\n    tableTitle: \"Compute Cells\",\r\n    name: \"Name\",\r\n    address: \"Address\",\r\n    alive: \"Alive\",\r\n    status: \"Status\",\r\n    operates: \"Operates\",\r\n    noResource: \"No compute cell available\",\r\n    computePools: \"Compute Pools\",\r\n    enable: 'Enable',\r\n    disable: 'Disable',\r\n    enabled: 'Enabled',\r\n    disabled: 'Disabled',\r\n    instances: 'Instances',\r\n    detail: 'Detail',\r\n    remove: 'Remove',\r\n    migrate: 'Migrate',\r\n    online: \"Online\",\r\n    offline: \"Offline\",\r\n    changeStorage: \"Change Storage Path\",\r\n  },\r\n  'cn':{\r\n    addButton: \"添加资源节点\",\r\n    tableTitle: \"计算资源节点\",\r\n    name: \"名称\",\r\n    address: \"地址\",\r\n    alive: \"活动\",\r\n    status: \"状态\",\r\n    operates: \"操作\",\r\n    noResource: \"没有计算资源节点\",\r\n    computePools: \"计算资源池\",\r\n    enable: '启用',\r\n    disable: '禁用',\r\n    enabled: '已启用',\r\n    disabled: '已禁用',\r\n    instances: '云主机实例',\r\n    detail: '详情',\r\n    remove: '移除',\r\n    migrate: '迁移',\r\n    online: \"在线\",\r\n    offline: \"离线\",\r\n    changeStorage: \"修改存储路径\",\r\n  }\r\n}\r\n\r\nexport default function ComputeCells(props){\r\n    const classes = useStyles();\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ dataList, setDataList ] = React.useState(null);\r\n    const location = useLocation();\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const poolName = queryParams.get(\"pool\");\r\n\r\n    //for dialog\r\n    const [ addDialogVisible, setAddDialogVisible ] = React.useState(false);\r\n    const [ detailDialogVisible, setDetailDialogVisible ] = React.useState(false);\r\n    const [ removeDialogVisible, setRemoveDialogVisible ] = React.useState(false);\r\n    const [ migrateDialogVisible, setMigrateDialogVisible ] = React.useState(false);\r\n    const [ storageDialogVisible, setStorageDialogVisible ] = React.useState(false);\r\n    const [ selected, setSelected ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const reloadAllData = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const onLoadFail = (err) =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        showErrorMessage(err);\r\n      }\r\n      queryComputeCellsInPool(poolName, setDataList, onLoadFail);\r\n    }, [poolName, showErrorMessage, mounted]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //detail\r\n    const showDetailDialog = (cellName) =>{\r\n      setDetailDialogVisible(true);\r\n      setSelected(cellName);\r\n    }\r\n\r\n    const closeDetailDialog = () =>{\r\n      setDetailDialogVisible(false);\r\n    }\r\n\r\n    //delete\r\n    const showRemoveDialog = (cellName) =>{\r\n      setRemoveDialogVisible(true);\r\n      setSelected(cellName);\r\n    }\r\n\r\n    const closeRemoveDialog = () =>{\r\n      setRemoveDialogVisible(false);\r\n    }\r\n\r\n    const onRemoveSuccess = (cellName) =>{\r\n      closeRemoveDialog();\r\n      showNotifyMessage('cell '+ cellName + ' removed from ' + poolName);\r\n      reloadAllData();\r\n    };\r\n\r\n    //create\r\n    const showAddDialog = () =>{\r\n      setAddDialogVisible(true);\r\n    };\r\n\r\n    const closeAddDialog = () =>{\r\n      setAddDialogVisible(false);\r\n    }\r\n\r\n    const onAddSuccess = (cellName) =>{\r\n      closeAddDialog();\r\n      showNotifyMessage('cell '+ cellName + ' added to ' + poolName);\r\n      reloadAllData();\r\n    };\r\n\r\n    //migrate instance\r\n    const showMigrateDialog = cellName =>{\r\n      setMigrateDialogVisible(true);\r\n      setSelected(cellName);\r\n    }\r\n\r\n    const closeMigrateDialog = () =>{\r\n      setMigrateDialogVisible(false);\r\n    }\r\n\r\n    const onMigrateSuccess = () =>{\r\n      closeMigrateDialog();\r\n      reloadAllData();\r\n    };\r\n\r\n    //change storage\r\n    //migrate instance\r\n    const showStorageDialog = cellName =>{\r\n      setStorageDialogVisible(true);\r\n      setSelected(cellName);\r\n    }\r\n\r\n    const closeStorageDialog = () =>{\r\n      setStorageDialogVisible(false);\r\n    }\r\n\r\n    const onStoragePathChange = (location, cellName) =>{\r\n      closeStorageDialog();\r\n      showNotifyMessage('storage path of  '+ cellName + ' changed to ' + location);\r\n    };\r\n\r\n    const enableCell = cellName =>{\r\n      const onSuccess = () =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        reloadAllData();\r\n      }\r\n      modifyComputeCell(poolName, cellName, true, onSuccess, showErrorMessage);\r\n    }\r\n\r\n    const disableCell = cellName =>{\r\n      const onSuccess = () =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        reloadAllData();\r\n      }\r\n      modifyComputeCell(poolName, cellName, false, onSuccess, showErrorMessage);\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadAllData();\r\n      const updateInterval = 5 * 1000;\r\n      var timerID = setInterval(()=>{\r\n        if (mounted){\r\n          reloadAllData();\r\n        }\r\n      }, updateInterval);\r\n      return () =>{\r\n        setMounted(false);\r\n        clearInterval(timerID);\r\n      }\r\n    }, [reloadAllData, mounted]);\r\n\r\n    let content;\r\n    if (null === dataList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === dataList.length){\r\n      content = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noResource}</Info></Box>;\r\n    }else{\r\n      var rows = [];\r\n      dataList.forEach( cell => {\r\n        var buttons = [\r\n          {\r\n            label: texts.instances,\r\n            icon: CloudQueueIcon,\r\n            href: '/admin/instances/range/?pool=' + poolName + '&cell=' + cell.name,\r\n          },\r\n          {\r\n            onClick: e => showDetailDialog(cell.name),\r\n            icon: SettingsIcon,\r\n            label: texts.detail,\r\n          },\r\n          {\r\n            onClick: e => showStorageDialog(cell.name),\r\n            icon: StorageIcon,\r\n            label: texts.changeStorage,\r\n          },\r\n          {\r\n            onClick: e => showRemoveDialog(cell.name),\r\n            icon: DeleteIcon,\r\n            label: texts.remove,\r\n          },\r\n          {\r\n            onClick: e => showMigrateDialog(cell.name),\r\n            icon: LocalShippingRoundedIcon,\r\n            label: texts.migrate,\r\n          },\r\n        ];\r\n\r\n        const { name, address, enabled, alive } = cell;\r\n        let statusIcon, aliveIcon;\r\n        if (enabled){\r\n          statusIcon = (\r\n            <Tooltip\r\n              title={texts.enabled}\r\n              placement=\"top\"\r\n              >\r\n              <CheckIcon className={classes.successText}/>\r\n            </Tooltip>\r\n          );\r\n          const disableButton = {\r\n            label: texts.disable,\r\n            icon: BlockIcon,\r\n            onClick: () => disableCell(name),\r\n          };\r\n          buttons = [disableButton].concat(buttons);\r\n        }else{\r\n          statusIcon = (\r\n            <Tooltip\r\n              title={texts.disabled}\r\n              placement=\"top\"\r\n              >\r\n              <BlockIcon className={classes.warningText}/>\r\n            </Tooltip>\r\n          );\r\n          const enableButton = {\r\n            label: texts.enable,\r\n            icon: CheckIcon,\r\n            onClick: () => enableCell(name),\r\n          };\r\n          buttons = [enableButton].concat(buttons);\r\n        }\r\n\r\n        if (alive){\r\n          aliveIcon = (\r\n            <Tooltip\r\n              title={texts.online}\r\n              placement=\"top\"\r\n              >\r\n              <WifiRoundedIcon className={classes.successText}/>\r\n            </Tooltip>\r\n          );\r\n        }else{\r\n          aliveIcon = (\r\n            <Tooltip\r\n              title={texts.offline}\r\n              placement=\"top\"\r\n              >\r\n              <WifiOffRoundedIcon className={classes.warningText}/>\r\n            </Tooltip>\r\n          );\r\n        }\r\n\r\n        const operates = buttons.map((button, key) => (\r\n          React.createElement(IconButton, {\r\n            ...button,\r\n            key: key,\r\n          })\r\n        ))\r\n        var row = [name, address, aliveIcon, statusIcon, operates];\r\n        rows.push(row);\r\n      });\r\n      content = (\r\n        <Table\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.address, texts.alive, texts.status, texts.operates]}\r\n          rows={rows}/>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n            <Link to='/admin/compute_pools/'>\r\n              {texts.computePools}\r\n            </Link>\r\n            <Typography color=\"textPrimary\">{poolName}</Typography>\r\n          </Breadcrumbs>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <GridContainer>\r\n            <GridItem xs={3}>\r\n              <Button size=\"sm\" color=\"info\" round onClick={showAddDialog}><AddIcon />{texts.addButton}</Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <Snackbar\r\n          place=\"tr\"\r\n          color={notifyColor}\r\n          message={notifyMessage}\r\n          open={\"\" !== notifyMessage}\r\n          closeNotification={closeNotify}\r\n          close\r\n        />\r\n        <AddDialog\r\n          lang={lang}\r\n          open={addDialogVisible}\r\n          pool={poolName}\r\n          onSuccess={onAddSuccess}\r\n          onCancel={closeAddDialog}\r\n          />\r\n        <DetailDialog\r\n          lang={lang}\r\n          open={detailDialogVisible}\r\n          pool={poolName}\r\n          cell={selected}\r\n          onCancel={closeDetailDialog}\r\n          />\r\n        <RemoveDialog\r\n          lang={lang}\r\n          open={removeDialogVisible}\r\n          pool={poolName}\r\n          cell={selected}\r\n          onSuccess={onRemoveSuccess}\r\n          onCancel={closeRemoveDialog}\r\n          />\r\n        <MigrateDialog\r\n          lang={lang}\r\n          open={migrateDialogVisible}\r\n          sourcePool={poolName}\r\n          sourceCell={selected}\r\n          onSuccess={onMigrateSuccess}\r\n          onCancel={closeMigrateDialog}\r\n          />\r\n        <StorageDialog\r\n          lang={lang}\r\n          open={storageDialogVisible}\r\n          pool={poolName}\r\n          cell={selected}\r\n          onSuccess={onStoragePathChange}\r\n          onCancel={closeStorageDialog}\r\n          />\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// react plugin for creating charts\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nexport default function PieChart(props){\r\n  const { series } = props;\r\n  var labels = [];\r\n  var valueList = [];\r\n  var colorList = [];\r\n  series.forEach( slice => {\r\n    labels.push(slice.label);\r\n    valueList.push(slice.value);\r\n    colorList.push(slice.color);\r\n  });\r\n\r\n  const chartData = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        data: valueList,\r\n        backgroundColor: colorList,\r\n        borderWidth: 1,\r\n        hoverBorderWidth: 0,\r\n      }\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    cutoutPercentage: 5,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    layout: {\r\n            padding: {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0\r\n            }\r\n        }\r\n  };\r\n\r\n  return <Pie data={chartData} options={chartOptions}/>;\r\n}\r\n","import {\r\n  successColor,\r\n  whiteColor,\r\n  grayColor,\r\n  hexToRgb\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst dashboardStyle = {\r\n  successText: {\r\n    color: successColor[0]\r\n  },\r\n  upArrowCardCategory: {\r\n    width: \"16px\",\r\n    height: \"16px\"\r\n  },\r\n  stats: {\r\n    color: grayColor[0],\r\n    display: \"inline-flex\",\r\n    fontSize: \"12px\",\r\n    lineHeight: \"22px\",\r\n    \"& svg\": {\r\n      top: \"4px\",\r\n      width: \"16px\",\r\n      height: \"16px\",\r\n      position: \"relative\",\r\n      marginRight: \"3px\",\r\n      marginLeft: \"3px\"\r\n    },\r\n    \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n      top: \"4px\",\r\n      fontSize: \"16px\",\r\n      position: \"relative\",\r\n      marginRight: \"3px\",\r\n      marginLeft: \"3px\"\r\n    }\r\n  },\r\n  cardCategory: {\r\n    color: grayColor[0],\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    paddingTop: \"10px\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardCategoryWhite: {\r\n    color: \"rgba(\" + hexToRgb(whiteColor) + \",.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\"\r\n  },\r\n  cardTitle: {\r\n    color: grayColor[2],\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: grayColor[1],\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  },\r\n  cardTitleWhite: {\r\n    color: whiteColor,\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: grayColor[1],\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nexport default dashboardStyle;\r\n","import React from \"react\";\r\n// react plugin for creating charts\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport PieChart from \"views/Dashboard/PieChart.js\";\r\nimport { grayColor } from \"assets/jss/material-dashboard-react.js\";\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\n\r\nexport default function PieCard(props){\r\n  const {title, series, displayValue } = props;\r\n  var total = 0;\r\n  var chartStyles = {\r\n    ...dashboardStyles,\r\n  };\r\n\r\n  series.forEach( (slice, index) => {\r\n    //slice => {value, color, label}\r\n    total += slice.value;\r\n    const seriesName = 'series-' + index.toString();\r\n    chartStyles[seriesName] = {\r\n      ...dashboardStyles.cardCategory,\r\n      color: slice.color,\r\n    };\r\n  });\r\n\r\n  chartStyles.topDivider = {\r\n    borderTop: \"1px solid \" + grayColor[10],\r\n  }\r\n\r\n  const useStyles = makeStyles(chartStyles);\r\n  const classes = useStyles();\r\n  let totalLabel;\r\n  if(displayValue){\r\n    totalLabel = displayValue(total);\r\n  }else{\r\n    totalLabel = total.toString();\r\n  }\r\n  return (\r\n    <Card chart>\r\n      <CardHeader>\r\n        <Typography className={classes.cardCategory}>\r\n          {title + ': ' + totalLabel}\r\n        </Typography>\r\n        <PieChart series={series}/>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Box m={0} p={2}  className={classes.topDivider}>\r\n          <Box display='flex'>\r\n            {\r\n              series.map((slice, index) =>{\r\n                let valueLabel;\r\n                if (displayValue){\r\n                  valueLabel = displayValue(slice.value);\r\n                }else{\r\n                  valueLabel = slice.value.toString();\r\n                }\r\n                return(\r\n                  <Box m={1} key={slice.label}>\r\n                    <Typography component='span' className={classes['series-' + index.toString()]}>\r\n                      {slice.label}\r\n                    </Typography>\r\n                    <Typography component='span'>\r\n                      {': ' + valueLabel}\r\n                    </Typography>\r\n                  </Box>\r\n                )\r\n              })\r\n            }\r\n            </Box>\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// react plugin for creating charts\r\nimport { Line } from 'react-chartjs-2';\r\n// @material-ui/core\r\nimport { blackColor, whiteColor } from \"assets/jss/material-dashboard-react.js\";\r\n\r\nexport default function LineChart(props){\r\n  const DefaultMaxTicks = 10;\r\n  const { series, minTickStep, displayValue, light, maxTicks, maxValue } = props;\r\n  const maxTicksValue = maxTicks? maxTicks : DefaultMaxTicks;\r\n  const brushColor = light ? blackColor : whiteColor;\r\n  const dataCount = series[0].data.length;\r\n  const labels = new Array(dataCount).fill('');\r\n  const minValue = 0;\r\n  const maxValueFixed = maxValue? true: false;\r\n  let maxValueOfAll;\r\n  if(maxValueFixed){\r\n    maxValueOfAll = maxValue;\r\n  }else{\r\n    maxValueOfAll = minTickStep;\r\n  }\r\n\r\n  var datasets = [];\r\n  series.forEach( dataSeries => {\r\n    if (!maxValueFixed){\r\n      dataSeries.data.forEach( value =>{\r\n        maxValueOfAll = Math.max(maxValueOfAll, value);\r\n      })\r\n    }\r\n    datasets.push({\r\n      data: dataSeries.data,\r\n      label: dataSeries.label,\r\n      pointBackgroundColor: dataSeries.color,\r\n      pointBorderColor: dataSeries.color,\r\n      pointRadius: 5,\r\n      borderColor: brushColor,\r\n      borderWidth: 4,\r\n      lineTension: 0.0,\r\n    })\r\n  });\r\n\r\n  const chartData = {\r\n    labels: labels,\r\n    datasets: datasets,\r\n  };\r\n\r\n  let tickStep;\r\n  if (maxValueOfAll <= maxTicksValue * minTickStep){\r\n    tickStep = minTickStep;\r\n  }else{\r\n    tickStep = Math.ceil(maxValueOfAll / maxTicksValue / minTickStep) * minTickStep;\r\n  }\r\n\r\n  const chartOptions = {\r\n    scales: {\r\n      xAxes: [{\r\n        gridLines:{\r\n            drawBorder: false,\r\n            lineWidth: 0,\r\n            zeroLineColor: brushColor,\r\n            zeroLineWidth: 2,\r\n        },\r\n      }],\r\n      yAxes: [{\r\n        gridLines:{\r\n            borderDash: [2, 4],\r\n            color: brushColor,\r\n            zeroLineColor: brushColor,\r\n            zeroLineWidth: 2,\r\n            drawBorder: false,\r\n        },\r\n        ticks: {\r\n          stepSize: tickStep,\r\n          fontColor: brushColor,\r\n          suggestedMax: maxValueOfAll,\r\n          suggestedMin: minValue,\r\n          callback: value => {\r\n            if (displayValue){\r\n              return displayValue(value);\r\n            }else {\r\n              return value.toString();\r\n            }\r\n          }\r\n        },\r\n      }],\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n  };\r\n  return <Line data={chartData} options={chartOptions}/>;\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport LineChart from \"views/Dashboard/LineChart.js\";\r\nimport { grayColor } from \"assets/jss/material-dashboard-react.js\";\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\n\r\nexport default function LineCard(props){\r\n  const {title, color, series, displayValue, minTickStep, maxValue } = props;\r\n  var styles = {\r\n    ...dashboardStyles,\r\n    topDivider: {\r\n      borderTop: \"1px solid \" + grayColor[10],\r\n    },\r\n  };\r\n  var lastValueLabels = [];\r\n  series.forEach( ({ data, label }) => {\r\n    const lastValue = data[data.length - 1];\r\n    let valueString;\r\n    if (displayValue){\r\n      valueString = displayValue(lastValue);\r\n    }else{\r\n      valueString = lastValue.toString();\r\n    }\r\n    lastValueLabels.push(label + ': ' + valueString);\r\n  });\r\n\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  return (\r\n    <Card chart>\r\n      <CardHeader color={color}>\r\n        <LineChart series={series} minTickStep={minTickStep} displayValue={displayValue} maxValue={maxValue}/>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Typography variant='h5' component='div' className={classes.cardTitle}>\r\n          {title}\r\n        </Typography>\r\n        <Box m={0} p={2} className={classes.topDivider}>\r\n          <Typography component='span' className={classes.cardCategory}>\r\n            {lastValueLabels.join(' / ') + ' / ' + maxValue.toString()}\r\n          </Typography>\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// react plugin for creating charts\r\nimport { Bar } from 'react-chartjs-2';\r\n// @material-ui/core\r\nimport { blackColor, whiteColor } from \"assets/jss/material-dashboard-react.js\";\r\n\r\nexport default function StackedBarChart(props){\r\n  const DefaultMaxTicks = 10;\r\n  const { series, minTickStep, displayValue, light, maxTicks } = props;\r\n  const maxTicksValue = maxTicks? maxTicks : DefaultMaxTicks;\r\n  const brushColor = light ? blackColor : whiteColor;\r\n  const dataCount = series[0].data.length;\r\n  const labels = new Array(dataCount).fill('');\r\n  const minValue = 0;\r\n  var maxValue = minTickStep;\r\n  var datasets = [];\r\n  series.forEach( dataSeries => {\r\n    datasets.push({\r\n      data: dataSeries.data,\r\n      label: dataSeries.label,\r\n      backgroundColor: dataSeries.color,\r\n      barPercentage: 0.6,\r\n      borderColor: brushColor,\r\n      borderWidth: 1,\r\n      stack: 'default',\r\n    })\r\n  });\r\n\r\n  //max value for summary\r\n  for (var i = 0; i < dataCount; i++){\r\n    var total = 0;\r\n    for (var j = 0; j < series.length; j++){\r\n      total += series[j].data[i];\r\n    }\r\n    maxValue = Math.max(maxValue, total);\r\n  }\r\n\r\n  const chartData = {\r\n    labels: labels,\r\n    datasets: datasets,\r\n  };\r\n\r\n  let tickStep;\r\n  if (maxValue <= maxTicksValue * minTickStep){\r\n    tickStep = minTickStep;\r\n  }else{\r\n    tickStep = Math.ceil(maxValue / maxTicksValue / minTickStep) * minTickStep;\r\n  }\r\n\r\n  const chartOptions = {\r\n    scales: {\r\n      xAxes: [{\r\n        display: false,\r\n      }],\r\n      yAxes: [{\r\n        stacked: true,\r\n        gridLines:{\r\n            borderDash: [2, 4],\r\n            color: brushColor,\r\n            zeroLineColor: brushColor,\r\n            zeroLineWidth: 2,\r\n        },\r\n        ticks: {\r\n          stepSize: tickStep,\r\n          fontColor: brushColor,\r\n          suggestedMax: maxValue,\r\n          suggestedMin: minValue,\r\n          callback: value => {\r\n            if (displayValue){\r\n              return displayValue(value);\r\n            }else {\r\n              return value.toString();\r\n            }\r\n          }\r\n        },\r\n      }],\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n  };\r\n  return <Bar data={chartData} options={chartOptions}/>;\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport StackedBarChart from \"views/Dashboard/StackedBarChart.js\";\r\nimport { grayColor } from \"assets/jss/material-dashboard-react.js\";\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\n\r\nexport default function StackedBarCard(props){\r\n  const {title, color, series, displayValue, minTickStep } = props;\r\n  var styles = {\r\n    ...dashboardStyles,\r\n    topDivider: {\r\n      borderTop: \"1px solid \" + grayColor[10],\r\n    },\r\n  };\r\n  var lastValueLabels = [];\r\n  series.forEach( ({ data, label }) => {\r\n    const lastValue = data[data.length - 1];\r\n    let valueString;\r\n    if (displayValue){\r\n      valueString = displayValue(lastValue);\r\n    }else{\r\n      valueString = lastValue.toString();\r\n    }\r\n    lastValueLabels.push(label + ': ' + valueString);\r\n  });\r\n\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  return (\r\n    <Card chart>\r\n      <CardHeader color={color}>\r\n        <StackedBarChart series={series} minTickStep={minTickStep} displayValue={displayValue}/>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Typography variant='h5' component='div' className={classes.cardTitle}>\r\n          {title}\r\n        </Typography>\r\n        <Box m={0} p={2} className={classes.topDivider}>\r\n          <Typography component='span' className={classes.cardCategory}>\r\n            {lastValueLabels.join(' / ')}\r\n          </Typography>\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n","import React from \"react\";\r\n// react plugin for creating charts\r\nimport { Bar } from 'react-chartjs-2';\r\n// @material-ui/core\r\nimport { blackColor, whiteColor } from \"assets/jss/material-dashboard-react.js\";\r\n\r\nexport default function MultiBarChart(props){\r\n  const DefaultMaxTicks = 10;\r\n  const { series, minTickStep, displayValue, light, maxTicks } = props;\r\n  const maxTicksValue = maxTicks? maxTicks : DefaultMaxTicks;\r\n  const brushColor = light ? blackColor : whiteColor;\r\n  const dataCount = series[0].data.length;\r\n  const labels = new Array(dataCount).fill('');\r\n  const minValue = 0;\r\n  var maxValue = minTickStep;\r\n  var datasets = [];\r\n  series.forEach( dataSeries => {\r\n    dataSeries.data.forEach( value =>{\r\n      maxValue = Math.max(maxValue, value);\r\n    })\r\n    datasets.push({\r\n      data: dataSeries.data,\r\n      label: dataSeries.label,\r\n      backgroundColor: dataSeries.color,\r\n      barPercentage: 0.6,\r\n      borderColor: brushColor,\r\n      borderWidth: 1,\r\n    })\r\n  });\r\n\r\n  const chartData = {\r\n    labels: labels,\r\n    datasets: datasets,\r\n  };\r\n\r\n  let tickStep;\r\n  if (maxValue <= maxTicksValue * minTickStep){\r\n    tickStep = minTickStep;\r\n  }else{\r\n    tickStep = Math.ceil(maxValue / maxTicksValue / minTickStep) * minTickStep;\r\n  }\r\n\r\n  const chartOptions = {\r\n    scales: {\r\n      xAxes: [{\r\n        display: false,\r\n      }],\r\n      yAxes: [{\r\n        gridLines:{\r\n            borderDash: [2, 4],\r\n            color: brushColor,\r\n            zeroLineColor: brushColor,\r\n            zeroLineWidth: 2,\r\n        },\r\n        ticks: {\r\n          stepSize: tickStep,\r\n          fontColor: brushColor,\r\n          suggestedMax: maxValue,\r\n          suggestedMin: minValue,\r\n          callback: value => {\r\n            if (displayValue){\r\n              return displayValue(value);\r\n            }else {\r\n              return value.toString();\r\n            }\r\n          }\r\n        },\r\n      }],\r\n    },\r\n    legend: {\r\n      display: false,\r\n    },\r\n  };\r\n  return <Bar data={chartData} options={chartOptions}/>;\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport MultiBarChart from \"views/Dashboard/MultiBarChart.js\";\r\nimport { grayColor } from \"assets/jss/material-dashboard-react.js\";\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\n\r\nexport default function MultiBarCard(props){\r\n  const {title, color, series, displayValue, minTickStep } = props;\r\n  var styles = {\r\n    ...dashboardStyles,\r\n    topDivider: {\r\n      borderTop: \"1px solid \" + grayColor[10],\r\n    },\r\n  };\r\n  var lastValueLabels = [];\r\n  series.forEach( ({ data, label }) => {\r\n    const lastValue = data[data.length - 1];\r\n    let valueString;\r\n    if (displayValue){\r\n      valueString = displayValue(lastValue);\r\n    }else{\r\n      valueString = lastValue.toString();\r\n    }\r\n    lastValueLabels.push(label + ': ' + valueString);\r\n  });\r\n\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  return (\r\n    <Card chart>\r\n      <CardHeader color={color}>\r\n        <MultiBarChart series={series} minTickStep={minTickStep} displayValue={displayValue}/>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Typography variant='h5' component='div' className={classes.cardTitle}>\r\n          {title}\r\n        </Typography>\r\n        <Box m={0} p={2} className={classes.topDivider}>\r\n          <Typography component='span' className={classes.cardCategory}>\r\n            {lastValueLabels.join(' / ')}\r\n          </Typography>\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AllOutIcon from '@material-ui/icons/AllOut';\r\n\r\n// core components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport PieCard from \"views/Dashboard/PieCard.js\";\r\nimport LineCard from \"views/Dashboard/LineCard.js\";\r\nimport StackedBarCard from \"views/Dashboard/StackedBarCard.js\";\r\nimport MultiBarCard from \"views/Dashboard/MultiBarCard.js\";\r\n\r\nimport { getLoggedSession, redirectToLogin, truncateToRadix, bpsToString } from 'utils.js';\r\nimport { getZoneStatus } from \"nano_api.js\";\r\n\r\nimport {\r\n  primaryColor,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  grayColor,\r\n  whiteColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    allButton: \"Show All Compute Pools\",\r\n    pools: 'Compute Pools Summary',\r\n    cells: 'Compute Cells Summary',\r\n    instances: 'Instances Summary',\r\n    disks: 'Storage Space Summary',\r\n    coreUsage: 'Core Usage',\r\n    memoryUsage: 'Memory Usage',\r\n    ioUsage: 'IO Usage',\r\n    enabled: 'Enabled',\r\n    disabled: 'Disabled',\r\n    online: 'Online',\r\n    offline: 'Offline',\r\n    stopped: 'Stopped',\r\n    running: 'Running',\r\n    lost: 'Lost',\r\n    migrate: 'Migrating',\r\n    used: 'Used',\r\n    available: 'Available',\r\n    coresUsed: 'Cores Used',\r\n    network: 'Network Usage',\r\n    diskIO: 'Disk IO',\r\n    receive: 'Receive',\r\n    send: 'Send',\r\n    write: 'Write',\r\n    read: 'Read',\r\n  },\r\n  'cn':{\r\n    allButton: \"查看所有资源池\",\r\n    pools: '计算资源池总数',\r\n    cells: '资源节点总数',\r\n    instances: '云主机总数',\r\n    disks: '总磁盘空间',\r\n    coreUsage: 'CPU用量',\r\n    memoryUsage: '内存用量',\r\n    ioUsage: 'IO吞吐量',\r\n    enabled: '启用',\r\n    disabled: '禁用',\r\n    online: '在线',\r\n    offline: '离线',\r\n    stopped: '停止',\r\n    running: '运行',\r\n    lost: '失联',\r\n    migrate: '迁移中',\r\n    used: '已用',\r\n    available: '可用',\r\n    coresUsed: '核心已占用',\r\n    network: '网络流量',\r\n    diskIO: '磁盘IO',\r\n    receive: '接收',\r\n    send: '发送',\r\n    write: '写磁盘',\r\n    read: '读磁盘',\r\n  }\r\n}\r\n\r\nconst seriesColor1 = infoColor[0];\r\nconst seriesColor2 = successColor[0];\r\nconst seriesColor3 = warningColor[0];\r\nconst seriesColor4 = primaryColor[0];\r\nconst disabledColor = grayColor[2];\r\n\r\nexport default function ZoneStatus(props) {\r\n  const CoreArraySize = 6;\r\n  const MemoryArraySize = 10;\r\n  const NetworkIOArraySize = 10;\r\n  const DiskIOArraySize = 10;\r\n  const [ status, setStatus ] = React.useState(null);\r\n  const { lang } = props;\r\n  const texts = i18n[lang];\r\n\r\n  React.useEffect(() =>{\r\n    var mounted = true\r\n    var coreRecords = new Array(CoreArraySize).fill({\r\n      current: 0,\r\n      max: 0,\r\n    });\r\n    var memoryRecords = new Array(MemoryArraySize).fill({\r\n      available: 0,\r\n      used: 0,\r\n    });\r\n    var networkRecords = new Array(NetworkIOArraySize).fill({\r\n      receive: 0,\r\n      send: 0,\r\n    });\r\n    var diskRecords = new Array(DiskIOArraySize).fill({\r\n      write: 0,\r\n      read: 0,\r\n    });\r\n\r\n    const queryZoneStatus = () =>{\r\n      const MiB = 1 << 20;\r\n      const onOperateSuccess = s => {\r\n        coreRecords.shift();\r\n        coreRecords.push({\r\n          current: truncateToRadix(s.cpu_usage, 2),\r\n          max: s.max_cpu,\r\n        });\r\n        memoryRecords.shift();\r\n        memoryRecords.push({\r\n          available: truncateToRadix(s.available_memory/MiB, 2),\r\n          used: truncateToRadix((s.max_memory - s.available_memory)/MiB, 2),\r\n        });\r\n        networkRecords.shift();\r\n        networkRecords.push({\r\n          receive: s.receive_speed,\r\n          send: s.send_speed,\r\n          // receive: 100 * MiB * Math.random(),\r\n          // send: 100 * MiB * Math.random(),\r\n        });\r\n        diskRecords.shift();\r\n        diskRecords.push({\r\n          write: s.write_speed,\r\n          read: s.read_speed,\r\n          // write: 10 * MiB * Math.random(),\r\n          // read: 10 * MiB * Math.random(),\r\n        });\r\n\r\n        setStatus({\r\n          ...s,\r\n          coreRecords: coreRecords,\r\n          memoryRecords: memoryRecords,\r\n          networkRecords: networkRecords,\r\n          diskRecords: diskRecords,\r\n        });\r\n      }\r\n      getZoneStatus(onOperateSuccess);\r\n    }\r\n\r\n    queryZoneStatus();\r\n    const updateInterval = 2 * 1000;\r\n    var timerID = setInterval(()=>{\r\n      if (mounted){\r\n        queryZoneStatus();\r\n      }\r\n    }, updateInterval);\r\n    return () =>{\r\n      mounted = false;\r\n      clearInterval(timerID);\r\n    }\r\n  }, []);\r\n\r\n  //reder begin\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    return redirectToLogin();\r\n  }\r\n\r\n  let content;\r\n  if (!status){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    var startTime = new Date(status.start_time.replace(' ', 'T'));\r\n    var now = new Date();\r\n    var elapsedSeconds = Math.floor((now.getTime() - startTime.getTime())/1000);\r\n    var elapsedDays = Math.floor(elapsedSeconds/(24*3600));\r\n    elapsedSeconds -= elapsedDays*24*3600;\r\n    var elapsedHours = Math.floor(elapsedSeconds/3600);\r\n    elapsedSeconds -= elapsedHours*3600;\r\n    var elapsedMinutes = Math.floor(elapsedSeconds/60);\r\n    elapsedSeconds -= elapsedMinutes*60;\r\n    let uptimeText;\r\n    if('cn' === lang){\r\n      uptimeText = '系统启动时间 ' + status.start_time + ', 已运行 ' + elapsedDays + ' 天 ' + elapsedHours + ' 小时 ' + elapsedMinutes + ' 分 ' + elapsedSeconds + ' 秒';\r\n    }else{\r\n      uptimeText = 'System start at ' + status['start_time'] + ', Uptime: ' + elapsedDays + ' day, ' + elapsedHours + ' hour, ' + elapsedMinutes + ' min, ' + elapsedSeconds + ' secs';\r\n    }\r\n\r\n    const updateTime = (\r\n      <GridItem xs={12} key='uptime'>\r\n        <Box align='center'>\r\n          <Typography component='span' >\r\n            {uptimeText}\r\n          </Typography>\r\n        </Box>\r\n      </GridItem>\r\n    )\r\n\r\n    const [ disabledPools, enabledPools ] = status.pools;\r\n    const poolData = [{\r\n      value: disabledPools,\r\n      label: texts.disabled,\r\n      color: disabledColor,\r\n    },{\r\n      value: enabledPools,\r\n      label: texts.enabled,\r\n      color: seriesColor1,\r\n    }];\r\n    const poolChart = (\r\n      <GridItem xs={12} sm={4} md={3} key='pool'>\r\n        <PieCard\r\n          title={texts.pools}\r\n          series={poolData}\r\n          />\r\n      </GridItem>\r\n    )\r\n\r\n    const [ offlineCell, onlineCell ] = status.cells;\r\n    const cellData = [{\r\n      value: offlineCell,\r\n      label: texts.offline,\r\n      color: disabledColor,\r\n    },{\r\n      value: onlineCell,\r\n      label: texts.online,\r\n      color: seriesColor2,\r\n    }];\r\n    const cellChart = (\r\n      <GridItem xs={12} sm={4} md={3} key='cell'>\r\n        <PieCard\r\n          title={texts.cells}\r\n          series={cellData}\r\n          />\r\n      </GridItem>\r\n    )\r\n\r\n    const [ stoppedInstance, runningInstance, lostInstance, migrateInstance ] = status.instances;\r\n    const instanceData = [{\r\n      value: stoppedInstance,\r\n      label: texts.stopped,\r\n      color: disabledColor,\r\n    },{\r\n      value: runningInstance,\r\n      label: texts.running,\r\n      color: seriesColor1,\r\n    },{\r\n      value: lostInstance,\r\n      label: texts.lost,\r\n      color: seriesColor3,\r\n    },{\r\n      value: migrateInstance,\r\n      label: texts.migrate,\r\n      color: seriesColor4,\r\n    }];\r\n    const instanceChart = (\r\n      <GridItem xs={12} sm={4} md={3} key='instance'>\r\n        <PieCard\r\n          title={texts.instances}\r\n          series={instanceData}\r\n          />\r\n      </GridItem>\r\n    )\r\n\r\n    const GiB = 1 << 30;\r\n    const availableDisk = truncateToRadix(status.available_disk / GiB, 2);\r\n    const usedDisk = truncateToRadix((status.max_disk - status.available_disk) /GiB, 2);\r\n    const storageData = [{\r\n      value: availableDisk,\r\n      label: texts.available,\r\n      color: seriesColor1,\r\n    },{\r\n      value: usedDisk,\r\n      label: texts.used,\r\n      color: seriesColor4,\r\n    }];\r\n    const storageChart = (\r\n      <GridItem xs={12} sm={4} md={3} key='disks'>\r\n        <PieCard\r\n          title={texts.disks}\r\n          series={storageData}\r\n          displayValue={value =>{\r\n            if (Number.isInteger(value)){\r\n              return value.toString() + ' GB';\r\n            }else{\r\n              return value.toFixed(2) + ' GB';\r\n            }\r\n          }}\r\n          />\r\n      </GridItem>\r\n    )\r\n    //core usage\r\n    var usedCores = {\r\n      label: texts.coresUsed,\r\n      color: whiteColor,\r\n      data: [],\r\n    }\r\n\r\n    var maxCores = 0;\r\n    status.coreRecords.forEach( data =>{\r\n      usedCores.data.push(data.current);\r\n      maxCores = Math.max(maxCores, data.max);\r\n    })\r\n\r\n    const coresChart = (\r\n      <GridItem xs={12} sm={6} md={4} key='cores-usage'>\r\n        <LineCard\r\n          title={texts.coreUsage}\r\n          series={[usedCores]}\r\n          color='success'\r\n          minTickStep={1}\r\n          maxValue={maxCores}\r\n          />\r\n      </GridItem>\r\n    )\r\n    //memory\r\n    var usedMemory = {\r\n      label: texts.used,\r\n      color: grayColor[4],\r\n      data: [],\r\n    };\r\n    var availableMemory = {\r\n      label: texts.available,\r\n      color: successColor[1],\r\n      data: [],\r\n    };\r\n    status.memoryRecords.forEach( data =>{\r\n      usedMemory.data.push(data.used);\r\n      availableMemory.data.push(data.available)\r\n    })\r\n    const memoryChart = (\r\n      <GridItem xs={12} sm={6} md={4} key='memory-usage'>\r\n        <StackedBarCard\r\n          title={texts.memoryUsage}\r\n          series={[usedMemory, availableMemory]}\r\n          color='info'\r\n          minTickStep={1 << 10}\r\n          displayValue={ mib => {\r\n            const GiB = 1 << 10;\r\n            if (0 === mib){\r\n              return '0';\r\n            }else if (mib >= GiB){\r\n              if (0 === mib % GiB){\r\n                return (mib / GiB).toString() + ' GB';\r\n              }else{\r\n                return (mib / GiB).toFixed(2) + ' GB';\r\n              }\r\n            }else {\r\n              return mib.toString() + ' MB';\r\n            }\r\n          }}\r\n          />\r\n      </GridItem>\r\n    )\r\n    //network\r\n    var networkReceive = {\r\n      label: texts.receive,\r\n      color: infoColor[3],\r\n      data: [],\r\n    };\r\n    var networkSend = {\r\n      label: texts.send,\r\n      color: primaryColor[1],\r\n      data: [],\r\n    };\r\n    status.networkRecords.forEach( data =>{\r\n      networkReceive.data.push(data.receive);\r\n      networkSend.data.push(data.send)\r\n    })\r\n    const networkSeries = [ networkReceive, networkSend ];\r\n    const mbBased = 1 << 20;\r\n    const networkChart = (\r\n      <GridItem xs={12} sm={6} md={4} key='network-usage'>\r\n        <MultiBarCard\r\n          title={texts.network}\r\n          series={networkSeries}\r\n          displayValue={bpsToString}\r\n          minTickStep={mbBased}\r\n          color='warning'\r\n          />\r\n      </GridItem>\r\n    )\r\n    //disk IO\r\n    var diskWrite = {\r\n      label: texts.write,\r\n      color: successColor[1],\r\n      data: [],\r\n    };\r\n    var diskRead = {\r\n      label: texts.read,\r\n      color: infoColor[3],\r\n      data: [],\r\n    };\r\n    status.diskRecords.forEach( data =>{\r\n      diskWrite.data.push(data.write);\r\n      diskRead.data.push(data.read);\r\n    })\r\n    const diskSeries = [ diskWrite, diskRead ];\r\n    const diskIOChart = (\r\n      <GridItem xs={12} sm={6} md={4} key='io-usage'>\r\n        <MultiBarCard\r\n          title={texts.diskIO}\r\n          series={diskSeries}\r\n          displayValue={bpsToString}\r\n          minTickStep={mbBased}\r\n          color='rose'\r\n          />\r\n      </GridItem>\r\n    )\r\n    content = [\r\n      updateTime,\r\n      poolChart,\r\n      cellChart,\r\n      instanceChart,\r\n      storageChart,\r\n      coresChart,\r\n      memoryChart,\r\n      networkChart,\r\n      diskIOChart,\r\n    ];\r\n  }\r\n\r\n  return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <GridContainer>\r\n            <GridItem xs={6} sm={4} md={3}>\r\n              <Link to='/admin/dashboard/pools/'>\r\n                <Button size=\"sm\" color=\"info\" round><AllOutIcon />{texts.allButton}</Button>\r\n              </Link>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        {content}\r\n      </GridContainer>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default function SeriesLabels(props){\r\n  const {title, series, valueName, colorName, labelName, displayValue, baseClass } = props;\r\n  let styles = {};\r\n  if (baseClass){\r\n    styles.title = {\r\n      ...baseClass,\r\n    }\r\n  }else {\r\n    styles.title = {};\r\n  }\r\n\r\n  series.forEach( (slice, index) => {\r\n    const seriesName = 'series-' + index.toString();\r\n    if (baseClass){\r\n      styles[seriesName] = {\r\n        ...baseClass,\r\n        color: slice[colorName],\r\n      };\r\n    }else{\r\n        styles[seriesName] = {\r\n          color: slice[colorName],\r\n        };\r\n    }\r\n\r\n  });\r\n\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  return (\r\n    <Box display='flex'>\r\n      <Box m={1}>\r\n        <Typography component='span' className={classes.title}>\r\n          {title}\r\n        </Typography>\r\n      </Box>\r\n      {\r\n        series.map((slice, index) =>{\r\n          const sliceValue = slice[valueName];\r\n          const sliceLabel = slice[labelName];\r\n          const sliceClassName = 'series-' + index.toString();\r\n          let valueLabel;\r\n          if (displayValue){\r\n            valueLabel = displayValue(sliceValue);\r\n          }else{\r\n            valueLabel = sliceValue.toString();\r\n          }\r\n          return(\r\n            <Box m={1} key={sliceLabel}>\r\n              <Typography component='span' className={classes[sliceClassName]}>\r\n                {sliceLabel}\r\n              </Typography>\r\n              <Typography component='span'>\r\n                {': ' + valueLabel}\r\n              </Typography>\r\n            </Box>\r\n          )\r\n        })\r\n      }\r\n      </Box>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AllOutIcon from '@material-ui/icons/AllOut';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// core components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport LineChart from \"views/Dashboard/LineChart.js\";\r\nimport StackedBarChart from \"views/Dashboard/StackedBarChart.js\";\r\nimport MultiBarChart from \"views/Dashboard/MultiBarChart.js\";\r\nimport SeriesLabels from \"views/Dashboard/SeriesLabels.js\";\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\n\r\nimport { getLoggedSession, redirectToLogin, truncateToRadix } from 'utils.js';\r\nimport { getAllComputePoolStatus } from \"nano_api.js\";\r\n\r\nimport {\r\n  primaryColor,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  grayColor,\r\n  whiteColor,\r\n  roseColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    viewButton: \"View Cell Status\",\r\n    zone: \"Zone Status\",\r\n    title: 'Compute Pool',\r\n    pools: 'All Compute Pools',\r\n    cells: 'Compute Cells',\r\n    instances: 'Instances',\r\n    disks: 'Storage(GB)',\r\n    memory: 'Memory',\r\n    ioUsage: 'IO Usage',\r\n    enabled: 'Enabled',\r\n    disabled: 'Disabled',\r\n    online: 'Online ',\r\n    offline: 'Offline ',\r\n    stopped: 'Stopped ',\r\n    running: 'Running ',\r\n    lost: 'Lost ',\r\n    migrate: 'Migrating ',\r\n    used: 'Used ',\r\n    available: 'Available ',\r\n    coresUsed: 'Cores Used',\r\n    throughput: 'Throughput',\r\n    receive: 'Receive ',\r\n    send: 'Send ',\r\n    write: 'Write ',\r\n    read: 'Read ',\r\n  },\r\n  'cn':{\r\n    viewButton: \"查看节点状态\",\r\n    zone: \"全域状态\",\r\n    title: '计算资源池',\r\n    pools: '所有计算资源池',\r\n    cells: '资源节点',\r\n    instances: '云主机实例',\r\n    disks: '磁盘空间(GB)',\r\n    memory: '内存',\r\n    ioUsage: 'IO吞吐量',\r\n    enabled: '启用',\r\n    disabled: '禁用',\r\n    online: '在线',\r\n    offline: '离线',\r\n    stopped: '停止',\r\n    running: '运行',\r\n    lost: '失联',\r\n    migrate: '迁移中',\r\n    used: '已用',\r\n    available: '可用',\r\n    coresUsed: '核心已占用',\r\n    throughput: '吞吐量',\r\n    receive: '接收',\r\n    send: '发送',\r\n    write: '写入',\r\n    read: '读取',\r\n  }\r\n}\r\n\r\nconst seriesColor1 = infoColor[0];\r\nconst seriesColor2 = successColor[0];\r\nconst seriesColor3 = warningColor[0];\r\nconst seriesColor4 = primaryColor[0];\r\nconst disabledColor = grayColor[2];\r\n\r\nconst shadowChartPanel = {\r\n  borderRadius: \"3px\",\r\n  marginTop: \"-20px\",\r\n  // marginLeft: \"10px\",\r\n  // marginRight: \"10px\",\r\n  padding: \"15px\",\r\n};\r\n\r\nconst styles = {\r\n  ...fontStyles,\r\n  ...dashboardStyles,\r\n  cardWithDivider: {\r\n    borderTop: \"1px solid \" + grayColor[10],\r\n  },\r\n  coresChart: {\r\n    ...shadowChartPanel,\r\n    background: successColor[0],\r\n  },\r\n  memoryChart: {\r\n    ...shadowChartPanel,\r\n    background: infoColor[0],\r\n  },\r\n  networkChart: {\r\n    ...shadowChartPanel,\r\n    background: warningColor[0],\r\n  },\r\n  diskChart: {\r\n    ...shadowChartPanel,\r\n    background: roseColor[0],\r\n  },\r\n}\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst SinglePoolStatus = props => {\r\n  const { lang, status, poolName } = props;\r\n  const classes = useStyles();\r\n  const texts = i18n[lang];\r\n  const title = texts.title + ': ' + poolName;\r\n  const GiB = 1 << 30;\r\n  const MiB = 1 << 20;\r\n  const [ offlineCell, onlineCell ] = status.cells;\r\n  const cellData = [{\r\n    value: offlineCell,\r\n    label: texts.offline,\r\n    color: disabledColor,\r\n  },{\r\n    value: onlineCell,\r\n    label: texts.online,\r\n    color: seriesColor2,\r\n  }];\r\n  const cellsLabel = <SeriesLabels key=\"cells-labels\" title={texts.cells} series={cellData} valueName='value' colorName='color' labelName='label' baseClass={dashboardStyles.cardCategory}/>;\r\n\r\n  const [ stoppedInstance, runningInstance, lostInstance, migrateInstance ] = status.instances;\r\n  const instanceData = [{\r\n    value: stoppedInstance,\r\n    label: texts.stopped,\r\n    color: disabledColor,\r\n  },{\r\n    value: runningInstance,\r\n    label: texts.running,\r\n    color: seriesColor1,\r\n  },{\r\n    value: lostInstance,\r\n    label: texts.lost,\r\n    color: seriesColor3,\r\n  },{\r\n    value: migrateInstance,\r\n    label: texts.migrate,\r\n    color: seriesColor4,\r\n  }];\r\n  const instancesLabel = <SeriesLabels key=\"instances-labels\" title={texts.instances} series={instanceData} valueName='value' colorName='color' labelName='label' baseClass={dashboardStyles.cardCategory}/>;\r\n\r\n  const availableDisk = truncateToRadix(status.available_disk / GiB, 2);\r\n  const usedDisk = truncateToRadix((status.max_disk - status.available_disk) /GiB, 2);\r\n  const storageData = [{\r\n    value: availableDisk,\r\n    label: texts.available,\r\n    color: seriesColor1,\r\n  },{\r\n    value: usedDisk,\r\n    label: texts.used,\r\n    color: seriesColor4,\r\n  }];\r\n  const storageLabel = <SeriesLabels key=\"storage-labels\" title={texts.disks} series={storageData} valueName='value' colorName='color' labelName='label' baseClass={dashboardStyles.cardCategory}/>;\r\n  //core usage\r\n  var usedCores = {\r\n    label: texts.coresUsed,\r\n    color: whiteColor,\r\n    data: [],\r\n  }\r\n\r\n  var maxCores = 0;\r\n  status.coreRecords.forEach( data =>{\r\n    usedCores.data.push(data.current);\r\n    maxCores = Math.max(maxCores, data.max);\r\n  })\r\n\r\n  const coresChart = (\r\n    <GridItem xs={12} sm={6} md={3} key='cores-usage'>\r\n      <Box m={0} p={0} className={classes.coresChart} boxShadow={2}>\r\n        <LineChart\r\n          series={[usedCores]}\r\n          minTickStep={1}\r\n          maxValue={maxCores}\r\n          />\r\n      </Box>\r\n    </GridItem>\r\n  )\r\n  //memory\r\n  var usedMemory = {\r\n    label: texts.used + texts.memory,\r\n    color: grayColor[4],\r\n    data: [],\r\n  };\r\n  var availableMemory = {\r\n    label: texts.available + texts.memory,\r\n    color: successColor[1],\r\n    data: [],\r\n  };\r\n  status.memoryRecords.forEach( data =>{\r\n    usedMemory.data.push(data.used);\r\n    availableMemory.data.push(data.available)\r\n  })\r\n  const memoryChart = (\r\n    <GridItem xs={12} sm={6} md={3} key='memory-usage'>\r\n      <Box m={0} p={0} className={classes.memoryChart} boxShadow={2}>\r\n        <StackedBarChart\r\n          series={[usedMemory, availableMemory]}\r\n          minTickStep={1 << 10}\r\n          displayValue={ mib => {\r\n            const GiB = 1 << 10;\r\n            if (0 === mib){\r\n              return '0';\r\n            }else if (mib >= GiB){\r\n              if (0 === mib % GiB){\r\n                return (mib / GiB).toString() + ' GB';\r\n              }else{\r\n                return (mib / GiB).toFixed(2) + ' GB';\r\n              }\r\n            }else {\r\n              return mib.toString() + ' MB';\r\n            }\r\n          }}\r\n          />\r\n      </Box>\r\n    </GridItem>\r\n  )\r\n  //network\r\n  var networkReceive = {\r\n    label: texts.receive + texts.throughput,\r\n    color: infoColor[3],\r\n    data: [],\r\n  };\r\n  var networkSend = {\r\n    label: texts.send + texts.throughput,\r\n    color: primaryColor[1],\r\n    data: [],\r\n  };\r\n  status.networkRecords.forEach( data =>{\r\n    networkReceive.data.push(truncateToRadix(data.receive/ MiB, 2) );\r\n    networkSend.data.push(truncateToRadix(data.send/ MiB, 2));\r\n  })\r\n  const displaySpeedByMB = speed => {\r\n    const gb = 1 << 10;\r\n    if (speed >= gb){\r\n      if (0 === speed % gb){\r\n        return (speed / gb).toString() + ' GB/s';\r\n      }else{\r\n        return (speed / gb).toFixed(2) + ' GB/s';\r\n      }\r\n    }else{\r\n      if (Number.isInteger(speed)){\r\n        return speed.toString() + ' MB/s';\r\n      }else{\r\n        return speed.toFixed(2) + ' MB/s';\r\n      }\r\n    }\r\n  }\r\n  const networkSeries = [ networkReceive, networkSend ];\r\n  const networkChart = (\r\n    <GridItem xs={12} sm={6} md={3} key='network-usage'>\r\n      <Box m={0} p={0} className={classes.networkChart} boxShadow={2}>\r\n        <MultiBarChart\r\n          series={networkSeries}\r\n          displayValue={displaySpeedByMB}\r\n          minTickStep={1}\r\n          />\r\n      </Box>\r\n    </GridItem>\r\n  )\r\n  //disk IO\r\n  var diskWrite = {\r\n    label: texts.write + texts.throughput,\r\n    color: successColor[1],\r\n    data: [],\r\n  };\r\n  var diskRead = {\r\n    label: texts.read + texts.throughput,\r\n    color: infoColor[3],\r\n    data: [],\r\n  };\r\n  status.diskRecords.forEach( data =>{\r\n    diskWrite.data.push(truncateToRadix(data.write / MiB, 2));\r\n    diskRead.data.push(truncateToRadix(data.read / MiB, 2));\r\n  })\r\n  const diskSeries = [ diskWrite, diskRead ];\r\n  const diskIOChart = (\r\n    <GridItem xs={12} sm={6} md={3} key='io-usage'>\r\n      <Box m={0} p={0} className={classes.diskChart} boxShadow={2}>\r\n        <MultiBarChart\r\n          series={diskSeries}\r\n          displayValue={displaySpeedByMB}\r\n          minTickStep={1}\r\n          />\r\n      </Box>\r\n    </GridItem>\r\n  )\r\n  const content = [\r\n    coresChart,\r\n    memoryChart,\r\n    networkChart,\r\n    diskIOChart,\r\n  ];\r\n  const dataLabels = [\r\n    cellsLabel,\r\n    instancesLabel,\r\n    storageLabel,\r\n  ];\r\n  return (\r\n    <Card chart>\r\n      <CardHeader>\r\n      <GridContainer>\r\n        {content}\r\n      </GridContainer>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Typography component='span' className={classes.cardTitle}>\r\n          {title}\r\n        </Typography>\r\n        {dataLabels}\r\n        <Box m={0} p={2} className={classes.cardWithDivider}>\r\n          <GridContainer>\r\n            <GridItem xs={6} sm={4} md={3}>\r\n              <Link to={'/admin/dashboard/pools/' + poolName}>\r\n                <Button size=\"sm\" color=\"info\" round><AllOutIcon />{texts.viewButton}</Button>\r\n              </Link>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default function PoolStatus(props) {\r\n  const CoreArraySize = 5;\r\n  const MemoryArraySize = 5;\r\n  const NetworkIOArraySize = 5;\r\n  const DiskIOArraySize = 5;\r\n  const [ allStatus, setAllStatus ] = React.useState(null);\r\n  const texts = i18n[props.lang];\r\n\r\n  React.useEffect(() =>{\r\n    var mounted = true\r\n    var statusMap = new Map();\r\n\r\n    const queryPoolsStatus = () =>{\r\n      const MiB = 1 << 20;\r\n      const onOperateSuccess = dataList => {\r\n        dataList.forEach(status =>{\r\n          const poolName = status.name;\r\n          let coreRecords, memoryRecords, networkRecords, diskRecords;\r\n          if(!statusMap.has(poolName)){\r\n            //append & update for exists\r\n            coreRecords = new Array(CoreArraySize - 1).fill({\r\n              current: 0,\r\n              max: 0,\r\n            });\r\n            memoryRecords = new Array(MemoryArraySize - 1).fill({\r\n              available: 0,\r\n              used: 0,\r\n            });\r\n            networkRecords = new Array(NetworkIOArraySize - 1).fill({\r\n              receive: 0,\r\n              send: 0,\r\n            });\r\n            diskRecords = new Array(DiskIOArraySize - 1).fill({\r\n              write: 0,\r\n              read: 0,\r\n            });\r\n          }else{\r\n            //new pool\r\n            const current = statusMap.get(poolName);\r\n            coreRecords = current.coreRecords;\r\n            coreRecords.shift();\r\n            memoryRecords = current.memoryRecords;\r\n            memoryRecords.shift();\r\n            networkRecords = current.networkRecords;\r\n            networkRecords.shift();\r\n            diskRecords = current.diskRecords;\r\n            diskRecords.shift();\r\n          }\r\n          coreRecords.push({\r\n            current: truncateToRadix(status.cpu_usage, 2),\r\n            max: status.max_cpu,\r\n          });\r\n          memoryRecords.push({\r\n            available: truncateToRadix(status.available_memory/MiB, 2),\r\n            used: truncateToRadix((status.max_memory - status.available_memory)/MiB, 2),\r\n          });\r\n          networkRecords.push({\r\n            receive: status.receive_speed,\r\n            send: status.send_speed,\r\n            // receive: 100 * MiB * Math.random(),\r\n            // send: 100 * MiB * Math.random(),\r\n          });\r\n          diskRecords.push({\r\n            write: status.write_speed,\r\n            read: status.read_speed,\r\n            // write: 10 * MiB * Math.random(),\r\n            // read: 10 * MiB * Math.random(),\r\n          });\r\n\r\n          const updated = {\r\n            ...status,\r\n            coreRecords: coreRecords,\r\n            memoryRecords: memoryRecords,\r\n            networkRecords: networkRecords,\r\n            diskRecords: diskRecords,\r\n          };\r\n          statusMap.set(poolName, updated);\r\n        });\r\n        var newStatus = new Map();\r\n        statusMap.forEach((value, key) =>{\r\n          newStatus.set(key, value);\r\n        })\r\n        setAllStatus(newStatus);\r\n      }\r\n      getAllComputePoolStatus(onOperateSuccess);\r\n    }\r\n\r\n    queryPoolsStatus();\r\n    const updateInterval = 2 * 1000;\r\n    var timerID = setInterval(()=>{\r\n      if (mounted){\r\n        queryPoolsStatus();\r\n      }\r\n    }, updateInterval);\r\n    return () =>{\r\n      mounted = false;\r\n      clearInterval(timerID);\r\n    }\r\n  }, []);\r\n\r\n  //reder begin\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    return redirectToLogin();\r\n  }\r\n\r\n  let content;\r\n  if (!allStatus){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    var nameList = [];\r\n    allStatus.forEach( (value, key) =>{\r\n      nameList.push(key);\r\n    });\r\n    nameList.sort();\r\n    content = [];\r\n    nameList.forEach(poolName =>{\r\n      var status = allStatus.get(poolName);\r\n      content.push(\r\n        <GridItem xs={12} key={poolName}>\r\n          <SinglePoolStatus status={status} lang={props.lang} poolName={poolName}/>\r\n        </GridItem>\r\n      );\r\n    });\r\n\r\n  }\r\n\r\n  const breadcrumbs = [\r\n    <Link to='/admin/dashboard/' key={texts.zone}>{texts.zone}</Link>,\r\n    <Typography color=\"textPrimary\" key={texts.pools}>{texts.pools}</Typography>,\r\n  ];\r\n\r\n  return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n        <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n          {breadcrumbs}\r\n        </Breadcrumbs>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        {content}\r\n      </GridContainer>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Box from '@material-ui/core/Box';\r\nimport WifiIcon from '@material-ui/icons/Wifi';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport WifiOffIcon from '@material-ui/icons/WifiOff';\r\nimport AllOutIcon from '@material-ui/icons/AllOut';\r\n\r\n// core components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport LineChart from \"views/Dashboard/LineChart.js\";\r\nimport StackedBarChart from \"views/Dashboard/StackedBarChart.js\";\r\nimport MultiBarChart from \"views/Dashboard/MultiBarChart.js\";\r\nimport SeriesLabels from \"views/Dashboard/SeriesLabels.js\";\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\n\r\nimport { getLoggedSession, redirectToLogin, truncateToRadix } from 'utils.js';\r\nimport { queryComputeCellStatus } from \"nano_api.js\";\r\n\r\nimport {\r\n  primaryColor,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  grayColor,\r\n  whiteColor,\r\n  roseColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    viewButton: \"View Instances\",\r\n    zone: \"Zone Status\",\r\n    title: 'Compute Cell',\r\n    pools: 'All Compute Pools',\r\n    cells: 'Compute Cells',\r\n    instances: 'Instances',\r\n    disks: 'Storage(GB)',\r\n    memory: 'Memory',\r\n    ioUsage: 'IO Usage',\r\n    enabled: 'Enabled',\r\n    disabled: 'Disabled',\r\n    online: 'Online',\r\n    offline: 'Offline',\r\n    stopped: 'Stopped ',\r\n    running: 'Running ',\r\n    lost: 'Lost ',\r\n    migrate: 'Migrating ',\r\n    used: 'Used ',\r\n    available: 'Available ',\r\n    coresUsed: 'Cores Used',\r\n    throughput: 'Throughput',\r\n    receive: 'Receive ',\r\n    send: 'Send ',\r\n    write: 'Write ',\r\n    read: 'Read ',\r\n  },\r\n  'cn':{\r\n    viewButton: \"查看承载云主机\",\r\n    zone: \"全域状态\",\r\n    title: '计算资源节点',\r\n    pools: '所有计算资源池',\r\n    cells: '资源节点',\r\n    instances: '云主机实例',\r\n    disks: '磁盘空间(GB)',\r\n    memory: '内存',\r\n    ioUsage: 'IO吞吐量',\r\n    enabled: '启用',\r\n    disabled: '禁用',\r\n    online: '在线',\r\n    offline: '离线',\r\n    stopped: '停止',\r\n    running: '运行',\r\n    lost: '失联',\r\n    migrate: '迁移中',\r\n    used: '已用',\r\n    available: '可用',\r\n    coresUsed: '核心已占用',\r\n    throughput: '吞吐量',\r\n    receive: '接收',\r\n    send: '发送',\r\n    write: '写入',\r\n    read: '读取',\r\n  }\r\n}\r\n\r\nconst seriesColor1 = infoColor[0];\r\n// const seriesColor2 = successColor[0];\r\nconst seriesColor3 = warningColor[0];\r\nconst seriesColor4 = primaryColor[0];\r\nconst disabledColor = grayColor[2];\r\n\r\nconst shadowChartPanel = {\r\n  borderRadius: \"3px\",\r\n  marginTop: \"-20px\",\r\n  // marginLeft: \"10px\",\r\n  // marginRight: \"10px\",\r\n  padding: \"15px\",\r\n};\r\n\r\nconst styles = {\r\n  ...dashboardStyles,\r\n  ...fontStyles,\r\n  cardWithDivider: {\r\n    borderTop: \"1px solid \" + grayColor[10],\r\n  },\r\n  coresChart: {\r\n    ...shadowChartPanel,\r\n    background: successColor[0],\r\n  },\r\n  memoryChart: {\r\n    ...shadowChartPanel,\r\n    background: infoColor[0],\r\n  },\r\n  networkChart: {\r\n    ...shadowChartPanel,\r\n    background: warningColor[0],\r\n  },\r\n  diskChart: {\r\n    ...shadowChartPanel,\r\n    background: roseColor[0],\r\n  },\r\n  disableChart: {\r\n    ...shadowChartPanel,\r\n    background: grayColor[5],\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst SingleCellStatus = props => {\r\n  const { lang, status, cellName, poolName } = props;\r\n  const classes = useStyles();\r\n  const texts = i18n[lang];\r\n  let title;\r\n  if (!status.alive){\r\n    title = (\r\n      <Typography component='span' className={classes.cardTitle}>\r\n        <WifiOffIcon className={classes.mutedText}/>\r\n        {texts.title + ': ' + cellName + ' ( ' + texts.offline + ' )'}\r\n      </Typography>\r\n    )\r\n  }else if (!status.enabled){\r\n    //disabled\r\n    title = (\r\n      <Typography component='span' className={classes.cardTitle}>\r\n        <BlockIcon className={classes.mutedText}/>\r\n        {texts.title + ': ' + cellName + ' ( ' + texts.disabled + ' )'}\r\n      </Typography>\r\n    );\r\n  }else{\r\n    //online\r\n    title = (\r\n      <Typography component='span' className={classes.cardTitle}>\r\n        <WifiIcon className={classes.successText}/>\r\n        {texts.title + ': ' + cellName + ' ( ' + texts.online + ' )'}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  let content, dataLabels, operators;\r\n  if (!status.alive){\r\n    content = [\"core-usage\", \"memory-usage\", \"disk-io\", \"network-io\"].map(label=>(\r\n      <GridItem xs={12} sm={6} md={3} key={label}>\r\n        <Box m={0} p={0} className={classes.disableChart} boxShadow={2}/>\r\n      </GridItem>\r\n    ));\r\n    dataLabels = [];\r\n    operators = [];\r\n  }else{\r\n    operators = [\r\n      (\r\n        <GridItem xs={6} sm={4} md={3} key='view'>\r\n          <Link to={'/admin/instances/?pool=' + poolName + '&cell=' + cellName}>\r\n            <Button size=\"sm\" color=\"info\" round><AllOutIcon />{texts.viewButton}</Button>\r\n          </Link>\r\n        </GridItem>\r\n      ),\r\n    ];\r\n    const GiB = 1 << 30;\r\n    const MiB = 1 << 20;\r\n\r\n    const [ stoppedInstance, runningInstance, lostInstance, migrateInstance ] = status.instances;\r\n    const instanceData = [{\r\n      value: stoppedInstance,\r\n      label: texts.stopped,\r\n      color: disabledColor,\r\n    },{\r\n      value: runningInstance,\r\n      label: texts.running,\r\n      color: seriesColor1,\r\n    },{\r\n      value: lostInstance,\r\n      label: texts.lost,\r\n      color: seriesColor3,\r\n    },{\r\n      value: migrateInstance,\r\n      label: texts.migrate,\r\n      color: seriesColor4,\r\n    }];\r\n    const instancesLabel = <SeriesLabels key=\"instances-labels\" title={texts.instances} series={instanceData} valueName='value' colorName='color' labelName='label' baseClass={dashboardStyles.cardCategory}/>;\r\n\r\n    const availableDisk = truncateToRadix(status.available_disk / GiB, 2);\r\n    const usedDisk = truncateToRadix((status.max_disk - status.available_disk) /GiB, 2);\r\n    const storageData = [{\r\n      value: availableDisk,\r\n      label: texts.available,\r\n      color: seriesColor1,\r\n    },{\r\n      value: usedDisk,\r\n      label: texts.used,\r\n      color: seriesColor4,\r\n    }];\r\n    const storageLabel = <SeriesLabels key=\"storage-labels\" title={texts.disks} series={storageData} valueName='value' colorName='color' labelName='label' baseClass={dashboardStyles.cardCategory}/>;\r\n    //core usage\r\n    var usedCores = {\r\n      label: texts.coresUsed,\r\n      color: whiteColor,\r\n      data: [],\r\n    }\r\n\r\n    var maxCores = 0;\r\n    status.coreRecords.forEach( data =>{\r\n      usedCores.data.push(data.current);\r\n      maxCores = Math.max(maxCores, data.max);\r\n    })\r\n\r\n    const coresChart = (\r\n      <GridItem xs={12} sm={6} md={3} key='cores-usage'>\r\n        <Box m={0} p={0} className={classes.coresChart} boxShadow={2}>\r\n          <LineChart\r\n            series={[usedCores]}\r\n            minTickStep={1}\r\n            maxValue={maxCores}\r\n            />\r\n        </Box>\r\n      </GridItem>\r\n    )\r\n    //memory\r\n    var usedMemory = {\r\n      label: texts.used + texts.memory,\r\n      color: grayColor[4],\r\n      data: [],\r\n    };\r\n    var availableMemory = {\r\n      label: texts.available + texts.memory,\r\n      color: successColor[1],\r\n      data: [],\r\n    };\r\n    status.memoryRecords.forEach( data =>{\r\n      usedMemory.data.push(data.used);\r\n      availableMemory.data.push(data.available)\r\n    })\r\n    const memoryChart = (\r\n      <GridItem xs={12} sm={6} md={3} key='memory-usage'>\r\n        <Box m={0} p={0} className={classes.memoryChart} boxShadow={2}>\r\n          <StackedBarChart\r\n            series={[usedMemory, availableMemory]}\r\n            minTickStep={1 << 10}\r\n            displayValue={ mib => {\r\n              const GiB = 1 << 10;\r\n              if (0 === mib){\r\n                return '0';\r\n              }else if (mib >= GiB){\r\n                if (0 === mib % GiB){\r\n                  return (mib / GiB).toString() + ' GB';\r\n                }else{\r\n                  return (mib / GiB).toFixed(2) + ' GB';\r\n                }\r\n              }else {\r\n                return mib.toString() + ' MB';\r\n              }\r\n            }}\r\n            />\r\n        </Box>\r\n      </GridItem>\r\n    )\r\n    //network\r\n    var networkReceive = {\r\n      label: texts.receive + texts.throughput,\r\n      color: infoColor[3],\r\n      data: [],\r\n    };\r\n    var networkSend = {\r\n      label: texts.send + texts.throughput,\r\n      color: primaryColor[1],\r\n      data: [],\r\n    };\r\n    status.networkRecords.forEach( data =>{\r\n      networkReceive.data.push(truncateToRadix(data.receive/ MiB, 2) );\r\n      networkSend.data.push(truncateToRadix(data.send/ MiB, 2));\r\n    })\r\n    const displaySpeedByMB = speed => {\r\n      const gb = 1 << 10;\r\n      if (speed >= gb){\r\n        if (0 === speed % gb){\r\n          return (speed / gb).toString() + ' GB/s';\r\n        }else{\r\n          return (speed / gb).toFixed(2) + ' GB/s';\r\n        }\r\n      }else{\r\n        if (Number.isInteger(speed)){\r\n          return speed.toString() + ' MB/s';\r\n        }else{\r\n          return speed.toFixed(2) + ' MB/s';\r\n        }\r\n      }\r\n    }\r\n    const networkSeries = [ networkReceive, networkSend ];\r\n    const networkChart = (\r\n      <GridItem xs={12} sm={6} md={3} key='network-usage'>\r\n        <Box m={0} p={0} className={classes.networkChart} boxShadow={2}>\r\n          <MultiBarChart\r\n            series={networkSeries}\r\n            displayValue={displaySpeedByMB}\r\n            minTickStep={1}\r\n            />\r\n        </Box>\r\n      </GridItem>\r\n    )\r\n    //disk IO\r\n    var diskWrite = {\r\n      label: texts.write + texts.throughput,\r\n      color: successColor[1],\r\n      data: [],\r\n    };\r\n    var diskRead = {\r\n      label: texts.read + texts.throughput,\r\n      color: infoColor[3],\r\n      data: [],\r\n    };\r\n    status.diskRecords.forEach( data =>{\r\n      diskWrite.data.push(truncateToRadix(data.write / MiB, 2));\r\n      diskRead.data.push(truncateToRadix(data.read / MiB, 2));\r\n    })\r\n    const diskSeries = [ diskWrite, diskRead ];\r\n    const diskIOChart = (\r\n      <GridItem xs={12} sm={6} md={3} key='io-usage'>\r\n        <Box m={0} p={0} className={classes.diskChart} boxShadow={2}>\r\n          <MultiBarChart\r\n            series={diskSeries}\r\n            displayValue={displaySpeedByMB}\r\n            minTickStep={1}\r\n            />\r\n        </Box>\r\n      </GridItem>\r\n    )\r\n    content = [\r\n      coresChart,\r\n      memoryChart,\r\n      networkChart,\r\n      diskIOChart,\r\n    ];\r\n    dataLabels = [\r\n      instancesLabel,\r\n      storageLabel,\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <Card chart>\r\n      <CardHeader>\r\n        <GridContainer>\r\n          {content}\r\n        </GridContainer>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {title}\r\n        {dataLabels}\r\n        <Box m={0} p={2} className={classes.cardWithDivider}>\r\n          <GridContainer>\r\n            {operators}\r\n          </GridContainer>\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default function CellStatus(props) {\r\n  const CoreArraySize = 5;\r\n  const MemoryArraySize = 5;\r\n  const NetworkIOArraySize = 5;\r\n  const DiskIOArraySize = 5;\r\n  const poolName = props.match.params.pool;\r\n  const [ allStatus, setAllStatus ] = React.useState(null);\r\n\r\n  const texts = i18n[props.lang];\r\n\r\n  React.useEffect(() =>{\r\n    var mounted = true\r\n    var statusMap = new Map();\r\n\r\n    const queryCellsStatus = () =>{\r\n      const MiB = 1 << 20;\r\n      const onOperateSuccess = dataList => {\r\n        dataList.forEach(status =>{\r\n          const cellName = status.name;\r\n          let coreRecords, memoryRecords, networkRecords, diskRecords;\r\n          if(!statusMap.has(cellName)){\r\n            //append & update for exists\r\n            coreRecords = new Array(CoreArraySize - 1).fill({\r\n              current: 0,\r\n              max: 0,\r\n            });\r\n            memoryRecords = new Array(MemoryArraySize - 1).fill({\r\n              available: 0,\r\n              used: 0,\r\n            });\r\n            networkRecords = new Array(NetworkIOArraySize - 1).fill({\r\n              receive: 0,\r\n              send: 0,\r\n            });\r\n            diskRecords = new Array(DiskIOArraySize - 1).fill({\r\n              write: 0,\r\n              read: 0,\r\n            });\r\n          }else{\r\n            //new pool\r\n            const current = statusMap.get(cellName);\r\n            coreRecords = current.coreRecords;\r\n            coreRecords.shift();\r\n            memoryRecords = current.memoryRecords;\r\n            memoryRecords.shift();\r\n            networkRecords = current.networkRecords;\r\n            networkRecords.shift();\r\n            diskRecords = current.diskRecords;\r\n            diskRecords.shift();\r\n          }\r\n          coreRecords.push({\r\n            current: truncateToRadix(status.cpu_usage, 2),\r\n            max: status.max_cpu,\r\n          });\r\n          memoryRecords.push({\r\n            available: truncateToRadix(status.available_memory/MiB, 2),\r\n            used: truncateToRadix((status.max_memory - status.available_memory)/MiB, 2),\r\n          });\r\n          networkRecords.push({\r\n            receive: status.receive_speed,\r\n            send: status.send_speed,\r\n            // receive: 100 * MiB * Math.random(),\r\n            // send: 100 * MiB * Math.random(),\r\n          });\r\n          diskRecords.push({\r\n            write: status.write_speed,\r\n            read: status.read_speed,\r\n            // write: 10 * MiB * Math.random(),\r\n            // read: 10 * MiB * Math.random(),\r\n          });\r\n\r\n          const updated = {\r\n            ...status,\r\n            coreRecords: coreRecords,\r\n            memoryRecords: memoryRecords,\r\n            networkRecords: networkRecords,\r\n            diskRecords: diskRecords,\r\n          };\r\n          statusMap.set(cellName, updated);\r\n        });\r\n        var newStatus = new Map();\r\n        statusMap.forEach((value, key) =>{\r\n          newStatus.set(key, value);\r\n        })\r\n        setAllStatus(newStatus);\r\n      }\r\n      queryComputeCellStatus(poolName, onOperateSuccess);\r\n    }\r\n\r\n    queryCellsStatus();\r\n    const updateInterval = 2 * 1000;\r\n    var timerID = setInterval(()=>{\r\n      if (mounted){\r\n        queryCellsStatus();\r\n      }\r\n    }, updateInterval);\r\n    return () =>{\r\n      mounted = false;\r\n      clearInterval(timerID);\r\n    }\r\n  }, [poolName]);\r\n\r\n  //reder begin\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    return redirectToLogin();\r\n  }\r\n\r\n  let content;\r\n  if (!allStatus){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    var nameList = [];\r\n    allStatus.forEach( (value, key) =>{\r\n      nameList.push(key);\r\n    });\r\n    nameList.sort();\r\n    content = [];\r\n    nameList.forEach(cellName =>{\r\n      var status = allStatus.get(cellName);\r\n      content.push(\r\n        <GridItem xs={12} key={cellName}>\r\n          <SingleCellStatus status={status} lang={props.lang} cellName={cellName} poolName={poolName}/>\r\n        </GridItem>\r\n      );\r\n    });\r\n\r\n  }\r\n\r\n  const breadcrumbs = [\r\n    <Link to='/admin/dashboard/' key={texts.zone}>{texts.zone}</Link>,\r\n    <Link to='/admin/dashboard/pools/' key={texts.pools}>{texts.pools}</Link>,\r\n    <Typography color=\"textPrimary\" key={poolName}>{poolName}</Typography>,\r\n  ];\r\n\r\n  return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n            {breadcrumbs}\r\n          </Breadcrumbs>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        {content}\r\n      </GridContainer>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { deleteComputePool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Pool',\r\n    content: 'Are you sure to delete compute pool ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除资源池',\r\n    content: '是否删除计算资源池 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst DeleteDialog = (props) =>{\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const content = texts.content + pool;\r\n  const onDeleteFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = poolName =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    deleteComputePool(pool, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n\r\nexport default DeleteDialog;\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { getAllStoragePools, getAllNetworkPools, createComputePool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create Pool',\r\n    localStorage: 'Use local storage',\r\n    noAddressPool: \"Don't use address pool\",\r\n    name: 'Pool Name',\r\n    storage: 'Backend Storage',\r\n    network: 'Address Pool',\r\n    failover: 'Failover',\r\n    off: 'Off',\r\n    on: 'On',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建资源池',\r\n    localStorage: '使用本地存储',\r\n    noAddressPool: \"不使用地址池\",\r\n    name: '资源池名称',\r\n    storage: '后端存储',\r\n    network: '地址池',\r\n    failover: '故障切换',\r\n    off: '关闭',\r\n    on: '开启',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst CreateDialog = (props) =>{\r\n  const defaultOption = '__default';\r\n  const defaultValues = {\r\n    name: '',\r\n    storage: defaultOption,\r\n    network: defaultOption,\r\n    failover: false,\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    storage: [],\r\n    network: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onCreateFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = poolName =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    const poolName = request.name;\r\n    if ('' === poolName){\r\n      onCreateFail('must specify pool name');\r\n      return;\r\n    }\r\n    let storage, address;\r\n    if (defaultOption === request.storage){\r\n      storage = '';\r\n    }else{\r\n      storage = request.storage;\r\n    }\r\n    if (defaultOption === request.network){\r\n      address = '';\r\n    }else{\r\n      address = request.network;\r\n    }\r\n    createComputePool(poolName, storage, address, request.failover, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleRequestSwitchChanged = name => e =>{\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n    var storageList = [{\r\n      label: texts.localStorage,\r\n      value: defaultOption,\r\n    }];\r\n    var addressList = [{\r\n      label: texts.noAddressPool,\r\n      value: defaultOption,\r\n    }];\r\n\r\n    const onQueryNetworkSuccess = (dataList) =>{\r\n      dataList.forEach((address)=>{\r\n        var item = {\r\n          label: address.name + ' (' + address.allocated + '/' + address.addresses + ' allocated via gateway ' + address.gateway + ')',\r\n          value: address.name,\r\n        }\r\n        addressList.push(item);\r\n      })\r\n      setOptions({\r\n        storage: storageList,\r\n        network: addressList,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n    const onQueryStorageSuccess = (dataList) =>{\r\n        dataList.forEach((storage)=>{\r\n          var item = {\r\n            label: storage.name + ' (' + storage.type + ':' + storage.host + ')',\r\n            value: storage.name,\r\n          }\r\n          storageList.push(item);\r\n        })\r\n        getAllNetworkPools(onQueryNetworkSuccess, onCreateFail);\r\n    };\r\n\r\n    getAllStoragePools(onQueryStorageSuccess, onCreateFail);\r\n\r\n  }, [initialed, open, texts.localStorage, texts.noAddressPool]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        onChange: handleRequestPropsChanged('name'),\r\n        value: request.name,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 6,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.storage,\r\n        onChange: handleRequestPropsChanged('storage'),\r\n        value: request.storage,\r\n        options: options.storage,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.network,\r\n        onChange: handleRequestPropsChanged('network'),\r\n        value: request.network,\r\n        options: options.network,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n      },\r\n      {\r\n        type: \"switch\",\r\n        label: texts.failover,\r\n        onChange: handleRequestSwitchChanged('failover'),\r\n        value: request.failover,\r\n        on: texts.on,\r\n        off: texts.off,\r\n        oneRow: true,\r\n        xs: 6,\r\n      },\r\n    ];\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n\r\nexport default CreateDialog;\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { getAllStoragePools, getAllNetworkPools, modifyComputePool, getComputePool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Pool',\r\n    localStorage: 'Use local storage',\r\n    noAddressPool: \"Don't use address pool\",\r\n    storage: 'Backend Storage',\r\n    network: 'Address Pool',\r\n    failover: 'Failover',\r\n    off: 'Off',\r\n    on: 'On',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改资源池',\r\n    localStorage: '使用本地存储',\r\n    noAddressPool: \"不使用地址池\",\r\n    storage: '后端存储',\r\n    network: '地址池',\r\n    failover: '故障切换',\r\n    off: '关闭',\r\n    on: '开启',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst ModifyDialog = (props) =>{\r\n  const defaultOption = '__default';\r\n  const defaultValues = {\r\n    storage: defaultOption,\r\n    network: defaultOption,\r\n    failover: false,\r\n  };\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    storage: [],\r\n    network: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title + ' ' + pool;\r\n\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = poolName =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    let storage, address;\r\n    if (defaultOption === request.storage){\r\n      storage = '';\r\n    }else{\r\n      storage = request.storage;\r\n    }\r\n    if (defaultOption === request.network){\r\n      address = '';\r\n    }else{\r\n      address = request.network;\r\n    }\r\n    modifyComputePool(pool, storage, address, request.failover, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleRequestSwitchChanged = name => e =>{\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!pool || !open ){\r\n      return;\r\n    }\r\n\r\n    setMounted(true);\r\n    var storageList = [{\r\n      label: texts.localStorage,\r\n      value: defaultOption,\r\n    }];\r\n    var addressList = [{\r\n      label: texts.noAddressPool,\r\n      value: defaultOption,\r\n    }];\r\n\r\n    const onGetCurrentConfigueSuccess = (config) =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setOptions({\r\n        storage: storageList,\r\n        network: addressList,\r\n      });\r\n      setRequest({\r\n        storage: config.storage ? config.storage : defaultOption,\r\n        network: config.network ? config.network : defaultOption,\r\n        failover: config.failover,\r\n      });\r\n      setInitialed(true);\r\n    }\r\n\r\n    const onQueryNetworkSuccess = (dataList) =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      dataList.forEach((address)=>{\r\n        var item = {\r\n          label: address.name + ' (' + address.allocated + '/' + address.addresses + ' allocated via gateway ' + address.gateway + ')',\r\n          value: address.name,\r\n        }\r\n        addressList.push(item);\r\n      })\r\n      getComputePool(pool, onGetCurrentConfigueSuccess, onModifyFail)\r\n    };\r\n    const onQueryStorageSuccess = (dataList) =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      dataList.forEach((storage)=>{\r\n        var item = {\r\n          label: storage.name + ' (' + storage.type + ':' + storage.host + ')',\r\n          value: storage.name,\r\n        }\r\n        storageList.push(item);\r\n      })\r\n      getAllNetworkPools(onQueryNetworkSuccess, onModifyFail);\r\n    };\r\n    getAllStoragePools(onQueryStorageSuccess, onModifyFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, pool, texts.localStorage, texts.noAddressPool, onModifyFail]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"select\",\r\n        label: texts.storage,\r\n        onChange: handleRequestPropsChanged('storage'),\r\n        value: request.storage,\r\n        options: options.storage,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.network,\r\n        onChange: handleRequestPropsChanged('network'),\r\n        value: request.network,\r\n        options: options.network,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n      },\r\n      {\r\n        type: \"switch\",\r\n        label: texts.failover,\r\n        onChange: handleRequestSwitchChanged('failover'),\r\n        value: request.failover,\r\n        on: texts.on,\r\n        off: texts.off,\r\n        oneRow: true,\r\n        xs: 6,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n\r\nexport default ModifyDialog;\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport ViewQuiltIcon from '@material-ui/icons/ViewQuilt';\r\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Table from \"components/Table/ObjectTable.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport DeleteDialog from \"views/ComputePools/DeleteDialog.js\";\r\nimport CreateDialog from \"views/ComputePools/CreateDialog.js\";\r\nimport ModifyDialog from \"views/ComputePools/ModifyDialog.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\nimport { getAllComputePools, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  ...fontStyles,\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create Compute Pool\",\r\n    tableTitle: \"Compute Pools\",\r\n    name: \"Name\",\r\n    cells: \"Cells\",\r\n    storage: 'Backend Storage',\r\n    network: 'Address Pool',\r\n    failover: \"FailOver\",\r\n    status: \"Status\",\r\n    operates: \"Operates\",\r\n    noPools: \"No compute pool available\",\r\n    computePools: \"Compute Pools\",\r\n    enable: 'Enable',\r\n    disable: 'Disable',\r\n    enabled: 'Enabled',\r\n    disabled: 'Disabled',\r\n    instances: 'Instances',\r\n    modify: 'Modify',\r\n    delete: 'Delete',\r\n    on: 'on',\r\n    off: 'off',\r\n    localStorage: 'Use local storage',\r\n    noAddressPool: \"Don't use address pool\",\r\n  },\r\n  'cn':{\r\n    createButton: \"创建资源池\",\r\n    tableTitle: \"计算资源池\",\r\n    name: \"名称\",\r\n    cells: \"资源节点\",\r\n    storage: '后端存储',\r\n    network: '地址池',\r\n    failover: \"故障切换\",\r\n    status: \"状态\",\r\n    operates: \"操作\",\r\n    noPools: \"没有计算资源池\",\r\n    computePools: \"计算资源池\",\r\n    enable: '启用',\r\n    disable: '禁用',\r\n    enabled: '已启用',\r\n    disabled: '已禁用',\r\n    instances: '云主机实例',\r\n    modify: '修改',\r\n    delete: '删除',\r\n    on: '开启',\r\n    off: '关闭',\r\n    localStorage: '使用本地存储',\r\n    noAddressPool: \"不使用地址池\",\r\n  }\r\n}\r\n\r\nexport default function ComputePools(props){\r\n    const classes = useStyles();\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ dataList, setDataList ] = React.useState(null);\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ selected, setSelected ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback(msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const reloadAllData = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const onLoadFail = (err) =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        showErrorMessage(err);\r\n      }\r\n      getAllComputePools(setDataList, onLoadFail);\r\n    }, [showErrorMessage, mounted]);\r\n\r\n    const showNotifyMessage = msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //modify\r\n    const showModifyDialog = (poolName) =>{\r\n      setModifyDialogVisible(true);\r\n      setSelected(poolName);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = poolName =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('pool ' + poolName + ' modified');\r\n      reloadAllData();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = poolName =>{\r\n      setDeleteDialogVisible(true);\r\n      setSelected(poolName);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (poolName) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('pool ' + poolName + ' deleted');\r\n      reloadAllData();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = (poolName) =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('pool ' + poolName + ' created');\r\n      reloadAllData();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadAllData();\r\n      return () =>{\r\n        setMounted(false);\r\n      }\r\n    }, [reloadAllData]);\r\n\r\n    //begin rendering\r\n    let content;\r\n    if (null === dataList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === dataList.length){\r\n      content = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noPools}</Info></Box>;\r\n    }else{\r\n      var rows = [];\r\n      dataList.forEach( pool => {\r\n        var buttons = [\r\n          {\r\n            label: texts.cells,\r\n            icon: ViewQuiltIcon,\r\n            href: '/admin/compute_cells/?pool=' + pool.name,\r\n          },\r\n          {\r\n            label: texts.instances,\r\n            icon: CloudQueueIcon,\r\n            href: '/admin/instances/range/?pool=' + pool.name,\r\n          },\r\n          {\r\n            onClick: e => showModifyDialog(pool.name),\r\n            icon: SettingsIcon,\r\n            label: texts.modify,\r\n          },\r\n          {\r\n            onClick: e => showDeleteDialog(pool.name),\r\n            icon: DeleteIcon,\r\n            label: texts.delete,\r\n          },\r\n        ];\r\n\r\n        const { name, cells, network, storage, enabled, failover } = pool;\r\n        let statusLabel, statusIcon, failoverLabel;\r\n        if (enabled){\r\n          statusLabel = texts.enabled;\r\n          statusIcon = (\r\n            <Tooltip\r\n              title={statusLabel}\r\n              placement=\"top\"\r\n              >\r\n              <CheckIcon className={classes.successText}/>\r\n            </Tooltip>\r\n          );\r\n          const disableButton = {\r\n            label: texts.disable,\r\n            icon: BlockIcon,\r\n          };\r\n          buttons = [disableButton].concat(buttons);\r\n        }else{\r\n          statusLabel = texts.disabled;\r\n          statusIcon = (\r\n            <Tooltip\r\n              title={statusLabel}\r\n              placement=\"top\"\r\n              >\r\n              <BlockIcon className={classes.warningText}/>\r\n            </Tooltip>\r\n          );\r\n          const enableButton = {\r\n            label: texts.enable,\r\n            icon: CheckIcon,\r\n          };\r\n          buttons = [enableButton].concat(buttons);\r\n        }\r\n\r\n        if (failover){\r\n          failoverLabel = texts.on;\r\n        }else{\r\n          failoverLabel = texts.off;\r\n        }\r\n\r\n        const operates = buttons.map((button, key) => (\r\n          React.createElement(IconButton, {\r\n            ...button,\r\n            key: key,\r\n          })\r\n        ))\r\n        var row = [name, cells, network? network: texts.noAddressPool,\r\n          storage? storage: texts.localStorage, failoverLabel, statusIcon, operates];\r\n        rows.push(row);\r\n      });\r\n      content = (\r\n        <Table\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.cells, texts.network, texts.storage, texts.failover, texts.status, texts.operates]}\r\n          rows={rows}/>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n            <Typography color=\"textPrimary\">{texts.computePools}</Typography>\r\n          </Breadcrumbs>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={3} sm={3} md={3}>\r\n              <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><AddIcon />{texts.createButton}</Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDialog\r\n            lang={lang}\r\n            open={modifyDialogVisible}\r\n            pool={selected}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            open={deleteDialogVisible}\r\n            pool={selected}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { deleteNetworkPool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Address Pool',\r\n    content: 'Are you sure to delete address pool ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除地址资源池',\r\n    content: '是否删除地址资源池 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteDialog(props){\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onDeleteFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = poolName =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleDelete = () =>{\r\n    setOperatable(false);\r\n    deleteNetworkPool(pool, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const content = texts.content + pool;\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleDelete,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { createNetworkPool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create Network Pool',\r\n    name: \"Name\",\r\n    provider: 'Provider',\r\n    interface: 'Interface Mode',\r\n    internal: 'Internal',\r\n    external: 'External',\r\n    both: 'Both',\r\n    gateway: \"Gateway\",\r\n    dns1: \"DNS1\",\r\n    dns2: \"DNS2\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建地址资源池',\r\n    name: \"名称\",\r\n    provider: '分配模式',\r\n    interface: '接口类型',\r\n    internal: '内部',\r\n    external: '外部',\r\n    both: '内外部',\r\n    gateway: \"网关地址\",\r\n    dns1: \"主DNS\",\r\n    dns2: \"副DNS\",\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function CreateDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    gateway: '',\r\n    provider: 'dhcp',\r\n    mode: 'internal',\r\n    dns1: '',\r\n    dns2: '',\r\n  };\r\n  const providerOptions = [\r\n    {\r\n      label: 'DHCP',\r\n      value: 'dhcp',\r\n    },\r\n    {\r\n      label: 'Cloud-Init',\r\n      value: 'cloudinit',\r\n    },\r\n  ];\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const modeOptions = [\r\n    {\r\n      label: texts.internal,\r\n      value: 'internal',\r\n    },\r\n    {\r\n      label: texts.external,\r\n      value: 'external',\r\n    },\r\n    {\r\n      label: texts.both,\r\n      value: 'both',\r\n    },\r\n  ];\r\n  const onCreateFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = poolName =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleCreate = () =>{\r\n    setOperatable(false);\r\n    const ipv4Pattern = new RegExp('^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$');\r\n\r\n    if(!request.name){\r\n      onCreateFail('must specify pool name');\r\n      return;\r\n    }\r\n    if(!request.gateway){\r\n      onCreateFail('must specify gateway');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.gateway)){\r\n      onCreateFail('invalid gateway format');\r\n      return;\r\n    }\r\n\r\n    if(!request.dns1){\r\n      onCreateFail('must specify primary DNS');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.dns1)){\r\n      onCreateFail('invalid primary DNS format');\r\n      return;\r\n    }\r\n\r\n    var dnsList = [request.dns1];\r\n    if(request.dns2){\r\n      if (!ipv4Pattern.test(request.dns2)){\r\n        onCreateFail('invalid secondary DNS format');\r\n        return;\r\n      }\r\n      dnsList.push(request.dns2);\r\n    }\r\n\r\n    createNetworkPool(request.name, request.gateway, request.provider, dnsList, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const inputs = [\r\n    {\r\n      type: \"text\",\r\n      label: texts.name,\r\n      onChange: handleRequestPropsChanged('name'),\r\n      value: request.name,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n    {\r\n      type: \"radio\",\r\n      label: texts.provider,\r\n      onChange: handleRequestPropsChanged('provider'),\r\n      value: request.provider,\r\n      oneRow: true,\r\n      disabled: true,\r\n      options: providerOptions,\r\n      xs: 12,\r\n      sm: 8,\r\n      md: 6,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.gateway,\r\n      onChange: handleRequestPropsChanged('gateway'),\r\n      value: request.gateway,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.dns1,\r\n      onChange: handleRequestPropsChanged('dns1'),\r\n      value: request.dns1,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.dns2,\r\n      onChange: handleRequestPropsChanged('dns2'),\r\n      value: request.dns2,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n    {\r\n      type: \"radio\",\r\n      label: texts.interface,\r\n      onChange: handleRequestPropsChanged('mode'),\r\n      value: request.mode,\r\n      oneRow: true,\r\n      disabled: true,\r\n      options: modeOptions,\r\n      xs: 12,\r\n      sm: 8,\r\n      md: 6,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleCreate,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyNetworkPool, getNetworkPool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Address Pool',\r\n    name: \"Name\",\r\n    gateway: \"Gateway\",\r\n    provider: 'Provider',\r\n    interface: 'Interface Mode',\r\n    internal: 'Internal',\r\n    external: 'External',\r\n    both: 'Both',\r\n    dns1: \"DNS1\",\r\n    dns2: \"DNS2\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改地址资源池',\r\n    name: \"名称\",\r\n    gateway: \"网关地址\",\r\n    provider: '分配模式',\r\n    interface: '接口类型',\r\n    internal: '内部',\r\n    external: '外部',\r\n    both: '内外部',\r\n    dns1: \"主DNS\",\r\n    dns2: \"副DNS\",\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    gateway: '',\r\n    provider: 'dhcp',\r\n    mode: 'internal',\r\n    dns1: '',\r\n    dns2: '',\r\n  };\r\n  const providerOptions = [\r\n    {\r\n      label: 'DHCP',\r\n      value: 'dhcp',\r\n    },\r\n    {\r\n      label: 'Cloud-Init',\r\n      value: 'cloudinit',\r\n    },\r\n  ];\r\n\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title + ' ' + pool;\r\n  const modeOptions = [\r\n    {\r\n      label: texts.internal,\r\n      value: 'internal',\r\n    },\r\n    {\r\n      label: texts.external,\r\n      value: 'external',\r\n    },\r\n    {\r\n      label: texts.both,\r\n      value: 'both',\r\n    },\r\n  ];\r\n  const onModifyFail =React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = poolName =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    const ipv4Pattern = new RegExp('^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$');\r\n\r\n    if(!request.gateway){\r\n      onModifyFail('must specify gateway');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.gateway)){\r\n      onModifyFail('invalid gateway format');\r\n      return;\r\n    }\r\n\r\n    if(!request.dns1){\r\n      onModifyFail('must specify primary DNS');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.dns1)){\r\n      onModifyFail('invalid primary DNS format');\r\n      return;\r\n    }\r\n\r\n    var dnsList = [request.dns1];\r\n    if(request.dns2){\r\n      if (!ipv4Pattern.test(request.dns2)){\r\n        onModifyFail('invalid secondary DNS format');\r\n        return;\r\n      }\r\n      dnsList.push(request.dns2);\r\n    }\r\n    modifyNetworkPool(pool, request.gateway, request.provider, dnsList, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n\r\n  React.useEffect(()=>{\r\n    if (!pool || !open ){\r\n      return;\r\n    }\r\n\r\n    setMounted(true);\r\n    const onGetPoolSuccess = pool =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      let primary, secondary;\r\n      if (0 === pool.dns.length){\r\n        onModifyFail('no DNS available for pool ' + pool);\r\n        return\r\n      }else if (1 === pool.dns.length){\r\n        primary = pool.dns[0];\r\n        secondary = \"\";\r\n      }else if (2 === pool.dns.length){\r\n        primary = pool.dns[0];\r\n        secondary = pool.dns[1];\r\n      }\r\n      var provider = 'dhcp';\r\n      if (pool.provider){\r\n        provider = pool.provider;\r\n      }\r\n      var mode = 'internal';\r\n      if (pool.mode){\r\n        mode = pool.mode;\r\n      }\r\n      setRequest({\r\n        name: pool.name,\r\n        gateway: pool.gateway,\r\n        provider: provider,\r\n        mode: mode,\r\n        dns1: primary,\r\n        dns2: secondary,\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    getNetworkPool(pool, onGetPoolSuccess, onModifyFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, pool, onModifyFail]);\r\n\r\n  //begin render\r\n\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        value: pool,\r\n        disabled: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 6,\r\n        md: 4,\r\n      },\r\n      {\r\n        type: \"radio\",\r\n        label: texts.provider,\r\n        onChange: handleRequestPropsChanged('provider'),\r\n        value: request.provider,\r\n        oneRow: true,\r\n        disabled: true,\r\n        options: providerOptions,\r\n        xs: 12,\r\n        sm: 8,\r\n        md: 6,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.gateway,\r\n        onChange: handleRequestPropsChanged('gateway'),\r\n        value: request.gateway,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n        md: 8,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.dns1,\r\n        onChange: handleRequestPropsChanged('dns1'),\r\n        value: request.dns1,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n        md: 8,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.dns2,\r\n        onChange: handleRequestPropsChanged('dns2'),\r\n        value: request.dns2,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n        md: 8,\r\n      },\r\n      {\r\n        type: \"radio\",\r\n        label: texts.interface,\r\n        onChange: handleRequestPropsChanged('mode'),\r\n        value: request.mode,\r\n        oneRow: true,\r\n        disabled: true,\r\n        options: modeOptions,\r\n        xs: 12,\r\n        sm: 8,\r\n        md: 6,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n      title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport ListIcon from '@material-ui/icons/List';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Table from \"components/Table/ObjectTable.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport DeleteDialog from \"views/AddressPools/DeleteDialog.js\";\r\nimport CreateDialog from \"views/AddressPools/CreateDialog.js\";\r\nimport ModifyDialog from \"views/AddressPools/ModifyDialog.js\";\r\nimport { getAllNetworkPools, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create Address Pool\",\r\n    tableTitle: \"Address Pools\",\r\n    name: \"Name\",\r\n    gateway: \"Gateway\",\r\n    address: \"Total Address\",\r\n    allocated: \"Allocated Address\",\r\n    provider: 'Provider',\r\n    operates: \"Operates\",\r\n    noResource: \"No address pool available\",\r\n    modify: 'Modify',\r\n    delete: 'Delete',\r\n    detail: 'Detail',\r\n  },\r\n  'cn':{\r\n    createButton: \"创建地址池\",\r\n    tableTitle: \"地址资源池\",\r\n    name: \"名称\",\r\n    gateway: \"网关\",\r\n    address: \"地址数量\",\r\n    allocated: \"已分配地址\",\r\n    provider: '分配模式',\r\n    operates: \"操作\",\r\n    noResource: \"没有地址池\",\r\n    modify: '修改',\r\n    delete: '删除',\r\n    detail: '详情',\r\n  }\r\n}\r\n\r\nfunction dataToNodes(data, buttons){\r\n  const operates = buttons.map((button, key) => (\r\n    <IconButton label={button.label} icon={button.icon} onClick={button.onClick} href={button.href} key={key}/>\r\n  ))\r\n  const { name, gateway, provider, addresses, allocated } = data;\r\n  var providerName = 'DHCP';\r\n  if ('cloudinit' === provider){\r\n    providerName = 'Cloud-Init';\r\n  }\r\n  return [ name, providerName, gateway, addresses.toString(), allocated.toString(), operates];\r\n}\r\n\r\nexport default function PoolList(props){\r\n    const classes = useStyles();\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ dataList, setDataList ] = React.useState(null);\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ selected, setSelected ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const reloadAllData = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const onLoadFail = (err) =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        showErrorMessage(err);\r\n      }\r\n      getAllNetworkPools(setDataList, onLoadFail);\r\n    }, [showErrorMessage, mounted]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //modify\r\n    const showModifyDialog = poolName =>{\r\n      setModifyDialogVisible(true);\r\n      setSelected(poolName);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = (poolName) =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('pool ' + poolName + ' modified');\r\n      reloadAllData();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = (poolName) =>{\r\n      setDeleteDialogVisible(true);\r\n      setSelected(poolName);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (poolName) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('pool ' + poolName + ' deleted');\r\n      reloadAllData();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = (poolName) =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('pool ' + poolName + ' created');\r\n      reloadAllData();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadAllData();\r\n      return () =>{\r\n        setMounted(false);\r\n      }\r\n    }, [reloadAllData]);\r\n\r\n    //begin rendering\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === dataList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === dataList.length){\r\n      content = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noResource}</Info></Box>;\r\n    }else{\r\n      var rows = [];\r\n      dataList.forEach( data => {\r\n        const buttons = [\r\n          {\r\n            onClick: e => showModifyDialog(data.name),\r\n            icon: BuildIcon,\r\n            label: texts.modify,\r\n          },\r\n          {\r\n            icon: ListIcon,\r\n            label: texts.detail,\r\n            href: '/admin/address_pools/' + data.name,\r\n          },\r\n          {\r\n            onClick: e => showDeleteDialog(data.name),\r\n            icon: DeleteIcon,\r\n            label: texts.delete,\r\n          },\r\n        ];\r\n        rows.push(dataToNodes(data, buttons));\r\n      });\r\n      content = (\r\n        <Table\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.provider, texts.gateway, texts.address, texts.allocated, texts.operates]}\r\n          rows={rows}/>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={3} sm={3} md={3}>\r\n              <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><AddIcon />{texts.createButton}</Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDialog\r\n            lang={lang}\r\n            open={modifyDialogVisible}\r\n            pool={selected}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            open={deleteDialogVisible}\r\n            pool={selected}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { removeAddressRange } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Remove Address Range',\r\n    content: 'Are you sure to remove address range ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除地址段',\r\n    content: '是否删除地址段 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function RemoveDialog(props){\r\n  const { lang, open, poolName, rangeType, startAddress, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onRemoveFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRemoveSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(rangeType, startAddress);\r\n  }\r\n\r\n  const handleRemove = () =>{\r\n    setOperatable(false);\r\n    removeAddressRange(poolName, rangeType, startAddress, onRemoveSuccess, onRemoveFail);\r\n  }\r\n\r\n  const content = texts.content + startAddress;\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleRemove,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { addAddressRange } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Add Address Range',\r\n    type: 'Range Type',\r\n    internal: 'Internal Address',\r\n    external: 'External Address',\r\n    start: 'Start Address',\r\n    end: 'End Address',\r\n    netmask: 'Netmask',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '添加地址段',\r\n    type: '类型',\r\n    internal: '内部地址段',\r\n    external: '外部地址段',\r\n    start: '起始地址',\r\n    end: '结束地址',\r\n    netmask: '子网掩码',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function AddDialog(props){\r\n  const defaultValues = {\r\n    type: \"internal\",\r\n    start: '',\r\n    end: '',\r\n    netmask: '',\r\n  };\r\n  const { lang, poolName, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onAddFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onAddSuccess = () =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(request.type, request.start);\r\n  }\r\n\r\n  const handleAdd = () =>{\r\n    setOperatable(false);\r\n    const ipv4Pattern = new RegExp('^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$');\r\n\r\n    if(!request.start){\r\n      onAddFail('must specify start address');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.start)){\r\n      onAddFail('invalid start start format');\r\n      return;\r\n    }\r\n\r\n    if(!request.end){\r\n      onAddFail('must specify end address');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.end)){\r\n      onAddFail('invalid end address format');\r\n      return;\r\n    }\r\n\r\n    if(!request.netmask){\r\n      onAddFail('must specify netmask');\r\n      return;\r\n    }else if (!ipv4Pattern.test(request.netmask)){\r\n      onAddFail('invalid netmask format');\r\n      return;\r\n    }\r\n\r\n    addAddressRange(poolName, request.type, request.start, request.end, request.netmask, onAddSuccess, onAddFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const inputs = [\r\n    {\r\n      type: \"radio\",\r\n      label: texts.type,\r\n      onChange: handleRequestPropsChanged('type'),\r\n      value: request.type,\r\n      options: [{\r\n        label: texts.internal,\r\n        value: \"internal\",\r\n      }],\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.start,\r\n      onChange: handleRequestPropsChanged('start'),\r\n      value: request.start,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 8,\r\n      md: 6,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.end,\r\n      onChange: handleRequestPropsChanged('end'),\r\n      value: request.end,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 8,\r\n      md: 6,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.netmask,\r\n      onChange: handleRequestPropsChanged('netmask'),\r\n      value: request.netmask,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 8,\r\n      md: 6,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleAdd,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Table from \"components/Table/ObjectTable.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport RemoveRangeDialog from \"views/AddressPools/RemoveRangeDialog.js\";\r\nimport AddRangeDialog from \"views/AddressPools/AddRangeDialog.js\";\r\nimport { getNetworkPool, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    \"&,& a,& a:hover,& a:focus\": {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\"\r\n    },\r\n    \"& a,& a:hover,& a:focus\": {\r\n      color: \"#FFFFFF\"\r\n    }\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    back: 'Back',\r\n    createButton: \"Add Address Range\",\r\n    tableTitle: \"Address Pool Status\",\r\n    internal: 'Internal Address Range',\r\n    allocated: 'Allocated Address',\r\n    startAddress: 'Start Address',\r\n    endAddress: 'End Address',\r\n    netmask: 'Netmask',\r\n    noInternalRange: 'No internal range available',\r\n    noAllocated: 'No address allocated',\r\n    operates: \"Operates\",\r\n    allocatedAddress: 'Allocated Address',\r\n    instance: 'Instance',\r\n    detail: 'Detail',\r\n    remove: 'Remove',\r\n  },\r\n  'cn':{\r\n    back: '返回',\r\n    createButton: \"添加地址段\",\r\n    tableTitle: \"地址资源池状态\",\r\n    internal: '内部地址段',\r\n    allocated: '已分配地址',\r\n    startAddress: '开始地址',\r\n    endAddress: '结束地址',\r\n    netmask: '子网掩码',\r\n    noInternalRange: '没有内部地址段',\r\n    noAllocated: '未分配地址',\r\n    operates: \"操作\",\r\n    allocatedAddress: '已分配地址',\r\n    instance: '云主机实例',\r\n    detail: '详情',\r\n    remove: '删除',\r\n  }\r\n}\r\n\r\nfunction dataToNodes(data, buttons){\r\n  // const operates = buttons.map((button, key) => (\r\n  //   <IconButton label={button.label} icon={button.icon} onClick={button.onClick} href={button.href} key={key}/>\r\n  // ))\r\n  const operates = buttons.map((button, key) => (\r\n    React.createElement(IconButton, {\r\n      ...button,\r\n      key: key,\r\n    })\r\n  ))\r\n  const { start, end, netmask } = data;\r\n  return [ start, end, netmask, operates];\r\n}\r\n\r\nfunction dataToAllocated(data, buttons){\r\n  const { address, instance } = data;\r\n  const operates = buttons.map((button, key) => (\r\n    React.createElement(IconButton, {\r\n      ...button,\r\n      key: key,\r\n    })\r\n  ))\r\n  return [address, instance].concat(operates);\r\n}\r\n\r\nexport default function PoolStatus(props){\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const poolName = props.match.params.pool;\r\n    const classes = useStyles();\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ status, setStatus ] = React.useState(null);\r\n    //for dialog\r\n    const [ addDialogVisible, setAddDialogVisible ] = React.useState(false);\r\n    const [ removeDialogVisible, setRemoveDialogVisible ] = React.useState(false);\r\n    const [ current, setCurrent ] = React.useState({\r\n      type: '',\r\n      start: '',\r\n    });\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback(msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const reloadPoolStatus = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const onLoadFail = (err) =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        showErrorMessage(err);\r\n      }\r\n      getNetworkPool(poolName, setStatus, onLoadFail);\r\n    }, [showErrorMessage, poolName, mounted]);\r\n\r\n    const showNotifyMessage = msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //remove\r\n    const showRemoveDialog = (rangeType, startAddress) =>{\r\n      setRemoveDialogVisible(true);\r\n      setCurrent({\r\n        type: rangeType,\r\n        start: startAddress,\r\n      });\r\n    }\r\n\r\n    const closeRemoveDialog = () =>{\r\n      setRemoveDialogVisible(false);\r\n    }\r\n\r\n    const onRemoveSuccess = (rangeType, startAddress) =>{\r\n      closeRemoveDialog();\r\n      showNotifyMessage('range \"' + startAddress + '\" of ' + rangeType + ' address removed');\r\n      reloadPoolStatus();\r\n    };\r\n\r\n    //add\r\n    const showAddDialog = () =>{\r\n      setAddDialogVisible(true);\r\n    };\r\n\r\n    const closeAddDialog = () =>{\r\n      setAddDialogVisible(false);\r\n    }\r\n\r\n    const onAddSuccess = (rangeType, startAddress) =>{\r\n      closeAddDialog();\r\n      showNotifyMessage('range \"' + startAddress + '\" of ' + rangeType + ' address added');\r\n      reloadPoolStatus();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadPoolStatus();\r\n      return () =>{\r\n        setMounted(false);\r\n      }\r\n    }, [reloadPoolStatus]);\r\n\r\n\r\n    //begin rendering\r\n    let content;\r\n    if (null === status){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else{\r\n      let internalContent;\r\n      if (!status.ranges || 0 === status.ranges.length){\r\n        internalContent = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noInternalRange}</Info></Box>;\r\n      }else{\r\n        var rows = [];\r\n        status.ranges.forEach( data => {\r\n          const buttons = [\r\n            {\r\n              icon: ListIcon,\r\n              label: texts.detail,\r\n              href: '/admin/address_pools/' + poolName + \"/internal/ranges/\" + data.start,\r\n            },\r\n            {\r\n              onClick: e => showRemoveDialog(\"internal\", data.start),\r\n              icon: DeleteIcon,\r\n              label: texts.remove,\r\n            },\r\n          ];\r\n          rows.push(dataToNodes(data, buttons));\r\n        });\r\n        internalContent = (\r\n          <Table\r\n            color=\"primary\"\r\n            headers={[texts.startAddress, texts.endAddress, texts.netmask, texts.operates]}\r\n            rows={rows}\r\n            />\r\n        )\r\n      }\r\n      const internalRanges = (\r\n        <Card>\r\n          <CardHeader color=\"primary\">\r\n            <h4 className={classes.cardTitleWhite}>{texts.internal}</h4>\r\n          </CardHeader>\r\n          <CardBody>\r\n            {internalContent}\r\n          </CardBody>\r\n        </Card>\r\n      )\r\n\r\n      let allocatedContent;\r\n      if (!status.allocated || 0 === status.allocated.length){\r\n        allocatedContent = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noAllocated}</Info></Box>;\r\n      }else{\r\n        rows = [];\r\n        status.allocated.forEach( data => {\r\n          const buttons = [\r\n            {\r\n              icon: VisibilityIcon,\r\n              label: texts.detail,\r\n              href: '/admin/instances/details/' + data.instance,\r\n            },\r\n          ];\r\n          rows.push(dataToAllocated(data, buttons));\r\n        });\r\n        allocatedContent = (\r\n          <Table\r\n            color=\"primary\"\r\n            headers={[texts.allocatedAddress, texts.instance, '']}\r\n            rows={rows}\r\n            />\r\n        )\r\n      }\r\n      const allocatedList = (\r\n        <Card>\r\n          <CardHeader color=\"primary\">\r\n            <h4 className={classes.cardTitleWhite}>{texts.allocated}</h4>\r\n          </CardHeader>\r\n          <CardBody>\r\n            {allocatedContent}\r\n          </CardBody>\r\n        </Card>\r\n      )\r\n\r\n      content = (\r\n        <GridContainer>\r\n          <GridItem xs={12}>\r\n            {internalRanges}\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            {allocatedList}\r\n          </GridItem>\r\n        </GridContainer>\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button key='back' size=\"sm\" color=\"info\" round onClick={() =>{\r\n        props.history.goBack();\r\n        }}>\r\n        <NavigateBeforeIcon />{texts.back}\r\n      </Button>,\r\n      <Button key='add' size=\"sm\" color=\"info\" round onClick={showAddDialog}><AddIcon />{texts.createButton}</Button>,\r\n    ];\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          {content}\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <AddRangeDialog\r\n            lang={lang}\r\n            poolName={poolName}\r\n            open={addDialogVisible}\r\n            onSuccess={onAddSuccess}\r\n            onCancel={closeAddDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <RemoveRangeDialog\r\n            lang={lang}\r\n            open={removeDialogVisible}\r\n            poolName={poolName}\r\n            rangeType={current.type}\r\n            startAddress={current.start}\r\n            onSuccess={onRemoveSuccess}\r\n            onCancel={closeRemoveDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Table from \"components/Table/ObjectTable.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport { getAddressRangeStatus } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    back: 'Back',\r\n    internal: 'Address Range Status',\r\n    allocated: 'Allocated Address',\r\n    startAddress: 'Start Address',\r\n    endAddress: 'End Address',\r\n    netmask: 'Netmask',\r\n    noAllocated: 'No address allocated',\r\n    allocatedAddress: 'Allocated Address',\r\n    instance: 'Instance',\r\n    detail: 'Detail',\r\n  },\r\n  'cn':{\r\n    back: '返回',\r\n    internal: '地址段状态',\r\n    allocated: '已分配地址',\r\n    startAddress: '开始地址',\r\n    endAddress: '结束地址',\r\n    netmask: '子网掩码',\r\n    noAllocated: '未分配地址',\r\n    allocatedAddress: '已分配地址',\r\n    instance: '云主机实例',\r\n    detail: '详情',\r\n  }\r\n}\r\n\r\nfunction dataToAllocated(data, buttons){\r\n  const { address, instance } = data;\r\n  const operates = buttons.map((button, key) => (\r\n    React.createElement(IconButton, {\r\n      ...button,\r\n      key: key,\r\n    })\r\n  ))\r\n  return [address, instance].concat(operates);\r\n}\r\n\r\nexport default function RangeStatus(props){\r\n    const poolName = props.match.params.pool;\r\n    const rangeType = props.match.params.type;\r\n    const startAddress = props.match.params.start;\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const classes = useStyles();\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ status, setStatus ] = React.useState(null);\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback(msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const reloadRangeStatus = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const onLoadFail = (err) =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        showErrorMessage(err);\r\n      }\r\n      getAddressRangeStatus(poolName, rangeType, startAddress, setStatus, onLoadFail);\r\n    }, [showErrorMessage, poolName, rangeType, startAddress, mounted]);\r\n\r\n    // const showNotifyMessage = (msg) => {\r\n    //   const notifyDuration = 3000;\r\n    //   setNotifyColor('info');\r\n    //   setNotifyMessage(msg);\r\n    //   setTimeout(closeNotify, notifyDuration);\r\n    // };\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadRangeStatus();\r\n      return () =>{\r\n        setMounted(false);\r\n      }\r\n    }, [reloadRangeStatus]);\r\n\r\n    //begin rendering\r\n    let content;\r\n    if (null === status){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else{\r\n      const internalContent = (\r\n        <Table\r\n          color=\"primary\"\r\n          headers={[texts.startAddress, texts.endAddress, texts.netmask]}\r\n          rows={[[startAddress, status.end, status.netmask]]}\r\n          />\r\n      )\r\n      const internalRanges = (\r\n        <Card>\r\n          <CardHeader color=\"primary\">\r\n            <h4 className={classes.cardTitleWhite}>{texts.internal}</h4>\r\n          </CardHeader>\r\n          <CardBody>\r\n            {internalContent}\r\n          </CardBody>\r\n        </Card>\r\n      )\r\n\r\n      let allocatedContent;\r\n      if (!status.allocated || 0 === status.allocated.length){\r\n        allocatedContent = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noAllocated}</Info></Box>;\r\n      }else{\r\n        var rows = [];\r\n        status.allocated.forEach( data => {\r\n          const buttons = [\r\n            {\r\n              icon: VisibilityIcon,\r\n              label: texts.detail,\r\n              href: '/admin/instances/details/' + data.instance,\r\n            },\r\n          ];\r\n          rows.push(dataToAllocated(data, buttons));\r\n        });\r\n        allocatedContent = (\r\n          <Table\r\n            color=\"primary\"\r\n            headers={[texts.allocatedAddress, texts.instance, '']}\r\n            rows={rows}\r\n            />\r\n        )\r\n      }\r\n      const allocatedList = (\r\n        <Card>\r\n          <CardHeader color=\"primary\">\r\n            <h4 className={classes.cardTitleWhite}>{texts.allocated}</h4>\r\n          </CardHeader>\r\n          <CardBody>\r\n            {allocatedContent}\r\n          </CardBody>\r\n        </Card>\r\n      )\r\n\r\n      content = (\r\n        <GridContainer>\r\n          <GridItem xs={12}>\r\n            {internalRanges}\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            {allocatedList}\r\n          </GridItem>\r\n        </GridContainer>\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button key='back' size=\"sm\" color=\"info\" round onClick={() =>{\r\n        props.history.goBack();\r\n        }}>\r\n        <NavigateBeforeIcon />{texts.back}\r\n      </Button>,\r\n    ];\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          {content}\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { deleteStoragePool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Storage Pool',\r\n    content: 'Are you sure to delete storage pool ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除存储资源池',\r\n    content: '是否删除存储资源池 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst DeleteDialog = (props) =>{\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onDeleteFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = poolName =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleDelete = () =>{\r\n    setOperatable(false);\r\n    deleteStoragePool(pool, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const content = texts.content + pool;\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleDelete,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n\r\nexport default DeleteDialog;\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { createStoragePool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create Storage Pool',\r\n    name: \"Name\",\r\n    type: \"Type\",\r\n    host: \"Host\",\r\n    target: \"Target\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建存储资源池',\r\n    name: \"名称\",\r\n    type: \"类型\",\r\n    host: \"主机\",\r\n    target: \"目标\",\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function CreateDialog(props){\r\n  const defaultType = 'nfs';\r\n  const defaultValues = {\r\n    name: '',\r\n    type: defaultType,\r\n    host: '',\r\n    target: '',\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const options = {\r\n    type: [{\r\n      value: defaultType,\r\n      label: 'NFS',\r\n    }]\r\n  }\r\n\r\n  const texts = i18n[lang];\r\n  const onCreateFail = (msg) =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = (poolName) =>{\r\n    resetDialog();\r\n    setOperatable(true);\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleCreate = () =>{\r\n    setOperatable(false);\r\n    if(!request.name){\r\n      onCreateFail('must specify storage name');\r\n      return;\r\n    }\r\n    if(!request.type){\r\n      onCreateFail('must specify storage type');\r\n      return;\r\n    }\r\n    if(!request.host){\r\n      onCreateFail('must specify storage host');\r\n      return;\r\n    }\r\n    if(!request.target){\r\n      onCreateFail('must specify storage target');\r\n      return;\r\n    }\r\n    const hostPattern = new RegExp('^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]).)+([A-Za-z]|[A-Za-z][A-Za-z0-9-]*[A-Za-z0-9])$');\r\n    const pathPattern = new RegExp('^(/[^/ ]*)+/?$');\r\n\r\n    if (!hostPattern.test(request.host)){\r\n      onCreateFail('invalid host format');\r\n      return;\r\n    }\r\n    if (!pathPattern.test(request.target)){\r\n      onCreateFail('invalid target format');\r\n      return;\r\n    }\r\n\r\n    createStoragePool(request.name, request.type, request.host, request.target, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const inputs = [\r\n    {\r\n      type: \"text\",\r\n      label: texts.name,\r\n      onChange: handleRequestPropsChanged('name'),\r\n      value: request.name,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      label: texts.type,\r\n      onChange: handleRequestPropsChanged('type'),\r\n      value: request.type,\r\n      options: options.type,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 8,\r\n      md: 6,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.host,\r\n      onChange: handleRequestPropsChanged('host'),\r\n      value: request.host,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.target,\r\n      onChange: handleRequestPropsChanged('target'),\r\n      value: request.target,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleCreate,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={texts.title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyStoragePool, getStoragePool } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Storage Pool',\r\n    name: \"Name\",\r\n    type: \"Type\",\r\n    host: \"Host\",\r\n    target: \"Target\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改存储资源池',\r\n    name: \"名称\",\r\n    type: \"类型\",\r\n    host: \"主机\",\r\n    target: \"目标\",\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyDialog(props){\r\n  const defaultType = 'nfs';\r\n  const defaultValues = {\r\n    name: '',\r\n    type: '',\r\n    host: '',\r\n    target: '',\r\n  };\r\n  const { lang, pool, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const options = {\r\n    type: [{\r\n      value: defaultType,\r\n      label: 'NFS',\r\n    }]\r\n  }\r\n\r\n  const texts = i18n[lang];\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = poolName =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    resetDialog();\r\n    setOperatable(true);\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleModify = () =>{\r\n    setOperatable(false);\r\n    if(!request.type){\r\n      onModifyFail('must specify storage type');\r\n      return;\r\n    }\r\n    if(!request.host){\r\n      onModifyFail('must specify storage host');\r\n      return;\r\n    }\r\n    if(!request.target){\r\n      onModifyFail('must specify storage target');\r\n      return;\r\n    }\r\n    const hostPattern = new RegExp('^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]).)+([A-Za-z]|[A-Za-z][A-Za-z0-9-]*[A-Za-z0-9])$');\r\n    const pathPattern = new RegExp('^(/[^/ ]*)+/?$');\r\n\r\n    if (!hostPattern.test(request.host)){\r\n      onModifyFail('invalid host format');\r\n      return;\r\n    }\r\n    if (!pathPattern.test(request.target)){\r\n      onModifyFail('invalid target format');\r\n      return;\r\n    }\r\n    modifyStoragePool(pool, request.type, request.host, request.target, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n\r\n  React.useEffect(()=>{\r\n    if (!pool || !open ){\r\n      return;\r\n    }\r\n\r\n    setMounted(true);\r\n    const onGetStorageSuccess = storage =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setRequest({\r\n        type: storage.type,\r\n        host: storage.host,\r\n        target: storage.target,\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    getStoragePool(pool, onGetStorageSuccess, onModifyFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [initialed, open, pool, mounted, onModifyFail]);\r\n\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        value: pool,\r\n        disabled: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 6,\r\n        md: 4,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.type,\r\n        onChange: handleRequestPropsChanged('type'),\r\n        value: request.type,\r\n        options: options.type,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 8,\r\n        md: 6,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.host,\r\n        onChange: handleRequestPropsChanged('host'),\r\n        value: request.host,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n        md: 8,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.target,\r\n        onChange: handleRequestPropsChanged('target'),\r\n        value: request.target,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n        md: 8,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleModify,\r\n    },\r\n  ];\r\n\r\n  const title = texts.title + ' ' + pool;\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n      title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Table from \"components/Table/ObjectTable.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport DeleteDialog from \"views/StoragePools/DeleteDialog.js\";\r\nimport CreateDialog from \"views/StoragePools/CreateDialog.js\";\r\nimport ModifyDialog from \"views/StoragePools/ModifyDialog.js\";\r\nimport { getAllStoragePools, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    \"&,& a,& a:hover,& a:focus\": {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\"\r\n    },\r\n    \"& a,& a:hover,& a:focus\": {\r\n      color: \"#FFFFFF\"\r\n    }\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create Storage Pool\",\r\n    tableTitle: \"Storage Pools\",\r\n    name: \"Name\",\r\n    type: \"Type\",\r\n    host: \"Host\",\r\n    target: \"Target\",\r\n    operates: \"Operates\",\r\n    noResource: \"No storage pool available\",\r\n    modify: 'Modify',\r\n    delete: 'Delete',\r\n  },\r\n  'cn':{\r\n    createButton: \"创建存储资源池\",\r\n    tableTitle: \"存储资源池\",\r\n    name: \"名称\",\r\n    type: \"类型\",\r\n    host: \"主机\",\r\n    target: \"目标\",\r\n    operates: \"操作\",\r\n    noResource: \"没有存储资源池\",\r\n    modify: '修改',\r\n    delete: '删除',\r\n  }\r\n}\r\n\r\nfunction dataToNodes(data, buttons){\r\n  const operates = buttons.map((button, key) => (\r\n    <IconButton label={button.label} icon={button.icon} onClick={button.onClick} key={key}/>\r\n  ))\r\n  const { name, type, host, target } = data;\r\n  return [ name, type, host, target, operates];\r\n}\r\n\r\nexport default function StoragePools(props){\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const classes = useStyles();\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ dataList, setDataList ] = React.useState(null);\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ selected, setSelected ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const reloadAllData = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const onLoadFail = err =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        showErrorMessage(err);\r\n      }\r\n      getAllStoragePools(setDataList, onLoadFail);\r\n    }, [showErrorMessage, mounted]);\r\n\r\n    const showNotifyMessage = msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //modify\r\n    const showModifyDialog = (poolName) =>{\r\n      setModifyDialogVisible(true);\r\n      setSelected(poolName);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = (poolName) =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('pool ' + poolName + ' modified');\r\n      reloadAllData();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = (poolName) =>{\r\n      setDeleteDialogVisible(true);\r\n      setSelected(poolName);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (poolName) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('pool ' + poolName + ' deleted');\r\n      reloadAllData();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = (poolName) =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('pool ' + poolName + ' created');\r\n      reloadAllData();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadAllData();\r\n      return () =>{\r\n        setMounted(false);\r\n      }\r\n    }, [reloadAllData]);\r\n\r\n    //begin rendering\r\n    let content;\r\n    if (null === dataList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === dataList.length){\r\n      content = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noResource}</Info></Box>;\r\n    }else{\r\n      var rows = [];\r\n      dataList.forEach( data => {\r\n        const buttons = [\r\n          {\r\n            onClick: e => showModifyDialog(data.name),\r\n            icon: SettingsIcon,\r\n            label: texts.modify,\r\n          },\r\n          {\r\n            onClick: e => showDeleteDialog(data.name),\r\n            icon: DeleteIcon,\r\n            label: texts.delete,\r\n          },\r\n        ];\r\n        rows.push(dataToNodes(data, buttons));\r\n      });\r\n      content = (\r\n        <Table\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.type, texts.host, texts.target, texts.operates]}\r\n          rows={rows}/>\r\n      );\r\n\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={3} sm={3} md={3}>\r\n              <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><AddIcon />{texts.createButton}</Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDialog\r\n            lang={lang}\r\n            open={modifyDialogVisible}\r\n            pool={selected}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            open={deleteDialogVisible}\r\n            pool={selected}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { deleteMediaImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Media Image',\r\n    content: 'Are you sure to delete media image ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除光盘镜像',\r\n    content: '是否删除光盘镜像 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteDialog(props){\r\n  const { lang, imageID, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const content = texts.content + imageID;\r\n  const onDeleteFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    deleteMediaImage(imageID, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { createMediaImage, deleteMediaImage, uploadMediaImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Upload New Image',\r\n    name: 'Image Name',\r\n    description: 'Description',\r\n    tags: 'Tags',\r\n    file: 'Image File',\r\n    choose: 'Choose File',\r\n    cancel: 'Cancel',\r\n    confirm: 'Upload',\r\n  },\r\n  'cn':{\r\n    title: '上传新镜像',\r\n    name: '镜像名称',\r\n    description: '描述',\r\n    tags: '标签',\r\n    file: '镜像文件',\r\n    choose: '浏览文件',\r\n    cancel: '取消',\r\n    confirm: '上传',\r\n  },\r\n}\r\n\r\nexport default function UploadDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    tags: new Map(),\r\n    file: null,\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ uploading, setUploading ] = React.useState(false);\r\n  const [ progress, setProgress ] = React.useState(0);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    tags: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onUploadFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n    setUploading(false);\r\n    setProgress(0);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onUploadSuccess = imageID =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const onUploadProgress = progress => {\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setProgress(progress);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    const imageName = request.name;\r\n    if ('' === imageName){\r\n      onUploadFail('must specify image name');\r\n      return;\r\n    }\r\n    const description = request.description;\r\n    if ('' === description){\r\n      onUploadFail('desciption required');\r\n      return;\r\n    }\r\n\r\n    if (!request.tags){\r\n      onUploadFail('image tags required');\r\n      return;\r\n    }\r\n    var tags = [];\r\n    request.tags.forEach((value, key) =>{\r\n      if (value){\r\n        //checked\r\n        tags.push(key);\r\n      }\r\n    });\r\n    if (0 === tags.length){\r\n      onUploadFail('image tags required');\r\n      return;\r\n    }\r\n\r\n    if (!request.file){\r\n      onUploadFail('must specify upload file');\r\n      return;\r\n    }\r\n\r\n    const onCreateSuccess = (imageID) => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      const onDeleteSuccess = () =>{\r\n        onUploadFail('new image ' + imageName + ' deleted');\r\n      }\r\n      const onDeleteFail = (msg) =>{\r\n        onUploadFail('delete new image ' + imageName + ' fail: ' + msg);\r\n      }\r\n      const onFailAfterCreated = () =>{\r\n        deleteMediaImage(imageID, onDeleteSuccess, onDeleteFail);\r\n      }\r\n      setUploading(true);\r\n      uploadMediaImage(imageID, request.file, onUploadProgress, onUploadSuccess, onFailAfterCreated);\r\n    }\r\n\r\n    createMediaImage(imageName, description, tags, onCreateSuccess, onUploadFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      tags: previous.tags.set(name, value),\r\n    }));\r\n  };\r\n\r\n  const handleFileChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var file = e.target.files[0];\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: file,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    const imageTags = [\r\n      ['linux', 'Linux'],\r\n      ['windows', 'Windows'],\r\n      ['centos', 'Centos'],\r\n      ['ubuntu', 'Ubuntu'],\r\n      ['64bit', '64Bit'],\r\n      ['32bit', '32Bit']\r\n    ];\r\n\r\n    setMounted(true);\r\n    var tagOptions = [];\r\n    imageTags.forEach(tag =>{\r\n      tagOptions.push({\r\n        label: tag[1],\r\n        value: tag[0],\r\n      });\r\n    });\r\n    setOptions({\r\n      tags: tagOptions,\r\n    });\r\n    setInitialed(true);\r\n\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [open]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else if(uploading){\r\n    content = (\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <LinearProgress variant=\"determinate\" value={progress} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography align=\"center\">\r\n            {progress.toFixed(2) + '%'}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        value: request.name,\r\n        onChange: handleRequestPropsChanged('name'),\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n      },\r\n      {\r\n        type: \"textarea\",\r\n        label: texts.description,\r\n        value: request.description,\r\n        onChange: handleRequestPropsChanged('description'),\r\n        required: true,\r\n        oneRow: true,\r\n        rows: 4,\r\n        xs: 12,\r\n      },\r\n      {\r\n        type: \"checkbox\",\r\n        label: texts.tags,\r\n        onChange: handleTagsChanged,\r\n        value: request.tags,\r\n        options: options.tags,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n      },\r\n      {\r\n        type: \"file\",\r\n        label: texts.file,\r\n        onChange: handleFileChanged('file'),\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt} hideBackdrop\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { getMediaImage, modifyMediaImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Media Image',\r\n    name: 'Image Name',\r\n    description: 'Description',\r\n    tags: 'Tags',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改镜像信息',\r\n    name: '镜像名称',\r\n    description: '描述',\r\n    tags: '标签',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\nexport default function ModifyDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    tags: new Map(),\r\n  };\r\n  const { lang, imageID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    tags: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = imageID =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    const imageName = request.name;\r\n    if ('' === imageName){\r\n      onModifyFail('must specify image name');\r\n      return;\r\n    }\r\n    const description = request.description;\r\n    if ('' === description){\r\n      onModifyFail('desciption required');\r\n      return;\r\n    }\r\n\r\n    if (!request.tags){\r\n      onModifyFail('image tags required');\r\n      return;\r\n    }\r\n    var tags = [];\r\n    request.tags.forEach((value, key) =>{\r\n      if (value){\r\n        //checked\r\n        tags.push(key);\r\n      }\r\n    });\r\n    if (0 === tags.length){\r\n      onModifyFail('image tags required');\r\n      return;\r\n    }\r\n    modifyMediaImage(imageID, imageName, description, tags, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      tags: previous.tags.set(name, value),\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n\r\n    const imageTags = [\r\n      ['linux', 'Linux'],\r\n      ['windows', 'Windows'],\r\n      ['centos', 'Centos'],\r\n      ['ubuntu', 'Ubuntu'],\r\n      ['64bit', '64Bit'],\r\n      ['32bit', '32Bit']\r\n    ];\r\n\r\n    setMounted(true);\r\n\r\n    const onGetMediaSuccess = image => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var tagOptions = [];\r\n      imageTags.forEach(tag =>{\r\n        tagOptions.push({\r\n          label: tag[1],\r\n          value: tag[0],\r\n        });\r\n      });\r\n      setOptions({\r\n        tags: tagOptions,\r\n      });\r\n      var currentTags = new Map();\r\n      if (image.tags){\r\n        image.tags.forEach(tag => {\r\n          currentTags.set(tag, true);\r\n        });\r\n      }\r\n      setRequest({\r\n        name: image.name,\r\n        description: image.description,\r\n        tags: currentTags,\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    getMediaImage(imageID, onGetMediaSuccess, onModifyFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [open, imageID, mounted, onModifyFail]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        value: request.name,\r\n        onChange: handleRequestPropsChanged('name'),\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n      },\r\n      {\r\n        type: \"textarea\",\r\n        label: texts.description,\r\n        value: request.description,\r\n        onChange: handleRequestPropsChanged('description'),\r\n        required: true,\r\n        oneRow: true,\r\n        rows: 4,\r\n        xs: 12,\r\n      },\r\n      {\r\n        type: \"checkbox\",\r\n        label: texts.tags,\r\n        onChange: handleTagsChanged,\r\n        value: request.tags,\r\n        options: options.tags,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n\r\n  }\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { syncMediaImages } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Sync Local Media Images',\r\n    content: 'Are you sure to synchronize local media images',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '同步本地光盘镜像',\r\n    content: '是否同步本地光盘镜像文件',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function SyncDialog(props){\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const content = texts.content;\r\n  const onSyncFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onSyncSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess();\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    syncMediaImages(onSyncSuccess, onSyncFail);\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\n\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport DeleteDialog from \"views/MediaImages/DeleteDialog.js\";\r\nimport UploadDialog from \"views/MediaImages/UploadDialog.js\";\r\nimport ModifyDialog from \"views/MediaImages/ModifyDialog.js\";\r\nimport SyncDialog from \"views/MediaImages/SyncDialog.js\";\r\nimport { bytesToString } from 'utils.js';\r\nimport { searchMediaImages, writeLog } from \"nano_api.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    modify: 'Modify Info',\r\n    delete: 'Delete Image',\r\n    createTime: 'Created Time',\r\n    modifyTime: 'Modified Time',\r\n    uploadButton: \"Upload New ISO\",\r\n    syncButton: \"Synchronize Local Images\",\r\n    noResource: \"No images available\",\r\n  },\r\n  'cn':{\r\n    modify: '修改镜像信息',\r\n    delete: '删除镜像',\r\n    createTime: '创建时间',\r\n    modifyTime: '修改时间',\r\n    uploadButton: \"上传新光盘镜像\",\r\n    syncButton: \"同步本地镜像文件\",\r\n    noResource: \"没有光盘镜像\",\r\n  }\r\n}\r\n\r\nfunction dataToNode(data, buttons, createLabel, modifyLabel){\r\n  const { name, size, tags, description, create_time, modify_time, id } = data;\r\n  const sizeLabel = bytesToString(size);\r\n  const operates = buttons.map((button, key) => (\r\n    React.createElement(IconButton, {\r\n      ...button,\r\n      key: key,\r\n    })\r\n  ));\r\n  return (\r\n    <Card>\r\n      <CardHeader color=\"primary\">\r\n        <h4>{name}</h4>\r\n        <span>{id}</span>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Box m={1}>{sizeLabel}</Box>\r\n          {\r\n            tags?tags.map(tag => <Box m={0} p={1} key={tag}><Chip label={tag}/></Box>):<Box/>\r\n          }\r\n        </Box>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Typography variant='body1' component='p' noWrap>\r\n          {description}\r\n        </Typography>\r\n        <p>\r\n          {createLabel + ': ' + create_time}\r\n        </p>\r\n        <p>\r\n          {modifyLabel + ': ' + modify_time}\r\n        </p>\r\n        {operates}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default function MediaImages(props){\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ dataList, setDataList ] = React.useState(null);\r\n    const [ uploadDialogVisible, setUploadDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ syncDialogVisible, setSyncDialogVisible ] = React.useState(false);\r\n    const [ selected, setSelected ] = React.useState('');\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback(msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const reloadAllData = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const onLoadFail = err =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        showErrorMessage(err);\r\n      }\r\n      const onLoadSuccess = payload => {\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        if (!payload){\r\n          setDataList([]);\r\n        }else{\r\n          setDataList(payload);\r\n        }\r\n      }\r\n      searchMediaImages(onLoadSuccess, onLoadFail);\r\n    }, [showErrorMessage, mounted]);\r\n\r\n    //detail\r\n    const showModifyDialog = (imageID) =>{\r\n      setModifyDialogVisible(true);\r\n      setSelected(imageID);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = (imageID) =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('image '+ imageID + ' modified');\r\n      reloadAllData();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = (imageID) =>{\r\n      setDeleteDialogVisible(true);\r\n      setSelected(imageID);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (imageID) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('image '+ imageID + ' deleted');\r\n      reloadAllData();\r\n    };\r\n\r\n    //create\r\n    const showUploadDialog = () =>{\r\n      setUploadDialogVisible(true);\r\n    };\r\n\r\n    const closeUploadDialog = () =>{\r\n      setUploadDialogVisible(false);\r\n    }\r\n\r\n    const onUploadSuccess = (id) =>{\r\n      closeUploadDialog();\r\n      showNotifyMessage('new image ' + id + ' uploaded');\r\n      reloadAllData();\r\n    };\r\n\r\n    //sync\r\n    const showSyncDialog = () =>{\r\n      setSyncDialogVisible(true);\r\n    }\r\n\r\n    const closeSyncDialog = () =>{\r\n      setSyncDialogVisible(false);\r\n    }\r\n\r\n    const onSyncSuccess = () =>{\r\n      closeSyncDialog();\r\n      showNotifyMessage('all media images synchronized');\r\n      reloadAllData();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadAllData();\r\n      const updateInterval = 5 * 1000;\r\n      var timerID = setInterval(()=>{\r\n        reloadAllData();\r\n      }, updateInterval);\r\n      return () =>{\r\n        setMounted(false);\r\n        clearInterval(timerID);\r\n      }\r\n    }, [reloadAllData]);\r\n\r\n    let content;\r\n    if (null === dataList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === dataList.length){\r\n      content = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noResource}</Info></Box>;\r\n    }else{\r\n\r\n      content = (\r\n        <GridContainer>\r\n        {\r\n          dataList.map((image, key) =>{\r\n            const buttons = [\r\n              {\r\n                label: texts.modify,\r\n                icon: SettingsIcon,\r\n                onClick: () => showModifyDialog(image.id),\r\n              },\r\n              {\r\n                label: texts.delete,\r\n                icon: DeleteIcon,\r\n                onClick: () => showDeleteDialog(image.id),\r\n              },\r\n\r\n            ];\r\n            var node = dataToNode(image, buttons, texts.createTime, texts.modifyTime);\r\n            return (\r\n              <GridItem xs={12} sm={6} md={4} key={key}>\r\n                {node}\r\n              </GridItem>\r\n            )\r\n          })\r\n        }\r\n        </GridContainer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={6} md={4}>\r\n              <Box display=\"flex\">\r\n                <Box p={1}>\r\n                  <Button size=\"sm\" color=\"info\" round onClick={showUploadDialog}><PublishIcon />{texts.uploadButton}</Button>\r\n                </Box>\r\n                <Box p={1}>\r\n                  <Button size=\"sm\" color=\"info\" round onClick={showSyncDialog}><CachedIcon />{texts.syncButton}</Button>\r\n                </Box>\r\n              </Box>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          {content}\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <UploadDialog\r\n            lang={lang}\r\n            open={uploadDialogVisible}\r\n            onSuccess={onUploadSuccess}\r\n            onCancel={closeUploadDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDialog\r\n            lang={lang}\r\n            imageID={selected}\r\n            open={modifyDialogVisible}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            imageID={selected}\r\n            open={deleteDialogVisible}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <SyncDialog\r\n            lang={lang}\r\n            open={syncDialogVisible}\r\n            onSuccess={onSyncSuccess}\r\n            onCancel={closeSyncDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { deleteDiskImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Disk Image',\r\n    content: 'Are you sure to delete disk image ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除磁盘镜像',\r\n    content: '是否删除磁盘镜像 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteDialog(props){\r\n  const { lang, imageID, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const content = texts.content + imageID;\r\n  const onDeleteFail = (msg) =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    deleteDiskImage(imageID, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { createDiskImage, deleteDiskImage, uploadDiskImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Upload New Image',\r\n    name: 'Image Name',\r\n    description: 'Description',\r\n    tags: 'Tags',\r\n    file: 'Image File',\r\n    choose: 'Choose File',\r\n    cancel: 'Cancel',\r\n    confirm: 'Upload',\r\n  },\r\n  'cn':{\r\n    title: '上传新镜像',\r\n    name: '镜像名称',\r\n    description: '描述',\r\n    tags: '标签',\r\n    file: '镜像文件',\r\n    choose: '浏览文件',\r\n    cancel: '取消',\r\n    confirm: '上传',\r\n  },\r\n}\r\n\r\nexport default function UploadDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    tags: new Map(),\r\n    file: null,\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ uploading, setUploading ] = React.useState(false);\r\n  const [ progress, setProgress ] = React.useState(0);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    tags: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onUploadFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n    setUploading(false);\r\n    setProgress(0);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onUploadSuccess = imageID =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const onUploadProgress = progress => {\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setProgress(progress);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    const imageName = request.name;\r\n    if ('' === imageName){\r\n      onUploadFail('must specify image name');\r\n      return;\r\n    }\r\n    const description = request.description;\r\n    if ('' === description){\r\n      onUploadFail('desciption required');\r\n      return;\r\n    }\r\n\r\n    if (!request.tags){\r\n      onUploadFail('image tags required');\r\n      return;\r\n    }\r\n    var tags = [];\r\n    request.tags.forEach((value, key) =>{\r\n      if (value){\r\n        //checked\r\n        tags.push(key);\r\n      }\r\n    });\r\n    if (0 === tags.length){\r\n      onUploadFail('image tags required');\r\n      return;\r\n    }\r\n\r\n    if (!request.file){\r\n      onUploadFail('must specify upload file');\r\n      return;\r\n    }\r\n\r\n    const onCreateSuccess = (imageID) => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      const onDeleteSuccess = () =>{\r\n        onUploadFail('new image ' + imageName + ' deleted');\r\n      }\r\n      const onDeleteFail = (msg) =>{\r\n        onUploadFail('delete new image ' + imageName + ' fail: ' + msg);\r\n      }\r\n      const onFailAfterCreated = () =>{\r\n        deleteDiskImage(imageID, onDeleteSuccess, onDeleteFail);\r\n      }\r\n      setUploading(true);\r\n      uploadDiskImage(imageID, request.file, onUploadProgress, onUploadSuccess, onFailAfterCreated);\r\n    }\r\n\r\n    createDiskImage(imageName, null, description, tags, onCreateSuccess, onUploadFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      tags: previous.tags.set(name, value),\r\n    }));\r\n  };\r\n\r\n  const handleFileChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var file = e.target.files[0];\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: file,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    const imageTags = [\r\n      ['linux', 'Linux'],\r\n      ['windows', 'Windows'],\r\n      ['centos', 'Centos'],\r\n      ['ubuntu', 'Ubuntu'],\r\n      ['64bit', '64Bit'],\r\n      ['32bit', '32Bit']\r\n    ];\r\n\r\n    setMounted(true);\r\n    var tagOptions = [];\r\n    imageTags.forEach(tag =>{\r\n      tagOptions.push({\r\n        label: tag[1],\r\n        value: tag[0],\r\n      });\r\n    });\r\n    setOptions({\r\n      tags: tagOptions,\r\n    });\r\n    setInitialed(true);\r\n\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [open]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else if(uploading){\r\n    content = (\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <LinearProgress variant=\"determinate\" value={progress} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography align=\"center\">\r\n            {progress.toFixed(2) + '%'}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        value: request.name,\r\n        onChange: handleRequestPropsChanged('name'),\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n      },\r\n      {\r\n        type: \"textarea\",\r\n        label: texts.description,\r\n        value: request.description,\r\n        onChange: handleRequestPropsChanged('description'),\r\n        required: true,\r\n        oneRow: true,\r\n        rows: 4,\r\n        xs: 12,\r\n      },\r\n      {\r\n        type: \"checkbox\",\r\n        label: texts.tags,\r\n        onChange: handleTagsChanged,\r\n        value: request.tags,\r\n        options: options.tags,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n      },\r\n      {\r\n        type: \"file\",\r\n        label: texts.file,\r\n        onChange: handleFileChanged('file'),\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt} hideBackdrop\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { getDiskImage, modifyDiskImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Disk Image',\r\n    name: 'Image Name',\r\n    description: 'Description',\r\n    tags: 'Tags',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改镜像信息',\r\n    name: '镜像名称',\r\n    description: '描述',\r\n    tags: '标签',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\nexport default function ModifyDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    tags: new Map(),\r\n  };\r\n  const { lang, imageID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    tags: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = (imageID) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    const imageName = request.name;\r\n    if ('' === imageName){\r\n      onModifyFail('must specify image name');\r\n      return;\r\n    }\r\n    const description = request.description;\r\n    if ('' === description){\r\n      onModifyFail('desciption required');\r\n      return;\r\n    }\r\n\r\n    if (!request.tags){\r\n      onModifyFail('image tags required');\r\n      return;\r\n    }\r\n    var tags = [];\r\n    request.tags.forEach((value, key) =>{\r\n      if (value){\r\n        //checked\r\n        tags.push(key);\r\n      }\r\n    });\r\n    if (0 === tags.length){\r\n      onModifyFail('image tags required');\r\n      return;\r\n    }\r\n    modifyDiskImage(imageID, imageName, description, tags, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      tags: previous.tags.set(name, value),\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    const imageTags = [\r\n      ['linux', 'Linux'],\r\n      ['windows', 'Windows'],\r\n      ['centos', 'Centos'],\r\n      ['ubuntu', 'Ubuntu'],\r\n      ['64bit', '64Bit'],\r\n      ['32bit', '32Bit']\r\n    ];\r\n    setMounted(true);\r\n    const onGetDiskSuccess = image => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var tagOptions = [];\r\n      imageTags.forEach(tag =>{\r\n        tagOptions.push({\r\n          label: tag[1],\r\n          value: tag[0],\r\n        });\r\n      });\r\n      setOptions({\r\n        tags: tagOptions,\r\n      });\r\n      var currentTags = new Map();\r\n      if (image.tags){\r\n        image.tags.forEach(tag => {\r\n          currentTags.set(tag, true);\r\n        });\r\n      }\r\n      setRequest({\r\n        name: image.name,\r\n        description: image.description,\r\n        tags: currentTags,\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    getDiskImage(imageID, onGetDiskSuccess, onModifyFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, imageID, onModifyFail]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        value: request.name,\r\n        onChange: handleRequestPropsChanged('name'),\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n      },\r\n      {\r\n        type: \"textarea\",\r\n        label: texts.description,\r\n        value: request.description,\r\n        onChange: handleRequestPropsChanged('description'),\r\n        required: true,\r\n        oneRow: true,\r\n        rows: 4,\r\n        xs: 12,\r\n      },\r\n      {\r\n        type: \"checkbox\",\r\n        label: texts.tags,\r\n        onChange: handleTagsChanged,\r\n        value: request.tags,\r\n        options: options.tags,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { createDiskImage, deleteDiskImage, getDiskImage, searchInstances, getAllComputePools } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Build New Image',\r\n    name: 'Image Name',\r\n    description: 'Description',\r\n    tags: 'Tags',\r\n    pool: 'Compute Pool',\r\n    guest: 'Source Instance',\r\n    cancel: 'Cancel',\r\n    confirm: 'Build',\r\n  },\r\n  'cn':{\r\n    title: '构建新镜像',\r\n    name: '镜像名称',\r\n    description: '描述',\r\n    tags: '标签',\r\n    pool: '资源池',\r\n    guest: '源云主机',\r\n    cancel: '取消',\r\n    confirm: '构建',\r\n  },\r\n}\r\n\r\nexport default function BuildDialog(props){\r\n  const checkInterval = 1000;\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    tags: new Map(),\r\n    pool: '',\r\n    guest: '',\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ creating, setCreating ] = React.useState(false);\r\n  const [ progress, setProgress ] = React.useState(0);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    tags: [],\r\n    pools: [],\r\n    guests: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onBuildFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const onFailAfterCreated = imageID => msg => {\r\n    deleteDiskImage(imageID);\r\n    onBuildFail(msg);\r\n  }\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n    setCreating(false);\r\n    setProgress(0);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onBuildSuccess = imageID =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(imageID);\r\n  }\r\n\r\n  const onBuildAccept = imageName => imageID =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setCreating(true);\r\n    setTimeout(() =>{\r\n      getDiskImage(imageID, onBuildProgress(imageID, imageName), onFailAfterCreated(imageID));\r\n    }, checkInterval);\r\n  }\r\n\r\n  const onBuildProgress = (imageID, imageName) => status => {\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    if (status.created){\r\n      onBuildSuccess(imageID);\r\n      return;\r\n    }\r\n    setProgress(status.progress);\r\n    setTimeout(() =>{\r\n      getDiskImage(imageID, onBuildProgress(imageID, imageName), onFailAfterCreated(imageID));\r\n    }, checkInterval);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    if (!request.name){\r\n      onBuildFail('must specify image name');\r\n      return;\r\n    }\r\n    if (!request.description){\r\n      onBuildFail('desciption required');\r\n      return;\r\n    }\r\n\r\n    if (!request.tags){\r\n      onBuildFail('image tags required');\r\n      return;\r\n    }\r\n    var tags = [];\r\n    request.tags.forEach((value, key) =>{\r\n      if (value){\r\n        //checked\r\n        tags.push(key);\r\n      }\r\n    });\r\n    if (0 === tags.length){\r\n      onBuildFail('image tags required');\r\n      return;\r\n    }\r\n\r\n    if (!request.guest){\r\n      onBuildFail('must specify source guest');\r\n      return;\r\n    }\r\n\r\n    const imageName = request.name;\r\n    createDiskImage(imageName, request.guest, request.description, tags, onBuildAccept(imageName), onBuildFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      tags: previous.tags.set(name, value),\r\n    }));\r\n  };\r\n\r\n  const handlePoolChanged = e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var poolName = e.target.value;\r\n    const onQuerySuccess = dataList =>{\r\n      var guests = [];\r\n      dataList.forEach(guest =>{\r\n        guests.push({\r\n          value: guest.id,\r\n          label: guest.name,\r\n        })\r\n      })\r\n      setOptions(previous =>({\r\n        ...previous,\r\n        guests: guests,\r\n      }))\r\n      setRequest(previous =>({\r\n        ...previous,\r\n        pool: poolName,\r\n        guest: '',\r\n      }))\r\n    }\r\n    searchInstances(poolName, null, onQuerySuccess, onBuildFail);\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    const imageTags = [\r\n      ['linux', 'Linux'],\r\n      ['windows', 'Windows'],\r\n      ['centos', 'Centos'],\r\n      ['ubuntu', 'Ubuntu'],\r\n      ['64bit', '64Bit'],\r\n      ['32bit', '32Bit']\r\n    ];\r\n\r\n    setMounted(true);\r\n    const onQueryPoolSuccess = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var poolOptions = [];\r\n      dataList.forEach(({name}) =>{\r\n        poolOptions.push({\r\n          label: name,\r\n          value: name,\r\n        });\r\n      })\r\n      var tagOptions = [];\r\n      imageTags.forEach(tag =>{\r\n        tagOptions.push({\r\n          label: tag[1],\r\n          value: tag[0],\r\n        });\r\n      });\r\n      setOptions({\r\n          tags: tagOptions,\r\n          pools: poolOptions,\r\n          guests: [],\r\n        });\r\n      setRequest(previous =>({\r\n        ...previous,\r\n        pool: '',\r\n        guest: '',\r\n      }));\r\n      setInitialed(true);\r\n    }\r\n\r\n    getAllComputePools(onQueryPoolSuccess, onBuildFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, onBuildFail]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else if(creating){\r\n    content = (\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <LinearProgress variant=\"determinate\" value={progress} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography align=\"center\">\r\n            {progress.toFixed(2) + '%'}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        value: request.name,\r\n        onChange: handleRequestPropsChanged('name'),\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n      },\r\n      {\r\n        type: \"textarea\",\r\n        label: texts.description,\r\n        value: request.description,\r\n        onChange: handleRequestPropsChanged('description'),\r\n        required: true,\r\n        oneRow: true,\r\n        rows: 4,\r\n        xs: 12,\r\n      },\r\n      {\r\n        type: \"checkbox\",\r\n        label: texts.tags,\r\n        onChange: handleTagsChanged,\r\n        value: request.tags,\r\n        options: options.tags,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.pool,\r\n        onChange: handlePoolChanged,\r\n        value: request.pool,\r\n        options: options.pools,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n        sm: 8,\r\n        md: 6,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.guest,\r\n        onChange: handleRequestPropsChanged('guest'),\r\n        value: request.guest,\r\n        options: options.guests,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n        sm: 8,\r\n        md: 6,\r\n      },\r\n    ];\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt} hideBackdrop\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { syncDiskImages } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Sync Local Disk Images',\r\n    content: 'Are you sure to synchronize local disk images',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '同步本地磁盘镜像',\r\n    content: '是否同步本地磁盘镜像文件',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function SyncDialog(props){\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const content = texts.content;\r\n  const onSyncFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onSyncSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess();\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    syncDiskImages(onSyncSuccess, onSyncFail);\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport DeleteDialog from \"views/DiskImages/DeleteDialog.js\";\r\nimport UploadDialog from \"views/DiskImages/UploadDialog.js\";\r\nimport ModifyDialog from \"views/DiskImages/ModifyDialog.js\";\r\nimport BuildDialog from \"views/DiskImages/BuildDialog.js\";\r\nimport SyncDialog from \"views/DiskImages/SyncDialog.js\";\r\nimport { bytesToString } from 'utils.js';\r\nimport { searchDiskImages,getDiskImageURL, writeLog } from \"nano_api.js\";\r\n// import { getDiskImageURL } from \"nano_api.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    modify: 'Modify Info',\r\n    delete: 'Delete Image',\r\n    download: \"Download Image\",\r\n    createTime: 'Created Time',\r\n    modifyTime: 'Modified Time',\r\n    uploadButton: \"Upload New Disk Image\",\r\n    buildButton: \"Build New Disk Image\",\r\n    syncButton: \"Synchronize Local Images\",\r\n    noResource: \"No images available\",\r\n  },\r\n  'cn':{\r\n    modify: '修改镜像信息',\r\n    delete: '删除镜像',\r\n    download: \"下载镜像\",\r\n    createTime: '创建时间',\r\n    modifyTime: '修改时间',\r\n    uploadButton: \"上传新磁盘镜像\",\r\n    buildButton: \"构建新磁盘镜像\",\r\n    syncButton: \"同步本地镜像文件\",\r\n    noResource: \"没有磁盘镜像\",\r\n  }\r\n}\r\n\r\nfunction dataToNode(data, buttons, createLabel, modifyLabel){\r\n  const { name, size, tags, description, create_time, modify_time, id } = data;\r\n  const sizeLabel = bytesToString(size);\r\n  const operates = buttons.map((button, key) => (\r\n    React.createElement(IconButton, {\r\n      ...button,\r\n      key: key,\r\n    })\r\n  ));\r\n  return (\r\n    <Card>\r\n      <CardHeader color=\"primary\">\r\n        <h4>{name}</h4>\r\n        <span>{id}</span>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Box m={1}>{sizeLabel}</Box>\r\n          {\r\n            tags?tags.map(tag => <Box m={0} p={1} key={tag}><Chip label={tag}/></Box>):<Box/>\r\n          }\r\n        </Box>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Typography variant='body1' component='p' noWrap>\r\n          {description}\r\n        </Typography>\r\n        <p>\r\n          {createLabel + ': ' + create_time}\r\n        </p>\r\n        <p>\r\n          {modifyLabel + ': ' + modify_time}\r\n        </p>\r\n        {operates}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default function DiskImages(props){\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ dataList, setDataList ] = React.useState(null);\r\n    const [ uploadDialogVisible, setUploadDialogVisible ] = React.useState(false);\r\n    const [ buildDialogVisible, setBuildDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ syncDialogVisible, setSyncDialogVisible ] = React.useState(false);\r\n    const [ selected, setSelected ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const reloadAllData = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const onLoadFail = err =>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        showErrorMessage(err);\r\n      }\r\n      const onLoadSuccess = payload => {\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        if (!payload){\r\n          setDataList([]);\r\n        }else{\r\n          setDataList(payload);\r\n        }\r\n      }\r\n      searchDiskImages(onLoadSuccess, onLoadFail);\r\n    }, [showErrorMessage, mounted]);\r\n\r\n    //detail\r\n    const showModifyDialog = (imageID) =>{\r\n      setModifyDialogVisible(true);\r\n      setSelected(imageID);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = (imageID) =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('image '+ imageID + ' modified');\r\n      reloadAllData();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = (imageID) =>{\r\n      setDeleteDialogVisible(true);\r\n      setSelected(imageID);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (imageID) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('image '+ imageID + ' deleted');\r\n      reloadAllData();\r\n    };\r\n\r\n    //upload\r\n    const showUploadDialog = () =>{\r\n      setUploadDialogVisible(true);\r\n    };\r\n\r\n    const closeUploadDialog = () =>{\r\n      setUploadDialogVisible(false);\r\n    }\r\n\r\n    const onUploadSuccess = (id) =>{\r\n      closeUploadDialog();\r\n      showNotifyMessage('new image ' + id + ' uploaded');\r\n      reloadAllData();\r\n    };\r\n\r\n    //build\r\n    const showBuildDialog = () =>{\r\n      setBuildDialogVisible(true);\r\n    };\r\n\r\n    const closeBuildDialog = () =>{\r\n      setBuildDialogVisible(false);\r\n    }\r\n\r\n    const onBuildSuccess = (id) =>{\r\n      closeBuildDialog();\r\n      showNotifyMessage('new image ' + id + ' built');\r\n      reloadAllData();\r\n    };\r\n\r\n    //sync\r\n    const showSyncDialog = () =>{\r\n      setSyncDialogVisible(true);\r\n    }\r\n\r\n    const closeSyncDialog = () =>{\r\n      setSyncDialogVisible(false);\r\n    }\r\n\r\n    const onSyncSuccess = () =>{\r\n      closeSyncDialog();\r\n      showNotifyMessage('all disk images synchronized');\r\n      reloadAllData();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadAllData();\r\n      const updateInterval = 5 * 1000;\r\n      var timerID = setInterval(()=>{\r\n        reloadAllData();\r\n      }, updateInterval);\r\n      return () =>{\r\n        setMounted(false);\r\n        clearInterval(timerID);\r\n      }\r\n    }, [reloadAllData]);\r\n\r\n    //begin rendering\r\n    let content;\r\n    if (null === dataList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === dataList.length){\r\n      content = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noResource}</Info></Box>;\r\n    }else{\r\n      content = (\r\n        <GridContainer>\r\n        {\r\n          dataList.map((image, key) =>{\r\n            const buttons = [\r\n              {\r\n                label: texts.modify,\r\n                icon: SettingsIcon,\r\n                onClick: () => showModifyDialog(image.id),\r\n              },\r\n              {\r\n                label: texts.download,\r\n                icon: GetAppIcon,\r\n                onClick: () =>{\r\n                  var downloadURL = getDiskImageURL(image.id);\r\n                  window.location.href = downloadURL;\r\n                },\r\n              },\r\n              {\r\n                label: texts.delete,\r\n                icon: DeleteIcon,\r\n                onClick: () => showDeleteDialog(image.id),\r\n              },\r\n\r\n            ];\r\n            var node = dataToNode(image, buttons, texts.createTime, texts.modifyTime);\r\n            return (\r\n              <GridItem xs={12} sm={6} md={4} key={key}>\r\n                {node}\r\n              </GridItem>\r\n            )\r\n          })\r\n        }\r\n        </GridContainer>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={6} md={4}>\r\n              <Box display=\"flex\">\r\n                <Box p={1}>\r\n                  <Button size=\"sm\" color=\"info\" round onClick={showUploadDialog}><PublishIcon />{texts.uploadButton}</Button>\r\n                </Box>\r\n                <Box p={1}>\r\n                  <Button size=\"sm\" color=\"info\" round onClick={showBuildDialog}><BuildIcon />{texts.buildButton}</Button>\r\n                </Box>\r\n                <Box p={1}>\r\n                  <Button size=\"sm\" color=\"info\" round onClick={showSyncDialog}><CachedIcon />{texts.syncButton}</Button>\r\n                </Box>\r\n              </Box>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          {content}\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <UploadDialog\r\n            lang={lang}\r\n            open={uploadDialogVisible}\r\n            onSuccess={onUploadSuccess}\r\n            onCancel={closeUploadDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BuildDialog\r\n            lang={lang}\r\n            open={buildDialogVisible}\r\n            onSuccess={onBuildSuccess}\r\n            onCancel={closeBuildDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDialog\r\n            lang={lang}\r\n            imageID={selected}\r\n            open={modifyDialogVisible}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            imageID={selected}\r\n            open={deleteDialogVisible}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <SyncDialog\r\n            lang={lang}\r\n            open={syncDialogVisible}\r\n            onSuccess={onSyncSuccess}\r\n            onCancel={closeSyncDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { deleteSystemTemplate } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete System Template',\r\n    content: 'Are you sure to delete template ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除系统模板',\r\n    content: '是否删除系统模板 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteDialog(props){\r\n  const { lang, templateID, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onDeleteFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = id =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(templateID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    deleteSystemTemplate(templateID, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const content = texts.content + templateID;\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { createSystemTemplate } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create System Template',\r\n    name: \"Name\",\r\n    admin: \"Admin Name\",\r\n    operatingSystem: \"Operating System\",\r\n    disk: \"Disk Driver\",\r\n    network: \"Network Interface Model\",\r\n    display: \"Display Driver\",\r\n    control: \"Remote Control Protocol\",\r\n    usb: \"USB Model\",\r\n    tablet: \"Tablet Mode\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建系统模板',\r\n    name: \"模板名\",\r\n    admin: \"管理员名称\",\r\n    operatingSystem: \"操作系统\",\r\n    disk: \"磁盘驱动\",\r\n    network: \"网卡型号\",\r\n    display: \"显卡类型\",\r\n    control: \"远程管理协议\",\r\n    usb: \"USB接口\",\r\n    tablet: \"触摸屏接口\",\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nconst osOptions = [\r\n  \"linux\",\r\n  \"windows\",\r\n];\r\n\r\nconst diskOptions = [\r\n  \"scsi\",\r\n  \"sata\",\r\n  \"ide\",\r\n];\r\n\r\nconst networkOptions = [\r\n  \"virtio\",\r\n  \"e1000\",\r\n  \"rtl8139\",\r\n];\r\n\r\nconst displayOptions = [\r\n  \"vga\",\r\n  \"cirrus\",\r\n];\r\n\r\nconst controlOptions = [\r\n  \"vnc\",\r\n  \"spice\",\r\n];\r\n\r\nconst usbOptions = [\r\n  \"\",\r\n  \"nec-xhci\",\r\n];\r\n\r\nconst tabletOptions = [\r\n  \"\",\r\n  \"usb\",\r\n];\r\n\r\nexport default function CreateDialog(props){\r\n  const defaultValues = {\r\n    name: \"\",\r\n    admin: \"\",\r\n    operating_system: \"\",\r\n    disk: \"\",\r\n    network: \"\",\r\n    display: \"\",\r\n    control: \"\",\r\n    usb: \"\",\r\n    tablet: \"\",\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onCreateFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = poolName =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    if(!request.name){\r\n      onCreateFail('must specify template name');\r\n      return;\r\n    }\r\n    if(!request.admin){\r\n      onCreateFail('must specify admin name');\r\n      return;\r\n    }\r\n\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    const { name, admin, operating_system, disk, network, display, control,\r\n      usb, tablet } = request;\r\n\r\n    createSystemTemplate(name, admin, operating_system, disk, network, display, control,\r\n      usb, tablet, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const onPropertyChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const listToOptions = list => {\r\n    return list.map(value => {\r\n      return {\r\n        value: value,\r\n        label: value? value: \"none\",\r\n      };\r\n    })\r\n  }\r\n\r\n  //begin render\r\n  const inputs = [\r\n    {\r\n      type: \"text\",\r\n      label: texts.name,\r\n      onChange: onPropertyChanged('name'),\r\n      value: request.name,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 10,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.admin,\r\n      onChange: onPropertyChanged('admin'),\r\n      value: request.admin,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 8,\r\n      sm: 6,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      label: texts.operatingSystem,\r\n      onChange: onPropertyChanged('operating_system'),\r\n      value: request.operating_system,\r\n      required: true,\r\n      oneRow: true,\r\n      options: listToOptions(osOptions),\r\n      xs: 12,\r\n      sm: 5,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      label: texts.disk,\r\n      onChange: onPropertyChanged('disk'),\r\n      value: request.disk,\r\n      required: true,\r\n      oneRow: true,\r\n      options: listToOptions(diskOptions),\r\n      xs: 6,\r\n      sm: 4,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      label: texts.network,\r\n      onChange: onPropertyChanged('network'),\r\n      value: request.network,\r\n      required: true,\r\n      oneRow: true,\r\n      options: listToOptions(networkOptions),\r\n      xs: 12,\r\n      sm: 5,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      label: texts.display,\r\n      onChange: onPropertyChanged('display'),\r\n      value: request.display,\r\n      required: true,\r\n      oneRow: true,\r\n      options: listToOptions(displayOptions),\r\n      xs: 6,\r\n      sm: 4,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      label: texts.control,\r\n      onChange: onPropertyChanged('control'),\r\n      value: request.control,\r\n      required: true,\r\n      oneRow: true,\r\n      options: listToOptions(controlOptions),\r\n      xs: 6,\r\n      sm: 4,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      label: texts.usb,\r\n      onChange: onPropertyChanged('usb'),\r\n      value: request.usb,\r\n      required: true,\r\n      oneRow: true,\r\n      options: listToOptions(usbOptions),\r\n      xs: 8,\r\n      sm: 4,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      label: texts.tablet,\r\n      onChange: onPropertyChanged('tablet'),\r\n      value: request.tablet,\r\n      required: true,\r\n      oneRow: true,\r\n      options: listToOptions(tabletOptions),\r\n      xs: 8,\r\n      sm: 4,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifySystemTemplate, getSystemTemplate } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify System Template',\r\n    name: \"Name\",\r\n    admin: \"Admin Name\",\r\n    operatingSystem: \"Operating System\",\r\n    disk: \"Disk Driver\",\r\n    network: \"Network Interface Model\",\r\n    display: \"Display Driver\",\r\n    control: \"Remote Control Protocol\",\r\n    usb: \"USB Model\",\r\n    tablet: \"Tablet Mode\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改系统模板',\r\n    name: \"模板名\",\r\n    admin: \"管理员名称\",\r\n    operatingSystem: \"操作系统\",\r\n    disk: \"磁盘驱动\",\r\n    network: \"网卡型号\",\r\n    display: \"显卡类型\",\r\n    control: \"远程管理协议\",\r\n    usb: \"USB接口\",\r\n    tablet: \"触摸屏接口\",\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\n\r\nconst osOptions = [\r\n  \"linux\",\r\n  \"windows\",\r\n];\r\n\r\nconst diskOptions = [\r\n  \"scsi\",\r\n  \"sata\",\r\n  \"ide\",\r\n];\r\n\r\nconst networkOptions = [\r\n  \"virtio\",\r\n  \"e1000\",\r\n  \"rtl8139\",\r\n];\r\n\r\nconst displayOptions = [\r\n  \"vga\",\r\n  \"cirrus\",\r\n];\r\n\r\nconst controlOptions = [\r\n  \"vnc\",\r\n  \"spice\",\r\n];\r\n\r\nconst usbOptions = [\r\n  \"\",\r\n  \"nec-xhci\",\r\n];\r\n\r\nconst tabletOptions = [\r\n  \"\",\r\n  \"usb\",\r\n];\r\n\r\nexport default function ModifyDialog(props){\r\n  const defaultValues = {\r\n    name: \"\",\r\n    admin: \"\",\r\n    operating_system: \"\",\r\n    disk: \"\",\r\n    network: \"\",\r\n    display: \"\",\r\n    control: \"\",\r\n    usb: \"\",\r\n    tablet: \"\",\r\n  };\r\n  const { lang, templateID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = poolName =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(poolName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    if(!request.name){\r\n      onModifyFail('must specify template name');\r\n      return;\r\n    }\r\n    if(!request.admin){\r\n      onModifyFail('must specify admin name');\r\n      return;\r\n    }\r\n\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    const { name, admin, operating_system, disk, network, display, control,\r\n      usb, tablet } = request;\r\n\r\n    modifySystemTemplate(templateID, name, admin, operating_system, disk, network, display, control,\r\n      usb, tablet, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const onPropertyChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const listToOptions = list => {\r\n    return list.map(value => {\r\n      return {\r\n        value: value,\r\n        label: value? value: \"none\",\r\n      };\r\n    })\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (!templateID || !open ){\r\n      return;\r\n    }\r\n\r\n    setMounted(true);\r\n    const onGetPayloadSuccess = payload =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setRequest(payload)\r\n      setInitialed(true);\r\n    };\r\n\r\n    getSystemTemplate(templateID, onGetPayloadSuccess, onModifyFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, templateID, onModifyFail]);\r\n\r\n  //begin render\r\n\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        onChange: onPropertyChanged('name'),\r\n        value: request.name,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.admin,\r\n        onChange: onPropertyChanged('admin'),\r\n        value: request.admin,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n        sm: 6,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.operatingSystem,\r\n        onChange: onPropertyChanged('operating_system'),\r\n        value: request.operating_system,\r\n        required: true,\r\n        oneRow: true,\r\n        options: listToOptions(osOptions),\r\n        xs: 12,\r\n        sm: 5,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.disk,\r\n        onChange: onPropertyChanged('disk'),\r\n        value: request.disk,\r\n        required: true,\r\n        oneRow: true,\r\n        options: listToOptions(diskOptions),\r\n        xs: 6,\r\n        sm: 4,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.network,\r\n        onChange: onPropertyChanged('network'),\r\n        value: request.network,\r\n        required: true,\r\n        oneRow: true,\r\n        options: listToOptions(networkOptions),\r\n        xs: 12,\r\n        sm: 5,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.display,\r\n        onChange: onPropertyChanged('display'),\r\n        value: request.display,\r\n        required: true,\r\n        oneRow: true,\r\n        options: listToOptions(displayOptions),\r\n        xs: 6,\r\n        sm: 4,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.control,\r\n        onChange: onPropertyChanged('control'),\r\n        value: request.control,\r\n        required: true,\r\n        oneRow: true,\r\n        options: listToOptions(controlOptions),\r\n        xs: 6,\r\n        sm: 4,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.usb,\r\n        onChange: onPropertyChanged('usb'),\r\n        value: request.usb,\r\n        required: true,\r\n        oneRow: true,\r\n        options: listToOptions(usbOptions),\r\n        xs: 8,\r\n        sm: 4,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.tablet,\r\n        onChange: onPropertyChanged('tablet'),\r\n        value: request.tablet,\r\n        required: true,\r\n        oneRow: true,\r\n        options: listToOptions(tabletOptions),\r\n        xs: 8,\r\n        sm: 4,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n      title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Table from \"components/Table/ObjectTable.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport DeleteDialog from \"views/SystemTemplates/DeleteDialog.js\";\r\nimport CreateDialog from \"views/SystemTemplates/CreateDialog.js\";\r\nimport ModifyDialog from \"views/SystemTemplates/ModifyDialog.js\";\r\nimport { querySystemTemplates, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create System Template\",\r\n    tableTitle: \"System Templates\",\r\n    name: \"Name\",\r\n    os: \"Operating System\",\r\n    createdTime: \"Created Time\",\r\n    modifiedTime: \"Last Modified\",\r\n    operates: \"Operates\",\r\n    noResource: \"No system templates available\",\r\n    detail: \"Detail\",\r\n    delete: 'Delete',\r\n  },\r\n  'cn':{\r\n    createButton: \"创建新模板\",\r\n    tableTitle: \"系统模板\",\r\n    name: \"名称\",\r\n    os: \"操作系统\",\r\n    createdTime: \"创建时间\",\r\n    modifiedTime: \"最后修改\",\r\n    operates: \"操作\",\r\n    noResource: \"没有系统模板\",\r\n    detail: \"详情\",\r\n    delete: '删除',\r\n  }\r\n}\r\n\r\nfunction dataToNodes(data, buttons){\r\n  const operates = buttons.map((button, key) => (\r\n    <IconButton label={button.label} icon={button.icon} onClick={button.onClick} key={key}/>\r\n  ))\r\n  const { id, name, operating_system, created_time, modified_time } = data;\r\n  return [ id, name, operating_system, created_time, modified_time, operates];\r\n}\r\n\r\nexport default function SystemTemplates(props){\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const classes = useStyles();\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ dataList, setDataList ] = React.useState(null);\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ selected, setSelected ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const reloadAllData = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      querySystemTemplates(setDataList, showErrorMessage);\r\n    }, [showErrorMessage, mounted]);\r\n\r\n    const showNotifyMessage = msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //modify\r\n    const showModifyDialog = (poolName) =>{\r\n      setModifyDialogVisible(true);\r\n      setSelected(poolName);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = templateID =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('template ' + templateID + ' modified');\r\n      reloadAllData();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = templateID =>{\r\n      setDeleteDialogVisible(true);\r\n      setSelected(templateID);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = templateID =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('template ' + templateID + ' deleted');\r\n      reloadAllData();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = templateID =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('new template ' + templateID + ' created');\r\n      reloadAllData();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadAllData();\r\n      return () =>{\r\n        setMounted(false);\r\n      }\r\n    }, [reloadAllData]);\r\n\r\n    //begin rendering\r\n    let content;\r\n    if (null === dataList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === dataList.length){\r\n      content = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noResource}</Info></Box>;\r\n    }else{\r\n      var rows = [];\r\n      dataList.forEach( data => {\r\n        const buttons = [\r\n          {\r\n            onClick: e => showModifyDialog(data.id),\r\n            icon: SettingsIcon,\r\n            label: texts.detail,\r\n          },\r\n          {\r\n            onClick: e => showDeleteDialog(data.id),\r\n            icon: DeleteIcon,\r\n            label: texts.delete,\r\n          },\r\n        ];\r\n        rows.push(dataToNodes(data, buttons));\r\n      });\r\n      content = (\r\n        <Table\r\n          color=\"primary\"\r\n          headers={[\"ID\", texts.name, texts.os, texts.createdTime, texts.modifiedTime, texts.operates]}\r\n          rows={rows}/>\r\n      );\r\n\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={3} sm={3} md={3}>\r\n              <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><AddIcon />{texts.createButton}</Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <Snackbar\r\n          place=\"tr\"\r\n          color={notifyColor}\r\n          message={notifyMessage}\r\n          open={\"\" !== notifyMessage}\r\n          closeNotification={closeNotify}\r\n          close\r\n        />\r\n        <CreateDialog\r\n          lang={lang}\r\n          open={createDialogVisible}\r\n          onSuccess={onCreateSuccess}\r\n          onCancel={closeCreateDialog}\r\n          />\r\n        <ModifyDialog\r\n          lang={lang}\r\n          open={modifyDialogVisible}\r\n          templateID={selected}\r\n          onSuccess={onModifySuccess}\r\n          onCancel={closeModifyDialog}\r\n          />\r\n        <DeleteDialog\r\n          lang={lang}\r\n          open={deleteDialogVisible}\r\n          templateID={selected}\r\n          onSuccess={onDeleteSuccess}\r\n          onCancel={closeDeleteDialog}\r\n          />\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// core components\r\nimport styles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function OperableTable(props){\r\n  const classes = useStyles();\r\n  const { color, headers, rows } = props;\r\n  return (\r\n    <div className={classes.tableResponsive}>\r\n      <Table className={classes.table}>\r\n        <TableHead className={classes[color + \"TableHeader\"]}>\r\n          <TableRow className={classes.tableHeadRow}>\r\n            {headers.map((prop, key) => {\r\n              return (\r\n                <TableCell\r\n                  className={classes.tableCell + \" \" + classes.tableHeadCell}\r\n                  key={key}\r\n                >\r\n                  {prop}\r\n                </TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nOperableTable.defaultProps = {\r\n  color: \"gray\"\r\n};\r\n\r\nOperableTable.propTypes = {\r\n  color: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"primary\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"info\",\r\n    \"rose\",\r\n    \"gray\"\r\n  ]),\r\n  headers: PropTypes.arrayOf(PropTypes.node),\r\n  rows: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Box from '@material-ui/core/Box';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport SecurityIcon from '@material-ui/icons/Security';\r\n\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport PowerIcon from '@material-ui/icons/Power';\r\nimport RotateRightIcon from '@material-ui/icons/RotateRight';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\nimport AlbumIcon from '@material-ui/icons/Album';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport LocalShippingRoundedIcon from '@material-ui/icons/LocalShippingRounded';\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\nimport { startInstance, stopInstance, forceStopInstance,\r\n  restartInstance, resetInstance, ejectMedia } from \"nano_api\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    running: 'Running',\r\n    stopped: 'Stopped',\r\n    start: 'Start Instance',\r\n    startWithMedia: 'Start Instance With Media',\r\n    snapshot: 'Snapshot',\r\n    createImage: 'Create Disk Image',\r\n    resetSystem: 'Reset System',\r\n    delete: 'Delete Instance',\r\n    migrate: 'Migrate Instance',\r\n    monitor: 'Monitor Resource Usage',\r\n    detail: 'Instance Detail',\r\n    security: 'Security Policies',\r\n    remoteControl: 'Remote Control',\r\n    stop: 'Stop Instance',\r\n    forceStop: 'Force Stop Instance',\r\n    reboot: 'Reboot Instance',\r\n    reset: 'Reset Instance',\r\n    insertMedia: 'Insert Media',\r\n    ejectMedia: 'Eject Media',\r\n    autoStartup: 'Auto Startup',\r\n    mediaAttached: 'Media Attached',\r\n  },\r\n  'cn':{\r\n    running: '运行中',\r\n    stopped: '已停止',\r\n    start: '启动云主机',\r\n    startWithMedia: '从光盘镜像启动云主机',\r\n    snapshot: '快照',\r\n    createImage: '创建磁盘镜像',\r\n    resetSystem: '重置系统',\r\n    delete: '删除云主机',\r\n    migrate: '迁移云主机',\r\n    monitor: '监控资源用量',\r\n    detail: '实例详情',\r\n    security: '安全策略',\r\n    remoteControl: '远程监控',\r\n    stop: '停止云主机',\r\n    forceStop: '强制终止云主机',\r\n    reboot: '重启云主机',\r\n    reset: '强制重启云主机',\r\n    insertMedia: '插入光盘镜像',\r\n    ejectMedia: '弹出光盘镜像',\r\n    autoStartup: '开机启动',\r\n    mediaAttached: '媒体已加载',\r\n  },\r\n};\r\n\r\nexport default function InstanceRow(props){\r\n  const tableClasses = makeStyles(tableStyles)();\r\n  const fontClasses = makeStyles(fontStyles)();\r\n  const { lang, instance, onNotify, onError, onDelete,\r\n    onStatusChange, onMediaStart, onInsertMedia, onResetSystem,\r\n    onBuildImage, onMigrateInstance,\r\n    checked, checkable, onCheckStatusChanged} = props;\r\n  const texts = i18n[lang];\r\n  const onStartInstance = (id) =>{\r\n    const onSuccess = (id) =>{\r\n      onNotify('instance ' + id + ' started');\r\n      onStatusChange();\r\n    }\r\n    const onFail = (msg) =>{\r\n      onError('start instance ' + id + ' fail: ' + msg);\r\n    }\r\n    startInstance(id, onSuccess, onFail);\r\n  }\r\n\r\n  const onStopInstance = (id) =>{\r\n    const onSuccess = (id) =>{\r\n      onNotify('instance ' + id + ' stopped');\r\n      onStatusChange();\r\n    }\r\n    const onFail = (msg) =>{\r\n      onError('stop instance ' + id + ' fail: ' + msg);\r\n    }\r\n    stopInstance(id, onSuccess, onFail);\r\n  }\r\n\r\n  const onForceStopInstance = (id) =>{\r\n    const onSuccess = (id) =>{\r\n      onNotify('instance ' + id + ' force stopped');\r\n      onStatusChange();\r\n    }\r\n    const onFail = (msg) =>{\r\n      onError('force stop instance ' + id + ' fail: ' + msg);\r\n    }\r\n    forceStopInstance(id, onSuccess, onFail);\r\n  }\r\n\r\n  const onRebootInstance = (id) =>{\r\n    const onSuccess = (id) =>{\r\n      onNotify('instance ' + id + ' reboot');\r\n      onStatusChange();\r\n    }\r\n    const onFail = (msg) =>{\r\n      onError('reboot instance ' + id + ' fail: ' + msg);\r\n    }\r\n    restartInstance(id, onSuccess, onFail);\r\n  }\r\n\r\n  const onResetInstance = (id) =>{\r\n    const onSuccess = (id) =>{\r\n      onNotify('instance ' + id + ' reset');\r\n      onStatusChange();\r\n    }\r\n    const onFail = (msg) =>{\r\n      onError('reset instance ' + id + ' fail: ' + msg);\r\n    }\r\n   resetInstance(id, onSuccess, onFail);\r\n  }\r\n\r\n  const onEjectMedia = (id) =>{\r\n    const onSuccess = (id) =>{\r\n      onNotify('media ejected from instance ' + id);\r\n      onStatusChange();\r\n    }\r\n    const onFail = (msg) =>{\r\n      onError('eject media from instance ' + id + ' fail: ' + msg);\r\n    }\r\n   ejectMedia(id, onSuccess, onFail);\r\n  }\r\n\r\n  const handleMigrateInstance = (id) => {\r\n    onMigrateInstance(id, instance.pool, instance.cell);\r\n  }\r\n\r\n  const handleCheckChanged = e => {\r\n    const isChecked = e.target.checked;\r\n    onCheckStatusChanged(isChecked, instance.id);\r\n  }\r\n\r\n  const startOperator = {\r\n    tips: texts.start,\r\n    icon: PlayArrowIcon,\r\n    handler: onStartInstance,\r\n  };\r\n  const startWithMediaOperator = {\r\n    tips: texts.startWithMedia,\r\n    icon: PlayCircleOutlineIcon,\r\n    handler: onMediaStart,\r\n  };\r\n  const snapshotOperator = {\r\n    tips: texts.snapshot,\r\n    icon: CameraAltIcon,\r\n    href: '/admin/instances/snapshots/' + instance.id,\r\n  };\r\n  const createImageOperator = {\r\n    tips: texts.createImage,\r\n    icon: BackupIcon,\r\n    handler: onBuildImage,\r\n  };\r\n  const resetSystemOperator = {\r\n    tips: texts.resetSystem,\r\n    icon: ReplayIcon,\r\n    handler: onResetSystem,\r\n  };\r\n\r\n  const deleteOperator = {\r\n    tips: texts.delete,\r\n    icon: DeleteIcon,\r\n    handler: onDelete,\r\n  };\r\n  const migrateOperator = {\r\n    tips: texts.migrate,\r\n    icon: LocalShippingRoundedIcon,\r\n    handler: handleMigrateInstance,\r\n  };\r\n\r\n  const monitorOperator = {\r\n    tips: texts.monitor,\r\n    icon: ShowChartIcon,\r\n    href: '/admin/instances/status/' + instance.id,\r\n    target: '_blank',\r\n  };\r\n\r\n  const detailOperator = {\r\n    tips: texts.detail,\r\n    icon: SettingsIcon,\r\n    href: '/admin/instances/details/' + instance.id,\r\n    target: '_blank',\r\n  };\r\n  const securityOperator = {\r\n    tips: texts.security,\r\n    icon: SecurityIcon,\r\n    href: '/admin/instances/policies/' + instance.id,\r\n  };\r\n\r\n\r\n  //for running instance\r\n  const controllOperator = {\r\n    tips: texts.remoteControl,\r\n    icon: DesktopWindowsIcon,\r\n    href: '/monitor/' + instance.id,\r\n    target: '_blank',\r\n  };\r\n  const stopOperator = {\r\n    tips: texts.stop,\r\n    icon: PowerSettingsNewIcon,\r\n    handler: onStopInstance,\r\n  };\r\n  const forceStopOperator = {\r\n    tips: texts.forceStop,\r\n    icon: PowerIcon,\r\n    handler: onForceStopInstance,\r\n  };\r\n  const rebootOperator = {\r\n    tips: texts.reboot,\r\n    icon: RotateRightIcon,\r\n    handler: onRebootInstance,\r\n  };\r\n  const resetOperator = {\r\n    tips: texts.reset,\r\n    icon: RefreshIcon,\r\n    handler: onResetInstance,\r\n  };\r\n  const insertMediaOperator = {\r\n    tips: texts.insertMedia,\r\n    icon: ArrowDropDownIcon,\r\n    handler: onInsertMedia,\r\n  };\r\n  const ejectMediaOperator = {\r\n    tips: texts.ejectMedia,\r\n    icon: ArrowDropUpIcon,\r\n    handler: onEjectMedia,\r\n  };\r\n\r\n  let statusIcon;\r\n  var operators = [];\r\n  if (instance.running){\r\n    const runningIcon = (\r\n      <Tooltip\r\n        title={texts.running}\r\n        placement=\"top\"\r\n        key={texts.running}\r\n        >\r\n        <PlayArrowIcon className={fontClasses.successText}/>\r\n      </Tooltip>\r\n    );\r\n    statusIcon = [runningIcon];\r\n    operators = [ controllOperator, stopOperator, forceStopOperator,\r\n      rebootOperator, resetOperator];\r\n    if (instance.auto_start){\r\n      statusIcon.push((\r\n        <Tooltip\r\n          title={texts.autoStartup}\r\n          placement=\"top\"\r\n          key={texts.autoStartup}\r\n          >\r\n          <AllInclusiveIcon className={fontClasses.infoText}/>\r\n        </Tooltip>\r\n      ));\r\n    }\r\n    if (instance.media_attached){\r\n      statusIcon.push((\r\n        <Tooltip\r\n          title={texts.mediaAttached}\r\n          placement=\"top\"\r\n          key={texts.mediaAttached}\r\n          >\r\n          <AlbumIcon className={fontClasses.infoText}/>\r\n        </Tooltip>\r\n      ));\r\n      operators.push(ejectMediaOperator);\r\n    }else{\r\n      operators.push(insertMediaOperator);\r\n    }\r\n    operators = operators.concat([monitorOperator, detailOperator, securityOperator]);\r\n  }else{\r\n    const stoppedIcon = (\r\n      <Tooltip\r\n        title={texts.stopped}\r\n        placement=\"top\"\r\n        key={texts.stopped}\r\n        >\r\n        <StopIcon className={fontClasses.dangerText}/>\r\n      </Tooltip>\r\n    );\r\n    statusIcon = [stoppedIcon];\r\n    if (instance.auto_start){\r\n      statusIcon.push((\r\n        <Tooltip\r\n          title={texts.autoStartup}\r\n          placement=\"top\"\r\n          key={texts.autoStartup}\r\n          >\r\n          <AllInclusiveIcon className={fontClasses.infoText}/>\r\n        </Tooltip>\r\n      ));\r\n    }\r\n    operators = [startOperator, startWithMediaOperator, snapshotOperator,\r\n      createImageOperator, resetSystemOperator, deleteOperator,\r\n      migrateOperator, monitorOperator, detailOperator, securityOperator];\r\n  }\r\n  var addressLabel = '';\r\n  if (instance.internal && instance.internal.network_address){\r\n    addressLabel = instance.internal.network_address;\r\n  }\r\n  if (instance.external && instance.external.network_address){\r\n    addressLabel += '/' + instance.external.network_address;\r\n  }\r\n  const GiB = 1 << 30;\r\n  const MiB = 1 << 20;\r\n  var memoryLabel;\r\n  if (instance.memory >= GiB ){\r\n    memoryLabel = (instance.memory / GiB) + ' GB';\r\n  }else{\r\n    memoryLabel = (instance.memory / MiB) + ' MB';\r\n  }\r\n\r\n  var disks = [];\r\n  instance.disks.forEach(size => {\r\n    disks.push((size / GiB).toFixed(2).toString());\r\n  });\r\n  var diskLabel = disks.join('/') + ' GB';\r\n\r\n  let rowHeader;\r\n  if(checkable){\r\n    rowHeader = (\r\n      <Box display='flex' alignItems=\"center\">\r\n        <Box>\r\n          <Checkbox\r\n            checked={checked}\r\n            onChange={ e => handleCheckChanged(e)}\r\n            value={instance.id}\r\n            />\r\n        </Box>\r\n        <Box>\r\n          {instance.name}\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }else{\r\n    rowHeader = instance.name;\r\n  }\r\n\r\n  return (\r\n    <TableRow className={tableClasses.tableBodyRow}>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {rowHeader}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {instance.host? instance.host: instance.cell}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {addressLabel}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {instance.cores}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {memoryLabel}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {diskLabel}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n        {statusIcon}\r\n      </TableCell>\r\n      <TableCell className={tableClasses.tableCell}>\r\n      {\r\n        operators.map((operator, key) => {\r\n          var icon = React.createElement(operator.icon);\r\n          let button;\r\n          if (operator.href){\r\n            button = (\r\n              <Link to={operator.href} target={operator.target}>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  >\r\n                  {icon}\r\n                </IconButton>\r\n              </Link>\r\n            );\r\n          }else{\r\n            button = (\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={()=>{\r\n                  if(null !== operator.handler){\r\n                    operator.handler(instance.id);\r\n                  }\r\n                }}\r\n                >\r\n                {icon}\r\n              </IconButton>\r\n            );\r\n          }\r\n          return (\r\n            <Tooltip\r\n              title={operator.tips}\r\n              placement=\"top\"\r\n              key={key}\r\n              >\r\n              {button}\r\n            </Tooltip>\r\n          )\r\n        })\r\n      }\r\n      </TableCell>\r\n    </TableRow>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { deleteInstance } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Instance',\r\n    content: 'Are you sure to delete instance ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除云主机',\r\n    content: '是否删除云主机 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteDialog(props){\r\n  const { lang, instanceID, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const content = texts.content + instanceID;\r\n  const onDeleteFail = (msg) =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    deleteInstance(instanceID, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default function SingleRow(props){\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Box m={1} p={0}>\r\n        <Grid container {...rest}>\r\n          {children}\r\n        </Grid>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nSingleRow.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { getAllComputePools, searchDiskImages, createInstance,\r\n  getInstanceConfig, querySystemTemplates, searchSecurityPolicyGroups } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create Instance',\r\n    name: 'Instance Name',\r\n    resourcePool: 'Resource Pool',\r\n    core: 'Core',\r\n    memory: 'Memory',\r\n    systemDisk: 'System Disk Size',\r\n    dataDisk: 'Data Disk Size',\r\n    autoStartup: 'Automatic Startup',\r\n    systemVersion: 'System Version',\r\n    sourceImage: 'Source Image',\r\n    blankSystem: 'Blank System',\r\n    qos: 'QoS Options (Optional)',\r\n    cpuPriority: 'CPU Priority',\r\n    iops: 'IOPS',\r\n    outbound: 'Outband Bandwidth',\r\n    inbound: 'Inbound Bandwidth',\r\n    noDataDisk: \"Don't use data disk\",\r\n    noLimit: 'No Limit',\r\n    cpuPriorityHigh: 'High',\r\n    cpuPriorityMedium: 'Medium',\r\n    cpuPriorityLow: 'Low',\r\n    modules: 'Pre-Installed Modules',\r\n    adminName: 'Admin Name',\r\n    adminPassword: 'Admin Password',\r\n    blankHelper: 'Leave blank to generate',\r\n    dataPath: 'Data Path',\r\n    off: 'Off',\r\n    on: 'On',\r\n    ciOptions: 'Cloud Init Options',\r\n    securityPolicy: 'Security Policy',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建云主机',\r\n    name: '云主机名称',\r\n    resourcePool: '计算资源池',\r\n    core: '核心数',\r\n    memory: '内存',\r\n    systemDisk: '系统磁盘容量',\r\n    dataDisk: '数据磁盘容量',\r\n    autoStartup: '自动启动',\r\n    systemVersion: '系统版本',\r\n    sourceImage: '来源镜像',\r\n    blankSystem: '空白系统',\r\n    qos: 'QoS选项 (可选)',\r\n    cpuPriority: 'CPU优先级',\r\n    iops: '磁盘读写限制',\r\n    outbound: '上行带宽',\r\n    inbound: '下行带宽',\r\n    noDataDisk: \"不使用数据磁盘\",\r\n    noLimit: '无限制',\r\n    cpuPriorityHigh: '高',\r\n    cpuPriorityMedium: '中',\r\n    cpuPriorityLow: '低',\r\n    modules: '预装模块',\r\n    adminName: '管理员账号',\r\n    adminPassword: '管理员密码',\r\n    blankHelper: '留空则自动生成新密码',\r\n    dataPath: '挂载数据路径',\r\n    off: '关闭',\r\n    on: '开启',\r\n    ciOptions: 'Cloud Init选项',\r\n    securityPolicy: '安全策略',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\n;\r\n\r\nexport default function CreateDialog(props){\r\n  const defaultOption = '__default';\r\n  const ciModuleName = 'cloud-init';\r\n  const checkInterval = 1000;\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n\r\n  const defaultValues = {\r\n    name: '',\r\n    pool: '',\r\n    cores: (1).toString(),\r\n    memory: (1 << 30).toString(), //1 G\r\n    system_disk: 5,\r\n    data_disk: 0,\r\n    auto_start: false,\r\n    system_template: '',\r\n    from_image: defaultOption,\r\n    security_policy: '',\r\n    modules: new Map(),\r\n    module_cloud_init_admin_name: 'root',\r\n    module_cloud_init_admin_password: '',\r\n    module_cloud_init_data_path: '/opt/data',\r\n    priority: 'medium',\r\n    iops: 0,\r\n    inbound: 0,\r\n    outbound: 0,\r\n  };\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ creating, setCreating ] = React.useState(false);\r\n  const [ progress, setProgress ] = React.useState(0);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    pools: [],\r\n    images: [],\r\n    versions: [],\r\n    policies: [],\r\n  });\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onCreateFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n    setCreating(false);\r\n    setProgress(0);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = result =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(result.id);\r\n  }\r\n\r\n  const onCreateAccept = instanceID =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setCreating(true);\r\n    setProgress(0);\r\n    setTimeout(() => {\r\n      checkCreatingProgress(instanceID)\r\n    }, checkInterval);\r\n  }\r\n\r\n  const checkCreatingProgress = instanceID =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    const onCreating = progress =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setProgress(progress);\r\n      setTimeout(() => {\r\n        checkCreatingProgress(instanceID)\r\n      }, checkInterval);\r\n    }\r\n    getInstanceConfig(instanceID, onCreateSuccess, onCreateFail, onCreating);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    if (!request.name){\r\n      onCreateFail('instance name required');\r\n      return;\r\n    }\r\n    if (!request.pool){\r\n      onCreateFail('must specify target pool');\r\n      return;\r\n    }\r\n    var cores = Number(request.cores);\r\n    if(Number.isNaN(cores)){\r\n      onCreateFail('invalid cores: ' + request.cores);\r\n      return;\r\n    }\r\n    var memory = Number(request.memory);\r\n    if(Number.isNaN(memory)){\r\n      onCreateFail('invalid memory: ' + request.memory);\r\n      return;\r\n    }\r\n    const GiB = 1 << 30;\r\n    var disks = [request.system_disk * GiB];\r\n    if (0 !== request.data_disk){\r\n      disks.push(request.data_disk * GiB);\r\n    }\r\n    var systemVersion = request.system_template;\r\n    let fromImage;\r\n    if (defaultOption === request.from_image){\r\n      fromImage = '';\r\n    }else{\r\n      fromImage = request.from_image;\r\n    }\r\n    var modules = [];\r\n    var ciEnabled = false;\r\n    request.modules.forEach( (checked, name) =>{\r\n      if(checked){\r\n        modules.push(name);\r\n        if (ciModuleName === name){\r\n          ciEnabled = true;\r\n        }\r\n      }\r\n    });\r\n    var cloudInit = null;\r\n    if(ciEnabled){\r\n      cloudInit = {\r\n        admin_name: request.module_cloud_init_admin_name,\r\n        admin_secret: request.module_cloud_init_admin_password,\r\n        data_path: request.module_cloud_init_data_path,\r\n      };\r\n    }\r\n    const Mbit = 1 << (20 - 3);\r\n    var qos = {\r\n      cpu_priority: request.priority,\r\n      write_iops: request.iops,\r\n      read_iops: request.iops,\r\n      receive_speed: request.inbound * Mbit,\r\n      send_speed: request.outbound * Mbit,\r\n    };\r\n    createInstance(request.name, request.pool, cores, memory, disks,\r\n      request.auto_start, fromImage, systemVersion, modules,\r\n      cloudInit, qos, request.security_policy, onCreateAccept,\r\n      onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSliderValueChanged = name => (e, value) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleCheckedValueChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleCheckedGroupChanged = (groupName, propertyName) => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var checked = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [groupName]: previous[groupName].set(propertyName, checked),\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    // var session = getLoggedSession();\r\n    // if (null === session){\r\n    //   onCreateFail('session expired');\r\n    //   return;\r\n    // }\r\n\r\n    var poolOptions = [];\r\n    var imageOptions = [{\r\n      label: texts.blankSystem,\r\n      value: defaultOption,\r\n    }];\r\n    var templateOptions = [];\r\n    var securityPolicies = [];\r\n\r\n    setMounted(true);\r\n    const onQueryPoliciesSuccess = datalist =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      datalist.forEach(({id, name}) =>{\r\n        securityPolicies.push({\r\n          label: name,\r\n          value: id,\r\n        });\r\n      });\r\n      setOptions({\r\n        pools: poolOptions,\r\n        images: imageOptions,\r\n        versions: templateOptions,\r\n        policies: securityPolicies,\r\n      });\r\n      setInitialed(true);\r\n    }\r\n    const onQueryTemplateSuccess = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      dataList.forEach(({id, name}) =>{\r\n        templateOptions.push({\r\n          label: name,\r\n          value: id,\r\n        });\r\n      });\r\n      searchSecurityPolicyGroups('', '', true, true,\r\n        onQueryPoliciesSuccess, onCreateFail);\r\n    }\r\n\r\n    const onQueryImageSuccess = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      dataList.forEach(({name, id})=>{\r\n        imageOptions.push({\r\n          label: name,\r\n          value: id,\r\n        });\r\n      })\r\n      querySystemTemplates(onQueryTemplateSuccess, onCreateFail);\r\n    };\r\n\r\n    const onQueryPoolSuccess = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      dataList.forEach(({name})=>{\r\n        poolOptions.push({\r\n          label: name,\r\n          value: name,\r\n        });\r\n      })\r\n\r\n      searchDiskImages(onQueryImageSuccess, onCreateFail);\r\n    };\r\n\r\n    getAllComputePools(onQueryPoolSuccess, onCreateFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, texts.blankSystem, onCreateFail]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else if (creating){\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <LinearProgress variant=\"determinate\" value={progress} />\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Typography align=\"center\">\r\n              {progress.toFixed(2) + '%'}\r\n            </Typography>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    )\r\n  }else{\r\n    const availableCores = [1, 2, 4, 8, 16];\r\n    var coresOptions = []\r\n    availableCores.forEach( core => {\r\n      coresOptions.push({\r\n        label: core.toString(),\r\n        value: core.toString(),\r\n      });\r\n    });\r\n\r\n\r\n    const memoryOptionsRates = [1, 2, 4, 8, 16, 32];\r\n    const memoryBase = 512;\r\n    const MiB = 1 << 20;\r\n    const GiB = 1 << 30;\r\n    var memoryOptions = [];\r\n    memoryOptionsRates.forEach(rate => {\r\n      var value = memoryBase * rate * MiB;\r\n      let name;\r\n      if (value >= GiB){\r\n        name = value / GiB + ' GB';\r\n      }else{\r\n        name = value / MiB + ' MB';\r\n      }\r\n      memoryOptions.push({\r\n        label: name,\r\n        value: value.toString(),\r\n      });\r\n    });\r\n    //system disk slider\r\n    let systemDiskSlider;\r\n    {\r\n      const minRange = 5;\r\n      const maxRange = 60;\r\n      const step = 1;\r\n      const markValues = [minRange, maxRange, 30];\r\n      var systemMarks = [];\r\n      markValues.forEach(value =>{\r\n        systemMarks.push({\r\n          value: value,\r\n          label: value + ' GB',\r\n        })\r\n      });\r\n      systemDiskSlider = {\r\n        type: 'slider',\r\n        label: texts.systemDisk,\r\n        onChange: handleSliderValueChanged('system_disk'),\r\n        value: request.system_disk,\r\n        oneRow: true,\r\n        maxStep: maxRange,\r\n        minStep: minRange,\r\n        step: step,\r\n        marks: systemMarks,\r\n        xs: 12,\r\n        sm: 6,\r\n        md: 4,\r\n      };\r\n    }\r\n    //disk slider\r\n    let dataDiskSlider;\r\n    {\r\n      const minRange = 0;\r\n      const maxRange = 20;\r\n      const step = 2;\r\n      var dataMarks = [{\r\n        value: 0,\r\n        label: texts.noDataDisk,\r\n      },{\r\n        value: 10,\r\n        label: '10 GB',\r\n      },{\r\n        value: 20,\r\n        label: '20 GB',\r\n      },\r\n      ];\r\n      dataDiskSlider = {\r\n        type: 'slider',\r\n        label: texts.dataDisk,\r\n        onChange: handleSliderValueChanged('data_disk'),\r\n        value: request.data_disk,\r\n        oneRow: true,\r\n        maxStep: maxRange,\r\n        minStep: minRange,\r\n        step: step,\r\n        marks: dataMarks,\r\n        xs: 12,\r\n        sm: 6,\r\n        md: 4,\r\n      };\r\n    }\r\n\r\n    let moduleOption;\r\n    if (request.system_template && defaultOption !== request.from_image){\r\n      var modules = [{\r\n        value: 'qemu',\r\n        label: 'QEMU-Guest-Agent',\r\n      },\r\n      {\r\n        value: ciModuleName,\r\n        label: 'CloudInit',\r\n      }\r\n      ];\r\n      let ciOptions;\r\n      if (request.modules.get(ciModuleName)){\r\n        const ciComponents = [\r\n          {\r\n            type: \"text\",\r\n            label: texts.adminName,\r\n            onChange: handleRequestPropsChanged('module_cloud_init_admin_name'),\r\n            value: request.module_cloud_init_admin_name,\r\n            oneRow: true,\r\n            xs: 12,\r\n          },\r\n          {\r\n            type: \"text\",\r\n            label: texts.adminPassword,\r\n            onChange: handleRequestPropsChanged('module_cloud_init_admin_password'),\r\n            helper: texts.blankHelper,\r\n            oneRow: true,\r\n            xs: 12,\r\n          },\r\n          {\r\n            type: \"text\",\r\n            label: texts.dataPath,\r\n            onChange: handleRequestPropsChanged('module_cloud_init_data_path'),\r\n            value: request.module_cloud_init_data_path,\r\n            disabled: true,\r\n            oneRow: true,\r\n            xs: 12,\r\n          },\r\n        ];\r\n        //ci checked\r\n        ciOptions = (\r\n          <GridItem xs={12} sm={8} md={6}>\r\n            <FormLabel component=\"legend\">{texts.ciOptions}</FormLabel>\r\n            <InputList inputs={ciComponents}/>\r\n          </GridItem>\r\n        )\r\n      }else{\r\n        ciOptions = <GridItem/>;\r\n      }\r\n\r\n      moduleOption = (\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.modules}</FormLabel>\r\n                <FormGroup>\r\n                  <Grid container>\r\n                    {\r\n                        modules.map(module => {\r\n                          let checked;\r\n                          if (request.modules.has(module.value)){\r\n                            checked = request.modules.get(module.value);\r\n                          }else{\r\n                            checked = false;\r\n                          }\r\n                          return (\r\n                            <GridItem xs={12} sm={6} md={4} key={module.value}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox checked={checked} onChange={handleCheckedGroupChanged('modules', module.value)} value={module.value}/>}\r\n                                label={module.label}\r\n                              />\r\n                            </GridItem>\r\n                          );\r\n                        })\r\n                    }\r\n                  </Grid>\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n          {ciOptions}\r\n        </SingleRow>\r\n      )\r\n\r\n    }else{\r\n      moduleOption = <GridItem/>;\r\n    }\r\n\r\n    var inputComponents = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        onChange: handleRequestPropsChanged('name'),\r\n        value: request.name,\r\n        oneRow: true,\r\n        required: true,\r\n        xs: 12,\r\n        sm: 6,\r\n        md: 4,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.resourcePool,\r\n        onChange: handleRequestPropsChanged('pool'),\r\n        value: request.pool,\r\n        oneRow: true,\r\n        options: options.pools,\r\n        required: true,\r\n        xs: 10,\r\n        sm: 4,\r\n        md: 3,\r\n      },\r\n      {\r\n        type: \"radio\",\r\n        label: texts.core,\r\n        onChange: handleRequestPropsChanged('cores'),\r\n        value: request.cores,\r\n        oneRow: true,\r\n        options: coresOptions,\r\n        required: true,\r\n        xs: 12,\r\n      },\r\n      {\r\n        type: \"radio\",\r\n        label: texts.memory,\r\n        onChange: handleRequestPropsChanged('memory'),\r\n        value: request.memory,\r\n        oneRow: true,\r\n        options: memoryOptions,\r\n        required: true,\r\n        xs: 12,\r\n      },\r\n      systemDiskSlider,\r\n      dataDiskSlider,\r\n      {\r\n        type: \"select\",\r\n        label: texts.sourceImage,\r\n        onChange: handleRequestPropsChanged('from_image'),\r\n        value: request.from_image,\r\n        oneRow: true,\r\n        options: options.images,\r\n        xs: 10,\r\n        sm: 6,\r\n        md: 5,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.systemVersion,\r\n        onChange: handleRequestPropsChanged('system_template'),\r\n        value: request.system_template,\r\n        oneRow: true,\r\n        options: options.versions,\r\n        xs: 10,\r\n        sm: 5,\r\n        md: 4,\r\n      },\r\n      {\r\n        type: \"switch\",\r\n        label: texts.autoStartup,\r\n        onChange: handleCheckedValueChanged('auto_start'),\r\n        value: request.auto_start,\r\n        on: texts.on,\r\n        off: texts.off,\r\n        oneRow: true,\r\n        xs: 8,\r\n        sm: 6,\r\n        md: 4,\r\n      },\r\n    ];\r\n    if (options.policies && 0 !== options.policies.length){\r\n      inputComponents.push({\r\n        type: \"select\",\r\n        label: texts.securityPolicy,\r\n        onChange: handleRequestPropsChanged('security_policy'),\r\n        value: request.security_policy,\r\n        oneRow: true,\r\n        options: options.policies,\r\n        xs: 10,\r\n        sm: 5,\r\n        md: 4,\r\n      })\r\n    }\r\n\r\n    const priorityOptions = [\r\n      {\r\n        value: 'high',\r\n        label: texts.cpuPriorityHigh,\r\n      },\r\n      {\r\n        value: 'medium',\r\n        label: texts.cpuPriorityMedium,\r\n      },\r\n      {\r\n        value: 'low',\r\n        label: texts.cpuPriorityLow,\r\n      },\r\n    ]\r\n    const qosComponents = [\r\n      {\r\n        type: \"radio\",\r\n        label: texts.cpuPriority,\r\n        onChange: handleRequestPropsChanged('priority'),\r\n        value: request.priority,\r\n        oneRow: true,\r\n        options: priorityOptions,\r\n        xs: 12,\r\n      },\r\n      {\r\n        type: 'slider',\r\n        label: texts.iops,\r\n        onChange: handleSliderValueChanged('iops'),\r\n        value: request.iops,\r\n        oneRow: true,\r\n        maxStep: 2000,\r\n        minStep: 0,\r\n        step: 10,\r\n        marks: [{value: 0, label: texts.noLimit}, {value: 2000, label: '2000'}],\r\n        xs: 12,\r\n      },\r\n      {\r\n        type: 'slider',\r\n        label: texts.inbound,\r\n        onChange: handleSliderValueChanged('inbound'),\r\n        value: request.inbound,\r\n        oneRow: true,\r\n        maxStep: 20,\r\n        minStep: 0,\r\n        step: 2,\r\n        marks: [{value: 0, label: texts.noLimit}, {value: 20, label: '20 Mbit/s'}],\r\n        xs: 12,\r\n      },\r\n      {\r\n        type: 'slider',\r\n        label: texts.outbound,\r\n        onChange: handleSliderValueChanged('outbound'),\r\n        value: request.outbound,\r\n        oneRow: true,\r\n        maxStep: 20,\r\n        minStep: 0,\r\n        step: 2,\r\n        marks: [{value: 0, label: texts.noLimit}, {value: 20, label: '20 Mbit/s'}],\r\n        xs: 12,\r\n      },\r\n    ];\r\n    content = (\r\n      <Grid container>\r\n        <Box m={1} pt={2}>\r\n          <InputList inputs={inputComponents}/>\r\n        </Box>\r\n        {moduleOption}\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={9} md={7}>\r\n            <Box m={0} pb={2}>\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n              >\r\n                {texts.qos}\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Box m={1} pt={2}>\r\n                  <InputList inputs={qosComponents}/>\r\n                </Box>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          </Box>\r\n        </GridItem>\r\n      </SingleRow>\r\n    </Grid>\r\n    );\r\n    buttons.push({\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      });\r\n  }\r\n  return <CustomDialog size='md' open={open} prompt={prompt} promptPosition=\"top\"\r\n    hideBackdrop title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { searchMediaImages, startInstanceWithMedia } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Start Instance With Media',\r\n    name: 'Media Name',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '从引导光盘启动云主机',\r\n    name: '镜像名称',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\n\r\nexport default function StartWithMediaDialog(props){\r\n  const defaultValues = {\r\n    image: '',\r\n  };\r\n  const { lang, instanceID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    images: [],\r\n  });\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onStartFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onStartSuccess = (instanceID) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    const imageID = request.image;\r\n    if ('' === imageID){\r\n      onStartFail('select a media image');\r\n      return;\r\n    }\r\n    startInstanceWithMedia(instanceID, imageID, onStartSuccess, onStartFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    const onQueryMediaSuccess = (dataList) => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var imageList = [];\r\n      dataList.forEach(image =>{\r\n        imageList.push({\r\n          value: image.id,\r\n          label: image.name,\r\n        })\r\n      });\r\n      setOptions({\r\n        images: imageList,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n\r\n    searchMediaImages(onQueryMediaSuccess, onStartFail);\r\n    return () => setMounted(false);\r\n  }, [mounted, open, onStartFail]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"select\",\r\n        label: texts.name,\r\n        onChange: handleRequestPropsChanged('image'),\r\n        value: request.image,\r\n        options: options.images,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n      },\r\n    ];\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { searchMediaImages, insertMedia } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Insert Media Into Instance',\r\n    name: 'Media Name',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '向云主机插入光盘镜像',\r\n    name: '镜像名称',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\n\r\nexport default function InsertWithMediaDialog(props){\r\n  const defaultValues = {\r\n    image: '',\r\n  };\r\n  const { lang, instanceID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    images: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onInsertFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onInsertSuccess = (instanceID) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    const imageID = request.image;\r\n    if ('' === imageID){\r\n      onInsertFail('select a media image');\r\n      return;\r\n    }\r\n    insertMedia(instanceID, imageID, onInsertSuccess, onInsertFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n\r\n    const onQueryMediaSuccess = (dataList) => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var imageList = [];\r\n      dataList.forEach(image =>{\r\n        imageList.push({\r\n          value: image.id,\r\n          label: image.name,\r\n        })\r\n      });\r\n      setOptions({\r\n        images: imageList,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n\r\n    searchMediaImages(onQueryMediaSuccess, onInsertFail);\r\n    return ()=> setMounted(false);\r\n  }, [mounted, open, onInsertFail]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"select\",\r\n        label: texts.name,\r\n        onChange: handleRequestPropsChanged('image'),\r\n        value: request.image,\r\n        options: options.images,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n      },\r\n    ];\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { createDiskImage, deleteDiskImage, getDiskImage } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Build New Image',\r\n    name: 'Image Name',\r\n    description: 'Description',\r\n    tags: 'Tags',\r\n    cancel: 'Cancel',\r\n    confirm: 'Build',\r\n  },\r\n  'cn':{\r\n    title: '构建新镜像',\r\n    name: '镜像名称',\r\n    description: '描述',\r\n    tags: '标签',\r\n    cancel: '取消',\r\n    confirm: '构建',\r\n  },\r\n}\r\n\r\nexport default function BuildDialog(props){\r\n  const checkInterval = 1000;\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    tags: new Map(),\r\n  };\r\n  const { lang, instanceID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ creating, setCreating ] = React.useState(false);\r\n  const [ progress, setProgress ] = React.useState(0);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    tags: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onBuildFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const onFailAfterCreated = imageID => msg => {\r\n    deleteDiskImage(imageID);\r\n    onBuildFail(msg);\r\n  }\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n    setCreating(false);\r\n    setProgress(0);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onBuildSuccess = (imageName) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(imageName);\r\n  }\r\n\r\n  const onBuildAccept = (imageName) => (imageID) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setCreating(true);\r\n    setTimeout(() =>{\r\n      getDiskImage(imageID, onBuildProgress(imageID, imageName), onFailAfterCreated(imageID));\r\n    }, checkInterval);\r\n  }\r\n\r\n  const onBuildProgress = (imageID, imageName) => status => {\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    if (status.created){\r\n      onBuildSuccess(imageName);\r\n      return;\r\n    }\r\n    setProgress(status.progress);\r\n    setTimeout(() =>{\r\n      getDiskImage(imageID, onBuildProgress(imageID, imageName), onFailAfterCreated(imageID));\r\n    }, checkInterval);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    if (!request.name){\r\n      onBuildFail('must specify image name');\r\n      return;\r\n    }\r\n    if (!request.description){\r\n      onBuildFail('desciption required');\r\n      return;\r\n    }\r\n\r\n    if (!request.tags){\r\n      onBuildFail('image tags required');\r\n      return;\r\n    }\r\n    var tags = [];\r\n    request.tags.forEach((value, key) =>{\r\n      if (value){\r\n        //checked\r\n        tags.push(key);\r\n      }\r\n    });\r\n    if (0 === tags.length){\r\n      onBuildFail('image tags required');\r\n      return;\r\n    }\r\n\r\n    const imageName = request.name;\r\n    createDiskImage(imageName, instanceID, request.description, tags, onBuildAccept(imageName), onBuildFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      tags: previous.tags.set(name, value),\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n\r\n    setMounted(true);\r\n    const imageTags = [\r\n      ['linux', 'Linux'],\r\n      ['windows', 'Windows'],\r\n      ['centos', 'Centos'],\r\n      ['ubuntu', 'Ubuntu'],\r\n      ['64bit', '64Bit'],\r\n      ['32bit', '32Bit']\r\n    ];\r\n\r\n    var tagOptions = [];\r\n    imageTags.forEach(tag =>{\r\n      tagOptions.push({\r\n        label: tag[1],\r\n        value: tag[0],\r\n      });\r\n    });\r\n    setOptions({\r\n      tags: tagOptions,\r\n    });\r\n\r\n    setInitialed(true);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [open]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else if(creating){\r\n    content = (\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <LinearProgress variant=\"determinate\" value={progress} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography align=\"center\">\r\n            {progress.toFixed(2) + '%'}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        value: request.name,\r\n        onChange: handleRequestPropsChanged('name'),\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n      },\r\n      {\r\n        type: \"textarea\",\r\n        label: texts.description,\r\n        value: request.description,\r\n        onChange: handleRequestPropsChanged('description'),\r\n        required: true,\r\n        oneRow: true,\r\n        rows: 4,\r\n        xs: 12,\r\n      },\r\n      {\r\n        type: \"checkbox\",\r\n        label: texts.tags,\r\n        onChange: handleTagsChanged,\r\n        value: request.tags,\r\n        options: options.tags,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n      },\r\n    ];\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt} hideBackdrop\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { searchDiskImages, resetSystem, getInstanceConfig } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Reset Instance System',\r\n    name: 'Target System',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '重置云主机系统',\r\n    name: '目标系统',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\nexport default function ResetSystemDialog(props){\r\n  const checkInterval = 1000;\r\n  const defaultValues = {\r\n    image: '',\r\n  };\r\n  const { lang, instanceID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ creating, setCreating ] = React.useState(false);\r\n  const [ progress, setProgress ] = React.useState(0);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    images: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onResetFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onResetSuccess = result =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(result.id);\r\n  }\r\n\r\n  const onResetAccept = (instanceID) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setCreating(true);\r\n    setProgress(0);\r\n    setTimeout(() => {\r\n      checkCreatingProgress(instanceID)\r\n    }, checkInterval);\r\n  }\r\n\r\n  const checkCreatingProgress = (instanceID) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    const onCreating = (progress) =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setProgress(progress);\r\n      setTimeout(() => {\r\n        checkCreatingProgress(instanceID)\r\n      }, checkInterval);\r\n    }\r\n    getInstanceConfig(instanceID, onResetSuccess, onResetFail, onCreating);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    const imageID = request.image;\r\n    if ('' === imageID){\r\n      onResetFail('select a target system');\r\n      return;\r\n    }\r\n    resetSystem(instanceID, imageID, onResetAccept, onResetFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n\r\n    setMounted(true);\r\n    const onQueryTargetSuccess = (dataList) => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var imageOptions = [];\r\n      dataList.forEach(({id, name}) =>{\r\n        imageOptions.push({\r\n          value: id,\r\n          label: name,\r\n        })\r\n      });\r\n      setOptions({\r\n        images: imageOptions,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n\r\n    searchDiskImages(onQueryTargetSuccess, onResetFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [open, mounted, onResetFail]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else if (creating){\r\n    content = (\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <LinearProgress variant=\"determinate\" value={progress} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography align=\"center\">\r\n            {progress.toFixed(2) + '%'}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"select\",\r\n        label: texts.name,\r\n        onChange: handleRequestPropsChanged('image'),\r\n        value: request.image,\r\n        options: options.images,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n      },\r\n    ];\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt} hideBackdrop\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { queryComputeCellsInPool, migrateSingleInstance } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Migrate Single Instance',\r\n    sourcePool: 'Source Pool',\r\n    sourceCell: 'Source Cell',\r\n    targetCell: 'Target Cell',\r\n    offline: 'Offline',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '迁移云主机实例',\r\n    sourcePool: '源资源池',\r\n    sourceCell: '源节点',\r\n    targetCell: '目标节点',\r\n    offline: '离线',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n  },\r\n}\r\n\r\nexport default function MigrateInstanceDialog(props){\r\n  const defaultValues = {\r\n    targetCell: '',\r\n  };\r\n  const { lang, instanceID, open, sourcePool, sourceCell, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    cells: [],\r\n  });\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onMigrateFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onMigrateSuccess = (instanceID) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    const targetCell = request.targetCell;\r\n    if ('' === targetCell){\r\n      onMigrateFail('select a target cell');\r\n      return;\r\n    }\r\n    setPrompt(\"\");\r\n    setOperatable(false);\r\n    migrateSingleInstance(sourcePool, sourceCell, targetCell, instanceID, onMigrateSuccess, onMigrateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n\r\n    setMounted(true);\r\n    const onQueryCellSuccess = dataList => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var cellList = [];\r\n      dataList.forEach(cell =>{\r\n        if (cell.name !== sourceCell){\r\n          let label;\r\n          if(cell.alive){\r\n            label = cell.name + '('+ cell.address +')';\r\n          }else{\r\n            label = cell.name + '('+ texts.offline +')';\r\n          }\r\n\r\n          cellList.push({\r\n            label: label,\r\n            value: cell.name,\r\n            disabled: !cell.alive,\r\n          })\r\n        }\r\n      });\r\n      if (0 === cellList.length){\r\n        onMigrateFail('no target cell available');\r\n        return;\r\n      }\r\n      setOptions({\r\n        cells: cellList,\r\n      });\r\n      setInitialed(true);\r\n    };\r\n\r\n    queryComputeCellsInPool(sourcePool, onQueryCellSuccess, onMigrateFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, sourcePool, sourceCell, onMigrateFail, texts.offline]);\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.sourcePool,\r\n        value: sourcePool,\r\n        disabled: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 8,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.sourceCell,\r\n        value: sourceCell,\r\n        disabled: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 8,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.targetCell,\r\n        onChange: handleRequestPropsChanged('targetCell'),\r\n        value: request.targetCell,\r\n        options: options.cells,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n// dashboard components\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { batchStoppingGuests, checkBatchStoppingStatus } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Batch Stopping Instance',\r\n    content1: 'Are you sure to stop ',\r\n    content2: ' instance(s)',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n    finish: 'Finish',\r\n    fail: 'Fail',\r\n    complete: 'Stopped',\r\n    processing: 'Stopping',\r\n    instance: 'Instance',\r\n    result: 'Result',\r\n  },\r\n  'cn':{\r\n    title: '批量停止云主机',\r\n    content1: '是否停止 ',\r\n    content2: ' 个云主机',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n    finish: '完成',\r\n    fail: '失败',\r\n    complete: '已停止',\r\n    processing: '停止中',\r\n    instance: '云主机',\r\n    result: '处理结果',\r\n  },\r\n}\r\n\r\nexport default function BatchStopDialog(props){\r\n  const updateInterval = 2 * 1000;// 2 seconds\r\n  const StageEnum = {\r\n    initial: 0,\r\n    processing: 1,\r\n    finish: 2,\r\n  };\r\n  const { lang, targets, open, onSuccess, onCancel } = props;\r\n  const [ stage, setStage ] = React.useState(StageEnum.initial);\r\n  const [ resultList, setResultList ] = React.useState(null);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onStopFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setStage(StageEnum.initial);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onStopSuccess = () =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setStage(StageEnum.initial);\r\n    setPrompt('');\r\n    onSuccess();\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    if (!targets || 0 === targets.length){\r\n      onStopFail('no target selecetd');\r\n      return;\r\n    }\r\n\r\n    var batchID;\r\n    const onProcessing = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setResultList(dataList);\r\n      setTimeout(()=> {\r\n        checkBatchStoppingStatus(batchID, onProcessing, onComplete, onStopFail)\r\n      }, updateInterval);\r\n    }\r\n\r\n    const onComplete = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setResultList(dataList);\r\n      if(StageEnum.finish !== stage){\r\n        setOperatable(true);\r\n        setStage(StageEnum.finish);\r\n      }\r\n    }\r\n\r\n    const onAccept = id => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      if(StageEnum.initial === stage){\r\n        setStage(StageEnum.processing);\r\n      }\r\n      batchID = id;\r\n      checkBatchStoppingStatus(batchID, onProcessing, onComplete, onStopFail);\r\n    }\r\n\r\n    batchStoppingGuests(targets, onAccept, onStopFail);\r\n  }\r\n\r\n  const cancelButton = {\r\n    color: \"transparent\",\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  };\r\n  const confirmButton = {\r\n    color: 'info',\r\n    label: texts.confirm,\r\n    onClick: handleConfirm,\r\n  };\r\n  const finishButton = {\r\n    color: 'info',\r\n    label: texts.finish,\r\n    onClick: onStopSuccess,\r\n  };\r\n\r\n  const resultToTable = dataList => {\r\n    var rows = [];\r\n    if(!dataList){\r\n      return <div/>;\r\n    }\r\n    dataList.forEach((result, index) =>{\r\n      if('fail' === result.status){\r\n        rows.push({\r\n          id: result.id,\r\n          text: texts.fail + ':' + result.error,\r\n        });\r\n      }else if ('stopped' === result.status){\r\n        rows.push({\r\n          id: result.id,\r\n          text: texts.complete,\r\n        });\r\n      }else{\r\n        //stopping\r\n        rows.push({\r\n          id: result.id,\r\n          text: texts.processing,\r\n        });\r\n      }\r\n    });\r\n\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>{texts.instance}</TableCell>\r\n              <TableCell>{texts.result}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {\r\n              rows.map(row => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component='th' scope='row'>\r\n                    {row.id}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {row.text}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n\r\n  React.useEffect(() =>{\r\n    setMounted(true);\r\n    return () => setMounted(false);\r\n  }, []);\r\n\r\n  let content, buttons;\r\n  switch (stage) {\r\n    case StageEnum.processing:\r\n      content = resultToTable(resultList);\r\n      if(prompt){\r\n        buttons = [cancelButton];\r\n      }else{\r\n        buttons = [];\r\n      }\r\n      break;\r\n    case StageEnum.finish:\r\n      content = resultToTable(resultList);\r\n      buttons = [finishButton];\r\n      break;\r\n    default:\r\n      //initial\r\n      content = texts.content1 + targets.length.toString() + texts.content2;\r\n      buttons = [cancelButton, confirmButton];\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt} promptPosition=\"top\"\r\n    hideBackdrop title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n// dashboard components\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { batchDeletingGuests, checkBatchDeletingStatus } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Batch Deleting Instance',\r\n    content1: 'Are you sure to delete ',\r\n    content2: ' instance(s)',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n    finish: 'Finish',\r\n    fail: 'Fail',\r\n    complete: 'Deleted',\r\n    processing: 'Deleting',\r\n    instance: 'Instance',\r\n    result: 'Result',\r\n  },\r\n  'cn':{\r\n    title: '批量删除云主机',\r\n    content1: '是否删除 ',\r\n    content2: ' 个云主机',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n    finish: '完成',\r\n    fail: '失败',\r\n    complete: '已删除',\r\n    processing: '删除中',\r\n    instance: '云主机',\r\n    result: '处理结果',\r\n  },\r\n}\r\n\r\nexport default function BatchDeleteDialog(props){\r\n  const updateInterval = 2 * 1000;// 2 seconds\r\n  const StageEnum = {\r\n    initial: 0,\r\n    processing: 1,\r\n    finish: 2,\r\n  };\r\n  const { lang, targets, open, onSuccess, onCancel } = props;\r\n  const [ stage, setStage ] = React.useState(StageEnum.initial);\r\n  const [ resultList, setResultList ] = React.useState(null);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onDeleteFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setStage(StageEnum.initial);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setStage(StageEnum.initial);\r\n    setPrompt('');\r\n    onSuccess();\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    if (!targets || 0 === targets.length){\r\n      onDeleteFail('no target selecetd');\r\n      return;\r\n    }\r\n\r\n    var batchID;\r\n    const onProcessing = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setResultList(dataList);\r\n      setTimeout(()=> {\r\n        checkBatchDeletingStatus(batchID, onProcessing, onComplete, onDeleteFail)\r\n      }, updateInterval);\r\n    }\r\n\r\n    const onComplete = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setResultList(dataList);\r\n      if(StageEnum.finish !== stage){\r\n        setOperatable(true);\r\n        setStage(StageEnum.finish);\r\n      }\r\n    }\r\n\r\n    const onAccept = id => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      if(StageEnum.initial === stage){\r\n        setStage(StageEnum.processing);\r\n      }\r\n      batchID = id;\r\n      checkBatchDeletingStatus(batchID, onProcessing, onComplete, onDeleteFail);\r\n    }\r\n\r\n    batchDeletingGuests(targets, onAccept, onDeleteFail);\r\n  }\r\n\r\n  const cancelButton = {\r\n    color: \"transparent\",\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  };\r\n  const confirmButton = {\r\n    color: 'info',\r\n    label: texts.confirm,\r\n    onClick: handleConfirm,\r\n  };\r\n  const finishButton = {\r\n    color: 'info',\r\n    label: texts.finish,\r\n    onClick: onDeleteSuccess,\r\n  };\r\n\r\n  const resultToTable = dataList => {\r\n    var rows = [];\r\n    if(!dataList){\r\n      return <div/>;\r\n    }\r\n    dataList.forEach((result, index) =>{\r\n      if('fail' === result.status){\r\n        rows.push({\r\n          id: result.id,\r\n          text: texts.fail + ':' + result.error,\r\n        });\r\n      }else if ('deleted' === result.status){\r\n        rows.push({\r\n          id: result.id,\r\n          text: texts.complete,\r\n        });\r\n      }else{\r\n        //stopping\r\n        rows.push({\r\n          id: result.id,\r\n          text: texts.processing,\r\n        });\r\n      }\r\n    });\r\n\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>{texts.instance}</TableCell>\r\n              <TableCell>{texts.result}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {\r\n              rows.map(row => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component='th' scope='row'>\r\n                    {row.id}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {row.text}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n\r\n  React.useEffect(() =>{\r\n    setMounted(true);\r\n    return () => setMounted(false);\r\n  }, []);\r\n\r\n  let content, buttons;\r\n  switch (stage) {\r\n    case StageEnum.processing:\r\n      content = resultToTable(resultList);\r\n      if(prompt){\r\n        buttons = [cancelButton];\r\n      }else{\r\n        buttons = [];\r\n      }\r\n      break;\r\n    case StageEnum.finish:\r\n      content = resultToTable(resultList);\r\n      buttons = [finishButton];\r\n      break;\r\n    default:\r\n      //initial\r\n      content = texts.content1 + targets.length.toString() + texts.content2;\r\n      buttons = [cancelButton, confirmButton];\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt} promptPosition=\"top\"\r\n    hideBackdrop title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { getAllComputePools, searchDiskImages, batchCreatingGuests,\r\n  checkBatchCreatingStatus, querySystemTemplates } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Batch Creating Instances',\r\n    rule: 'Name Rule',\r\n    ruleOrder: 'By Order',\r\n    ruleMAC: 'By MAC',\r\n    ruleAddress: 'By Guest Address',\r\n    prefix: 'Prefix',\r\n    count: 'Create Quantity',\r\n    resourcePool: 'Resource Pool',\r\n    core: 'Core',\r\n    memory: 'Memory',\r\n    systemDisk: 'System Disk Size',\r\n    dataDisk: 'Data Disk Size',\r\n    autoStartup: 'Automatic Startup',\r\n    systemVersion: 'System Version',\r\n    sourceImage: 'Source Image',\r\n    blankSystem: 'Blank System',\r\n    qos: 'QoS Options (Optional)',\r\n    cpuPriority: 'CPU Priority',\r\n    iops: 'IOPS',\r\n    outbound: 'Outband Bandwidth',\r\n    inbound: 'Inbound Bandwidth',\r\n    noDataDisk: \"Don't use data disk\",\r\n    noLimit: 'No Limit',\r\n    cpuPriorityHigh: 'High',\r\n    cpuPriorityMedium: 'Medium',\r\n    cpuPriorityLow: 'Low',\r\n    modules: 'Pre-Installed Modules',\r\n    adminName: 'Admin Name',\r\n    adminPassword: 'Admin Password',\r\n    blankHelper: 'Leave blank to generate',\r\n    dataPath: 'Data Path',\r\n    off: 'Off',\r\n    on: 'On',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n    finish: 'Finish',\r\n    fail: 'Fail',\r\n    complete: 'Created',\r\n    processing: 'Creating',\r\n    instance: 'Instance',\r\n    result: 'Result',\r\n  },\r\n  'cn':{\r\n    title: '批量创建云主机',\r\n    rule: '实例命名规则',\r\n    ruleOrder: '顺序递增',\r\n    ruleMAC: '按MAC地址',\r\n    ruleAddress: '按实例地址',\r\n    prefix: '实例名前缀',\r\n    count: '创建数量',\r\n    resourcePool: '计算资源池',\r\n    core: '核心数',\r\n    memory: '内存',\r\n    systemDisk: '系统磁盘容量',\r\n    dataDisk: '数据磁盘容量',\r\n    autoStartup: '自动启动',\r\n    systemVersion: '系统版本',\r\n    sourceImage: '来源镜像',\r\n    blankSystem: '空白系统',\r\n    qos: 'QoS选项 (可选)',\r\n    cpuPriority: 'CPU优先级',\r\n    iops: '磁盘读写限制',\r\n    outbound: '上行带宽',\r\n    inbound: '下行带宽',\r\n    noDataDisk: \"不使用数据磁盘\",\r\n    noLimit: '无限制',\r\n    cpuPriorityHigh: '高',\r\n    cpuPriorityMedium: '中',\r\n    cpuPriorityLow: '低',\r\n    modules: '预装模块',\r\n    adminName: '管理员账号',\r\n    adminPassword: '管理员密码',\r\n    blankHelper: '留空则自动生成新密码',\r\n    dataPath: '挂载数据路径',\r\n    off: '关闭',\r\n    on: '开启',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n    finish: '完成',\r\n    fail: '失败',\r\n    complete: '创建完成',\r\n    processing: '创建中',\r\n    instance: '云主机',\r\n    result: '处理结果',\r\n  },\r\n};\r\n\r\nexport default function CreateDialog(props){\r\n  const StageEnum = {\r\n    initial: 0,\r\n    processing: 1,\r\n    finish: 2,\r\n  };\r\n  const RuleEmum = {\r\n    order: 'order',\r\n    MAC: 'MAC',\r\n    address: 'address',\r\n  };\r\n  const defaultOption = '__default';\r\n  const ciModuleName = 'cloud-init';\r\n  const checkInterval = 1000;\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n\r\n  const defaultValues = {\r\n    rule: RuleEmum.order,\r\n    prefix: '',\r\n    count: 1,\r\n    name: '',\r\n    pool: '',\r\n    cores: (1).toString(),\r\n    memory: (1 << 30).toString(), //1 G\r\n    system_disk: 5,\r\n    data_disk: 0,\r\n    auto_start: false,\r\n    system_template: '',\r\n    from_image: defaultOption,\r\n    modules: new Map(),\r\n    module_cloud_init_admin_name: 'root',\r\n    module_cloud_init_admin_password: '',\r\n    module_cloud_init_data_path: '/opt/data',\r\n    priority: 'medium',\r\n    iops: 0,\r\n    inbound: 0,\r\n    outbound: 0,\r\n  };\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ stage, setStage ] = React.useState(StageEnum.initial);\r\n  const [ resultList, setResultList ] = React.useState(null);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState({\r\n    pools: [],\r\n    images: [],\r\n    versions: [],\r\n  });\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onCreateFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () => {\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n    setStage(StageEnum.initial);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = () =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    resetDialog();\r\n    onSuccess();\r\n  }\r\n\r\n  const onAccept = batchID => {\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setPrompt('');\r\n    if(StageEnum.initial === stage){\r\n      setStage(StageEnum.processing);\r\n    }\r\n    checkBatchCreatingStatus(batchID, onProcessing(batchID), onComplete(batchID), onCreateFail);\r\n  }\r\n\r\n  const onProcessing = batchID => dataList =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setResultList(dataList);\r\n    setTimeout(() => {\r\n      checkBatchCreatingStatus(batchID, onProcessing(batchID), onComplete(batchID), onCreateFail);\r\n    }, checkInterval);\r\n  }\r\n\r\n  const onComplete = batchID => dataList =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setResultList(dataList);\r\n    if(StageEnum.finish !== stage){\r\n      setOperatable(true);\r\n      setStage(StageEnum.finish);\r\n    }\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    if (!request.prefix){\r\n      onCreateFail('prefix required');\r\n      return;\r\n    }\r\n    var count = Number.parseInt(request.count);\r\n    if(Number.isNaN(count)){\r\n      onCreateFail('invalid count: ' + request.count);\r\n      return;\r\n    }\r\n\r\n    if (!request.pool){\r\n      onCreateFail('must specify target pool');\r\n      return;\r\n    }\r\n    var cores = Number.parseInt(request.cores);\r\n    if(Number.isNaN(cores)){\r\n      onCreateFail('invalid cores: ' + request.cores);\r\n      return;\r\n    }\r\n    var memory = Number.parseInt(request.memory);\r\n    if(Number.isNaN(memory)){\r\n      onCreateFail('invalid memory: ' + request.memory);\r\n      return;\r\n    }\r\n    const GiB = 1 << 30;\r\n    var disks = [request.system_disk * GiB];\r\n    if (0 !== request.data_disk){\r\n      disks.push(request.data_disk * GiB);\r\n    }\r\n    var systemVersion = request.system_template;\r\n    let fromImage;\r\n    if (defaultOption === request.from_image){\r\n      fromImage = '';\r\n    }else{\r\n      fromImage = request.from_image;\r\n    }\r\n    var modules = [];\r\n    var ciEnabled = false;\r\n    request.modules.forEach( (checked, name) =>{\r\n      if(checked){\r\n        modules.push(name);\r\n        if (ciModuleName === name){\r\n          ciEnabled = true;\r\n        }\r\n      }\r\n    });\r\n    var cloudInit = null;\r\n    if(ciEnabled){\r\n      cloudInit = {\r\n        admin_name: request.module_cloud_init_admin_name,\r\n        admin_secret: request.module_cloud_init_admin_password,\r\n        data_path: request.module_cloud_init_data_path,\r\n      };\r\n    }\r\n    const Mbit = 1 << (20 - 3);\r\n    var qos = {\r\n      cpu_priority: request.priority,\r\n      write_iops: request.iops,\r\n      read_iops: request.iops,\r\n      receive_speed: request.inbound * Mbit,\r\n      send_speed: request.outbound * Mbit,\r\n    };\r\n    batchCreatingGuests(request.rule, request.prefix, count, request.pool, cores, memory, disks,\r\n      request.auto_start, fromImage, systemVersion, modules,\r\n      cloudInit, qos, onAccept, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSliderValueChanged = name => (e, value) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleCheckedValueChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleCheckedGroupChanged = (groupName, propertyName) => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var checked = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [groupName]: previous[groupName].set(propertyName, checked),\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    var poolOptions = [];\r\n    var imageOptions = [{\r\n      label: texts.blankSystem,\r\n      value: defaultOption,\r\n    }];\r\n    var templateOptions = [];\r\n\r\n    setMounted(true);\r\n    const onQueryTemplateSuccess = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      dataList.forEach(({id, name}) =>{\r\n        templateOptions.push({\r\n          label: name,\r\n          value: id,\r\n        });\r\n      });\r\n      setOptions({\r\n        pools: poolOptions,\r\n        images: imageOptions,\r\n        versions: templateOptions,\r\n      });\r\n      setInitialed(true);\r\n    }\r\n\r\n    const onQueryImageSuccess = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      dataList.forEach(({name, id})=>{\r\n        imageOptions.push({\r\n          label: name,\r\n          value: id,\r\n        });\r\n      })\r\n      querySystemTemplates(onQueryTemplateSuccess, onCreateFail);\r\n    };\r\n\r\n    const onQueryPoolSuccess = dataList =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      dataList.forEach(({name})=>{\r\n        poolOptions.push({\r\n          label: name,\r\n          value: name,\r\n        });\r\n      })\r\n\r\n      searchDiskImages(onQueryImageSuccess, onCreateFail);\r\n    };\r\n\r\n    getAllComputePools(onQueryPoolSuccess, onCreateFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, texts.blankSystem, onCreateFail]);\r\n\r\n\r\n  const resultToTable = dataList => {\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var rows = [];\r\n    if(!dataList){\r\n      return <div/>;\r\n    }\r\n    dataList.forEach((result, index) =>{\r\n      let content;\r\n      if('fail' === result.status){\r\n        content = texts.fail + ':' + result.error;\r\n      }else if ('created' === result.status){\r\n        content = texts.complete;\r\n      }else{\r\n        //stopping\r\n        const progress = result.progress;\r\n        content = (\r\n          <Grid container>\r\n            <GridItem xs={8} sm={9} md={10}>\r\n              <LinearProgress variant=\"determinate\" value={progress}/>\r\n            </GridItem>\r\n            <GridItem xs={4} sm={3} md={2}>\r\n              <Typography align=\"center\">\r\n                {progress.toFixed(2) + '%'}\r\n              </Typography>\r\n            </GridItem>\r\n          </Grid>\r\n        )\r\n      }\r\n      rows.push({\r\n        name: result.name,\r\n        content: content,\r\n      });\r\n    });\r\n\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>{texts.instance}</TableCell>\r\n              <TableCell>{texts.result}</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {\r\n              rows.map(row => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell component='th' scope='row'>\r\n                    {row.name}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {row.content}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n\r\n\r\n  const cancelButton = {\r\n    color: \"transparent\",\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  };\r\n  const confirmButton = {\r\n    color: 'info',\r\n    label: texts.confirm,\r\n    onClick: handleConfirm,\r\n  };\r\n  const finishButton = {\r\n    color: 'info',\r\n    label: texts.finish,\r\n    onClick: onCreateSuccess,\r\n  };\r\n\r\n  let content, buttons;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    buttons = [cancelButton];\r\n  }else{\r\n    switch (stage) {\r\n      case StageEnum.processing:\r\n        content = resultToTable(resultList);\r\n        if(prompt){\r\n          buttons = [cancelButton];\r\n        }else{\r\n          buttons = [];\r\n        }\r\n        break;\r\n      case StageEnum.finish:\r\n        content = resultToTable(resultList);\r\n        buttons = [finishButton];\r\n        break;\r\n      default:\r\n        //initial\r\n        buttons = [cancelButton, confirmButton];\r\n        const coresOptions = [];\r\n        [1, 2, 4, 8, 16].forEach( core =>{\r\n          coresOptions.push(core.toString());\r\n        });\r\n        const memoryOptionsRates = [1, 2, 4, 8, 16, 32];\r\n        const memoryBase = 512;\r\n        const MiB = 1 << 20;\r\n        const GiB = 1 << 30;\r\n        var memoryOptions = [];\r\n        memoryOptionsRates.forEach(rate => {\r\n          var value = memoryBase * rate * MiB;\r\n          let name;\r\n          if (value >= GiB){\r\n            name = value / GiB + ' GB';\r\n          }else{\r\n            name = value / MiB + ' MB';\r\n          }\r\n          memoryOptions.push({\r\n            name: name,\r\n            value: value.toString(),\r\n          });\r\n        });\r\n        //system disk slider\r\n        let systemDiskSlider;\r\n        {\r\n          const minRange = 5;\r\n          const maxRange = 60;\r\n          const step = 1;\r\n          const markValues = [minRange, maxRange, 30];\r\n          var systemMarks = [];\r\n          markValues.forEach(value =>{\r\n            systemMarks.push({\r\n              value: value,\r\n              label: value + ' GB',\r\n            })\r\n          });\r\n          systemDiskSlider = (\r\n            <Slider\r\n              color=\"secondary\"\r\n              value={request.system_disk}\r\n              max={maxRange}\r\n              min={minRange}\r\n              step={step}\r\n              valueLabelDisplay=\"auto\"\r\n              marks={systemMarks}\r\n              onChange={handleSliderValueChanged('system_disk')}\r\n            />\r\n          );\r\n        }\r\n        //disk slider\r\n        let dataDiskSlider;\r\n        {\r\n          const minRange = 0;\r\n          const maxRange = 20;\r\n          const step = 2;\r\n          var dataMarks = [{\r\n            value: 0,\r\n            label: texts.noDataDisk,\r\n          },{\r\n            value: 10,\r\n            label: '10 GB',\r\n          },{\r\n            value: 20,\r\n            label: '20 GB',\r\n          },\r\n          ];\r\n          dataDiskSlider = (\r\n            <Slider\r\n              color=\"secondary\"\r\n              value={request.data_disk}\r\n              max={maxRange}\r\n              min={minRange}\r\n              step={step}\r\n              valueLabelDisplay=\"auto\"\r\n              marks={dataMarks}\r\n              onChange={handleSliderValueChanged('data_disk')}\r\n            />\r\n          );\r\n        }\r\n\r\n        let moduleOption;\r\n        if (request.system_template && defaultOption !== request.from_image){\r\n          var modules = [{\r\n            value: 'qemu',\r\n            label: 'QEMU-Guest-Agent',\r\n          },\r\n          {\r\n            value: ciModuleName,\r\n            label: 'CloudInit',\r\n          }\r\n          ];\r\n          let ciOptions;\r\n          if (request.modules.get(ciModuleName)){\r\n            //ci checked\r\n            ciOptions = (\r\n              <GridItem xs={12} sm={8} md={6}>\r\n                <Box m={0} pt={2}>\r\n                  <FormControl component=\"fieldset\" fullWidth>\r\n                    <FormLabel component=\"legend\">Cloud Init Options</FormLabel>\r\n                    <SingleRow>\r\n                      <TextField\r\n                        label={texts.adminName}\r\n                        onChange={handleRequestPropsChanged('module_cloud_init_admin_name')}\r\n                        value={request.module_cloud_init_admin_name}\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                      />\r\n                    </SingleRow>\r\n                    <SingleRow>\r\n                      <TextField\r\n                        label={texts.adminPassword}\r\n                        onChange={handleRequestPropsChanged('module_cloud_init_admin_password')}\r\n                        helperText={texts.blankHelper}\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                      />\r\n                    </SingleRow>\r\n                    <SingleRow>\r\n                      <TextField\r\n                        label={texts.dataPath}\r\n                        onChange={handleRequestPropsChanged('module_cloud_init_data_path')}\r\n                        value={request.module_cloud_init_data_path}\r\n                        margin=\"normal\"\r\n                        disabled\r\n                        fullWidth\r\n                      />\r\n                    </SingleRow>\r\n                  </FormControl>\r\n                </Box>\r\n              </GridItem>\r\n            )\r\n          }else{\r\n            ciOptions = <GridItem/>;\r\n          }\r\n\r\n          moduleOption = (\r\n            <SingleRow>\r\n              <GridItem xs={12}>\r\n                <Box m={0} pt={2}>\r\n                  <FormControl component=\"fieldset\" fullWidth>\r\n                    <FormLabel component=\"legend\">{texts.modules}</FormLabel>\r\n                    <FormGroup>\r\n                      <Grid container>\r\n                        {\r\n                            modules.map(module => {\r\n                              let checked;\r\n                              if (request.modules.has(module.value)){\r\n                                checked = request.modules.get(module.value);\r\n                              }else{\r\n                                checked = false;\r\n                              }\r\n                              return (\r\n                                <GridItem xs={12} sm={6} md={4} key={module.value}>\r\n                                  <FormControlLabel\r\n                                    control={<Checkbox checked={checked} onChange={handleCheckedGroupChanged('modules', module.value)} value={module.value}/>}\r\n                                    label={module.label}\r\n                                  />\r\n                                </GridItem>\r\n                              );\r\n                            })\r\n                        }\r\n                      </Grid>\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </Box>\r\n              </GridItem>\r\n              {ciOptions}\r\n            </SingleRow>\r\n          )\r\n\r\n        }else{\r\n          moduleOption = <GridItem/>;\r\n        }\r\n\r\n\r\n        content = (\r\n          <Grid container>\r\n            <SingleRow>\r\n              <GridItem xs={12}>\r\n                <Box m={0} pt={2}>\r\n                  <FormControl component=\"fieldset\" fullWidth>\r\n                    <FormLabel component=\"legend\">{texts.rule}</FormLabel>\r\n                    <RadioGroup aria-label={texts.rule} name=\"rule\" value={request.rule} onChange={handleRequestPropsChanged('rule')} row>\r\n                      <Box display='flex'>\r\n                        <Box>\r\n                          <FormControlLabel value={RuleEmum.order} control={<Radio />} label={texts.ruleOrder}/>\r\n                        </Box>\r\n                        <Box>\r\n                          <FormControlLabel value={RuleEmum.MAC} control={<Radio disabled/>} label={texts.ruleMAC}/>\r\n                        </Box>\r\n                        <Box>\r\n                          <FormControlLabel value={RuleEmum.address} control={<Radio disabled/>} label={texts.ruleAddress}/>\r\n                        </Box>\r\n                      </Box>\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={6}>\r\n                <Box m={0} pt={2}>\r\n                    <FormLabel component=\"legend\">{texts.count}</FormLabel>\r\n                    <Slider\r\n                      color=\"secondary\"\r\n                      value={request.count}\r\n                      max={20}\r\n                      min={1}\r\n                      step={1}\r\n                      valueLabelDisplay=\"auto\"\r\n                      marks={[{value: 1, label: '1'}, {value: 10, label: '10'}, {value: 20, label: '20'}]}\r\n                      onChange={handleSliderValueChanged('count')}\r\n                    />\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={12} sm={6} md={4}>\r\n                <Box m={0} pt={2}>\r\n                  <TextField\r\n                    label={texts.prefix}\r\n                    onChange={handleRequestPropsChanged('prefix')}\r\n                    value={request.prefix}\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={10} sm={4} md={3}>\r\n                <Box m={0} pt={2}>\r\n                  <InputLabel htmlFor=\"pool\">{texts.resourcePool}</InputLabel>\r\n                  <Select\r\n                    value={request.pool}\r\n                    onChange={handleRequestPropsChanged('pool')}\r\n                    inputProps={{\r\n                      name: 'pool',\r\n                      id: 'pool',\r\n                    }}\r\n                    required\r\n                    fullWidth\r\n                  >\r\n                    {\r\n                      options.pools.map((option, key) =>(\r\n                        <MenuItem value={option.value} key={key}>{option.label}</MenuItem>\r\n                      ))\r\n                    }\r\n                  </Select>\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={12}>\r\n                <Box m={0} pt={2}>\r\n                <FormControl component=\"fieldset\" fullWidth>\r\n                  <FormLabel component=\"legend\">{texts.core}</FormLabel>\r\n                  <RadioGroup aria-label={texts.core} name=\"cores\" value={request.cores} onChange={handleRequestPropsChanged('cores')} row>\r\n                    <Grid container>\r\n                    {\r\n                      coresOptions.map(option => <GridItem xs={3} sm={2} md={1} key={option}><FormControlLabel value={option} control={<Radio />} label={option}/></GridItem>)\r\n                    }\r\n                    </Grid>\r\n                  </RadioGroup>\r\n                </FormControl>\r\n                </Box>\r\n              </GridItem>\r\n              <GridItem xs={12}>\r\n                <Box m={0} pt={2}>\r\n                  <FormControl component=\"fieldset\" fullWidth>\r\n                    <FormLabel component=\"legend\">{texts.memory}</FormLabel>\r\n                    <RadioGroup aria-label={texts.memory} name=\"memory\" value={request.memory} onChange={handleRequestPropsChanged('memory')} row>\r\n                      <Grid container>\r\n                      {\r\n                        memoryOptions.map(option => <GridItem xs={6} sm={3} md={2} key={option.value}><FormControlLabel value={option.value} control={<Radio />} label={option.name}/></GridItem>)\r\n                      }\r\n                      </Grid>\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n\r\n            <SingleRow>\r\n              <GridItem xs={12} sm={6} md={4}>\r\n                <Box m={0} pt={2}>\r\n                  <FormLabel component=\"legend\">{texts.systemDisk}</FormLabel>\r\n                  {systemDiskSlider}\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={12} sm={6} md={4}>\r\n                <Box m={0} pt={2}>\r\n                  <FormLabel component=\"legend\">{texts.dataDisk}</FormLabel>\r\n                  {dataDiskSlider}\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={10} sm={6} md={5}>\r\n                <Box m={0} pb={2}>\r\n                  <InputLabel htmlFor=\"image\">{texts.sourceImage}</InputLabel>\r\n                  <Select\r\n                    value={request.from_image}\r\n                    onChange={handleRequestPropsChanged('from_image')}\r\n                    inputProps={{\r\n                      name: 'image',\r\n                      id: 'image',\r\n                    }}\r\n                    fullWidth\r\n                  >\r\n                    {\r\n                      options.images.map((option, key) =>(\r\n                        <MenuItem value={option.value} key={key}>{option.label}</MenuItem>\r\n                      ))\r\n                    }\r\n                  </Select>\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={10} sm={5} md={4}>\r\n                <Box m={0} pb={2}>\r\n                  <InputLabel htmlFor=\"version\">{texts.systemVersion}</InputLabel>\r\n                  <Select\r\n                    value={request.system_template}\r\n                    onChange={handleRequestPropsChanged('system_template')}\r\n                    inputProps={{\r\n                      name: 'version',\r\n                      id: 'version',\r\n                    }}\r\n                    fullWidth\r\n                  >\r\n                    {\r\n                      options.versions.map((option, key) =>(\r\n                        <MenuItem value={option.value} key={key}>{option.label}</MenuItem>\r\n                      ))\r\n                    }\r\n                  </Select>\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            <SingleRow>\r\n              <GridItem xs={8} sm={6} md={4}>\r\n                <Box m={0} pb={2}>\r\n                  <InputLabel htmlFor=\"auto_start\">{texts.autoStartup}</InputLabel>\r\n\r\n                    {texts.off}\r\n                    <Switch\r\n                      checked={request.failover}\r\n                      onChange={handleCheckedValueChanged('auto_start')}\r\n                      color=\"primary\"\r\n                      inputProps={{\r\n                        name: 'auto_start',\r\n                        id: 'auto_start',\r\n                      }}\r\n                    />\r\n                    {texts.on}\r\n\r\n                </Box>\r\n              </GridItem>\r\n            </SingleRow>\r\n            {moduleOption}\r\n            <SingleRow>\r\n              <GridItem xs={12} sm={8} md={6}>\r\n                <Box m={0} pb={2}>\r\n                <ExpansionPanel>\r\n                  <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                  >\r\n                    {texts.qos}\r\n                  </ExpansionPanelSummary>\r\n                  <ExpansionPanelDetails>\r\n                    <Grid container>\r\n                      <GridItem xs={12}>\r\n                        <Box m={1} p={2}>\r\n                          <FormControl component=\"fieldset\" fullWidth>\r\n                            <FormLabel component=\"legend\">{texts.cpuPriority}</FormLabel>\r\n                            <RadioGroup aria-label={texts.cpuPriority} value={request.priority} onChange={handleRequestPropsChanged('priority')} row>\r\n                              <FormControlLabel value='high' control={<Radio />} label={texts.cpuPriorityHigh} key='high'/>\r\n                              <FormControlLabel value='medium' control={<Radio />} label={texts.cpuPriorityMedium} key='medium'/>\r\n                              <FormControlLabel value='low' control={<Radio />} label={texts.cpuPriorityLow} key='low'/>\r\n                            </RadioGroup>\r\n                          </FormControl>\r\n                        </Box>\r\n                      </GridItem>\r\n                      <GridItem xs={12}>\r\n                        <Box m={1} p={2}>\r\n                            <FormLabel component=\"legend\">{texts.iops}</FormLabel>\r\n                            <Slider\r\n                              color=\"secondary\"\r\n                              value={request.iops}\r\n                              max={2000}\r\n                              min={0}\r\n                              step={10}\r\n                              valueLabelDisplay=\"auto\"\r\n                              marks={[{value: 0, label: texts.noLimit}, {value: 2000, label: 2000}]}\r\n                              onChange={handleSliderValueChanged('iops')}\r\n                            />\r\n                        </Box>\r\n                      </GridItem>\r\n                      <GridItem xs={12}>\r\n                        <Box m={1} p={2}>\r\n                            <FormLabel component=\"legend\">{texts.inbound}</FormLabel>\r\n                            <Slider\r\n                              color=\"secondary\"\r\n                              value={request.inbound}\r\n                              max={20}\r\n                              min={0}\r\n                              step={2}\r\n                              valueLabelDisplay=\"auto\"\r\n                              marks={[{value: 0, label: texts.noLimit}, {value: 20, label: '20 Mbit/s'}]}\r\n                              onChange={handleSliderValueChanged('inbound')}\r\n                            />\r\n                        </Box>\r\n                      </GridItem>\r\n                      <GridItem xs={12}>\r\n                        <Box m={1} p={2}>\r\n                            <FormLabel component=\"legend\">{texts.outbound}</FormLabel>\r\n                            <Slider\r\n                              color=\"secondary\"\r\n                              value={request.outbound}\r\n                              max={20}\r\n                              min={0}\r\n                              step={2}\r\n                              valueLabelDisplay=\"auto\"\r\n                              marks={[{value: 0, label: texts.noLimit}, {value: 20, label: '20 Mbit/s'}]}\r\n                              onChange={handleSliderValueChanged('outbound')}\r\n                            />\r\n                        </Box>\r\n                      </GridItem>\r\n                    </Grid>\r\n                  </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n              </Box>\r\n            </GridItem>\r\n          </SingleRow>\r\n        </Grid>\r\n        );\r\n    }\r\n  }\r\n  return <CustomDialog size='md' open={open} prompt={prompt} promptPosition=\"top\"\r\n    hideBackdrop title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\n\r\nimport InstanceRow from \"views/Instances/InstanceRow.js\";\r\nimport DeleteDialog from \"views/Instances/DeleteDialog.js\";\r\nimport CreateDialog from \"views/Instances/CreateDialog.js\";\r\nimport StartWithMediaDialog from \"views/Instances/StartWithMediaDialog.js\";\r\nimport InsertMediaDialog from \"views/Instances/InsertMediaDialog.js\";\r\nimport BuildImageDialog from \"views/Instances/BuildImageDialog.js\";\r\nimport ResetSystemDialog from \"views/Instances/ResetSystemDialog.js\";\r\nimport MigrateInstanceDialog from \"views/Instances/MigrateInstanceDialog.js\";\r\nimport BatchStopDialog from \"views/Instances/BatchStopDialog\";\r\nimport BatchDeleteDialog from \"views/Instances/BatchDeleteDialog\";\r\nimport BatchCreateDialog from \"views/Instances/BatchCreateDialog\";\r\n\r\n// import DetailDialog from \"views/Instances/DetailDialog.js\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { searchInstances, writeLog } from \"nano_api.js\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    \"&,& a,& a:hover,& a:focus\": {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\"\r\n    },\r\n    \"& a,& a:hover,& a:focus\": {\r\n      color: \"#FFFFFF\"\r\n    }\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create New Instance\",\r\n    batchCreate: 'Batch Create',\r\n    batchDelete: 'Batch Delete',\r\n    batchStop: 'Batch Stop',\r\n    enterBatch: 'Enter Batch Mode',\r\n    exitBatch: 'Exit Batch Mode',\r\n    tableTitle: \"Cloud Instances\",\r\n    name: \"Name\",\r\n    cell: \"Host Cell\",\r\n    address: \"Address\",\r\n    core: \"Core\",\r\n    memory: \"Memory\",\r\n    disk: \"Disk\",\r\n    status: \"Status\",\r\n    operates: \"Operates\",\r\n    noResource: \"No instances available\",\r\n    computePools: \"Compute Pools\",\r\n  },\r\n  'cn':{\r\n    createButton: \"创建云主机\",\r\n    batchCreate: '批量创建',\r\n    batchDelete: '批量删除',\r\n    batchStop: '批量停止',\r\n    enterBatch: '进入批量模式',\r\n    exitBatch: '退出批量模式',\r\n    tableTitle: \"云主机实例\",\r\n    name: \"名称\",\r\n    cell: \"承载节点\",\r\n    address: \"地址\",\r\n    core: \"核心\",\r\n    memory: \"内存\",\r\n    disk: \"磁盘\",\r\n    status: \"状态\",\r\n    operates: \"操作\",\r\n    noResource: \"没有云主机实例\",\r\n    computePools: \"计算资源池\",\r\n  }\r\n}\r\n\r\nexport default function InstancesInScope(props){\r\n    const classes = useStyles();\r\n    const [ instanceList, setInstanceList ] = React.useState(null);\r\n    const [ checkedMap, setCheckedMap ] = React.useState(new Map());\r\n    const [ batchMode, setBatchMode ] = React.useState(false);\r\n    const location = useLocation();\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const poolName = queryParams.get(\"pool\");\r\n    const cellName = queryParams.get(\"cell\");\r\n\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ mediaStartDialogVisible, setMediaStartDialogVisible ] = React.useState(false);\r\n    const [ insertMediaDialogVisible, setInsertMediaDialogVisible ] = React.useState(false);\r\n    const [ resetSystemDialogVisible, setResetSystemDialogVisible ] = React.useState(false);\r\n    const [ buildImageDialogVisible, setBuildImageDialogVisible ] = React.useState(false);\r\n    const [ migrateDialogVisible, setMigrateDialogVisible ] = React.useState(false);\r\n    const [ batchStopDialogVisible, setBatchStopDialogVisible ] = React.useState(false);\r\n    const [ batchDeleteDialogVisible, setBatchDeleteDialogVisible ] = React.useState(false);\r\n    const [ batchCreateDialogVisible, setBatchCreateDialogVisible ] = React.useState(false);\r\n    const [ currentInstance, setCurrentInstance ] = React.useState('');\r\n    const [ sourcePool, setSourcePool ] = React.useState('');\r\n    const [ sourceCell, setSourceCell ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const reloadAllInstances = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      const onLoadSuccess = dataList => {\r\n        var updated = checkedMap;\r\n        var modified = false;\r\n        if (!dataList){\r\n          setInstanceList([]);\r\n          if (0 !== updated.size){\r\n            updated.clear();\r\n            modified = true;\r\n          }\r\n        }else{\r\n          setInstanceList(dataList);\r\n          var removeTargets = [];\r\n          updated.forEach((checked, id) =>{\r\n            if(!dataList.some(instance => instance.id === id)){\r\n              //not exists\r\n              removeTargets.push(id);\r\n            }\r\n          });\r\n          dataList.forEach(instance =>{\r\n            const instanceID = instance.id;\r\n            if (!updated.has(instanceID)){\r\n              //new entry\r\n              updated.set(instanceID, false);\r\n              if(!modified){\r\n                modified = true;\r\n              }\r\n            }\r\n          })\r\n          if (0 !== removeTargets.length){\r\n            removeTargets.forEach(id =>{\r\n              updated.delete(id);\r\n              if(!modified){\r\n                modified = true;\r\n              }\r\n            })\r\n          }\r\n        }\r\n        if(modified){\r\n          setCheckedMap(new Map(updated));\r\n        }\r\n      }\r\n      searchInstances(poolName, cellName, onLoadSuccess, onLoadFail);\r\n    }, [poolName, cellName, checkedMap, showErrorMessage]);\r\n\r\n    //delete\r\n    const showDeleteDialog = (instanceID) =>{\r\n      setDeleteDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (instanceID) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' deleted');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //start with media\r\n    const showMediaStartDialog = (instanceID) =>{\r\n      setMediaStartDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeMediaStartDialog = () =>{\r\n      setMediaStartDialogVisible(false);\r\n    }\r\n\r\n    const onMediaStartSuccess = (instanceID) =>{\r\n      closeMediaStartDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' started with media');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //insert media\r\n    const showInsertMediaDialog = (instanceID) =>{\r\n      setInsertMediaDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeInsertMediaDialog = () =>{\r\n      setInsertMediaDialogVisible(false);\r\n    }\r\n\r\n    const onInsertMediaSuccess = (instanceID) =>{\r\n      closeInsertMediaDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' started with media');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //reset system\r\n    const showResetSystemDialog = (instanceID) =>{\r\n      setResetSystemDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeResetSystemDialog = () =>{\r\n      setResetSystemDialogVisible(false);\r\n    }\r\n\r\n    const onResetSystemSuccess = (instanceID) =>{\r\n      closeResetSystemDialog();\r\n      showNotifyMessage('guest system of ' + instanceID + ' reset');\r\n    };\r\n\r\n    //build image\r\n    const showBuildImageDialog = (instanceID) =>{\r\n      setBuildImageDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeBuildImageDialog = () =>{\r\n      setBuildImageDialogVisible(false);\r\n    }\r\n\r\n    const onBuildImageSuccess = (imageName) =>{\r\n      closeBuildImageDialog();\r\n      showNotifyMessage('new image ' + imageName + ' created from ' + currentInstance);\r\n    };\r\n\r\n    //migrate instance\r\n    const showMigrateDialog = (instanceID, pool, cell) =>{\r\n      setMigrateDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n      setSourcePool(pool);\r\n      setSourceCell(cell);\r\n    }\r\n\r\n    const closeMigrateDialog = () =>{\r\n      setMigrateDialogVisible(false);\r\n    }\r\n\r\n    const onMigrateSuccess = (instanceID) =>{\r\n      closeMigrateDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' migrated');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = (id) =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('new instance ' + id + ' created');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //batch stopping\r\n    const showBatchStopDialog = () =>{\r\n      setBatchStopDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchStopDialog = () =>{\r\n      setBatchStopDialogVisible(false);\r\n    }\r\n\r\n    const onBatchStopSuccess = () =>{\r\n      closeBatchStopDialog();\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //batch deleting\r\n    const showBatchDeleteDialog = () =>{\r\n      setBatchDeleteDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchDeleteDialog = () =>{\r\n      setBatchDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onBatchDeleteSuccess = () =>{\r\n      closeBatchDeleteDialog();\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //batch creating\r\n    const showBatchCreateDialog = () =>{\r\n      setBatchCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchCreateDialog = () =>{\r\n      setBatchCreateDialogVisible(false);\r\n    }\r\n\r\n    const onBatchCreateSuccess = () =>{\r\n      closeBatchCreateDialog();\r\n      reloadAllInstances();\r\n    };\r\n\r\n    const onStatusChange = () =>{\r\n      reloadAllInstances();\r\n    }\r\n\r\n    const enterBatchMode = () => {\r\n      var updated = new Map();\r\n      //uncheck all\r\n      for(var instanceID of checkedMap.keys()){\r\n        updated.set(instanceID, false);\r\n      }\r\n      setCheckedMap(updated);\r\n      setBatchMode(true);\r\n    }\r\n\r\n    const exitBatchMode = () => {\r\n      setBatchMode(false);\r\n    }\r\n    const handleInstanceChecked = (checked, instanceID) =>{\r\n      var checkedStatus = new Map(checkedMap);\r\n      checkedStatus.set(instanceID, checked);\r\n      setCheckedMap(checkedStatus);\r\n    }\r\n\r\n    const handleAllClicked = e =>{\r\n      const checked = e.target.checked;\r\n      var updated = new Map();\r\n      for(var instanceID of checkedMap.keys()){\r\n        updated.set(instanceID, checked);\r\n      }\r\n      setCheckedMap(updated);\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      var mounted = true\r\n      reloadAllInstances();\r\n      const updateInterval = 5 * 1000;\r\n      var timerID = setInterval(()=>{\r\n        if (mounted){\r\n          reloadAllInstances();\r\n        }\r\n      }, updateInterval);\r\n      return () =>{\r\n        mounted = false;\r\n        clearInterval(timerID);\r\n      }\r\n    }, [reloadAllInstances]);\r\n\r\n    if (!poolName){\r\n      console.log('pool name omit');\r\n      return redirectToLogin();\r\n    }\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === instanceList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === instanceList.length){\r\n      content = <Box textAlign=\"center\"><Info>{texts.noResource}</Info></Box>;\r\n    }else{\r\n      let nameHeader;\r\n      if(batchMode){\r\n        nameHeader = (\r\n          <Box display='flex' alignItems=\"center\">\r\n            <Box>\r\n              <Checkbox\r\n                onChange={handleAllClicked}\r\n                />\r\n            </Box>\r\n            <Box>\r\n              {texts.name}\r\n            </Box>\r\n          </Box>\r\n        );\r\n      }else{\r\n        nameHeader = texts.name;\r\n      }\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[nameHeader, texts.cell, texts.address, texts.core, texts.memory, texts.disk, texts.status, texts.operates]}\r\n          rows={\r\n            instanceList.map(instance =>{\r\n              const instanceID = instance.id;\r\n              return (\r\n                <InstanceRow\r\n                  key={instance.id}\r\n                  instance={instance}\r\n                  lang={lang}\r\n                  checked={checkedMap && checkedMap.has(instanceID) ? checkedMap.get(instanceID): false}\r\n                  checkable={batchMode}\r\n                  onCheckStatusChanged={handleInstanceChecked}\r\n                  onNotify={showNotifyMessage}\r\n                  onError={showErrorMessage}\r\n                  onDelete={showDeleteDialog}\r\n                  onMediaStart={showMediaStartDialog}\r\n                  onInsertMedia={showInsertMediaDialog}\r\n                  onResetSystem={showResetSystemDialog}\r\n                  onBuildImage={showBuildImageDialog}\r\n                  onStatusChange={onStatusChange}\r\n                  onMigrateInstance={showMigrateDialog}\r\n                  />\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    var breadcrumbs = [<Link to='/admin/compute_pools/' key={texts.computePools}>{texts.computePools}</Link>];\r\n    if(cellName){\r\n      breadcrumbs.push(<Link to={'/admin/instances/range/?pool=' + poolName} key={poolName}>{poolName}</Link>);\r\n      breadcrumbs.push(<Typography color=\"textPrimary\" key={cellName}>{cellName}</Typography>);\r\n    }else{\r\n      breadcrumbs.push(<Typography color=\"textPrimary\" key={poolName}>{poolName}</Typography>);\r\n    }\r\n\r\n    var buttonProperties = [\r\n      {\r\n        label: texts.createButton,\r\n        icon: AddIcon,\r\n        color: \"info\",\r\n        onClick: showCreateDialog,\r\n      },\r\n      {\r\n        label: texts.batchCreate,\r\n        icon: PlaylistAddIcon,\r\n        color: \"info\",\r\n        onClick: showBatchCreateDialog,\r\n      }\r\n    ];\r\n    if (batchMode){\r\n      buttonProperties.push(\r\n        {\r\n          label: texts.batchDelete,\r\n          icon: DeleteIcon,\r\n          color: \"danger\",\r\n          onClick: showBatchDeleteDialog,\r\n        },\r\n        {\r\n          label: texts.batchStop,\r\n          icon: PowerSettingsNewIcon,\r\n          color: \"info\",\r\n          onClick: showBatchStopDialog,\r\n        },\r\n        {\r\n          label: texts.exitBatch,\r\n          icon: ExitToAppIcon,\r\n          color: \"success\",\r\n          onClick: exitBatchMode,\r\n        },\r\n      );\r\n    }else{\r\n      buttonProperties.push(\r\n        {\r\n          label: texts.enterBatch,\r\n          icon: ListIcon,\r\n          color: \"info\",\r\n          onClick: enterBatchMode,\r\n        }\r\n      );\r\n    }\r\n\r\n    var batchTargets = [];\r\n    if(checkedMap){\r\n      checkedMap.forEach((checked, id) =>{\r\n        if(checked){\r\n          batchTargets.push(id);\r\n        }\r\n      });\r\n      batchTargets.sort();\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n            {breadcrumbs}\r\n          </Breadcrumbs>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttonProperties.map(({label, color, icon, onClick}, key) =>(\r\n                <Box key={key} m={1}>\r\n                  <Button size=\"sm\" color={color} round onClick={onClick}>\r\n                    {React.createElement(icon)}\r\n                    {label}\r\n                  </Button>\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={deleteDialogVisible}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <StartWithMediaDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={mediaStartDialogVisible}\r\n            onSuccess={onMediaStartSuccess}\r\n            onCancel={closeMediaStartDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <InsertMediaDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={insertMediaDialogVisible}\r\n            onSuccess={onInsertMediaSuccess}\r\n            onCancel={closeInsertMediaDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ResetSystemDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={resetSystemDialogVisible}\r\n            onSuccess={onResetSystemSuccess}\r\n            onCancel={closeResetSystemDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BuildImageDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={buildImageDialogVisible}\r\n            onSuccess={onBuildImageSuccess}\r\n            onCancel={closeBuildImageDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <MigrateInstanceDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            sourcePool={sourcePool}\r\n            sourceCell={sourceCell}\r\n            open={migrateDialogVisible}\r\n            onSuccess={onMigrateSuccess}\r\n            onCancel={closeMigrateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchStopDialog\r\n            lang={lang}\r\n            open={batchStopDialogVisible}\r\n            targets={batchStopDialogVisible? batchTargets : []}\r\n            onSuccess={onBatchStopSuccess}\r\n            onCancel={closeBatchStopDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchDeleteDialog\r\n            lang={lang}\r\n            open={batchDeleteDialogVisible}\r\n            targets={batchDeleteDialogVisible? batchTargets : []}\r\n            onSuccess={onBatchDeleteSuccess}\r\n            onCancel={closeBatchDeleteDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchCreateDialog\r\n            lang={lang}\r\n            open={batchCreateDialogVisible}\r\n            onSuccess={onBatchCreateSuccess}\r\n            onCancel={closeBatchCreateDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Box from '@material-ui/core/Box';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\r\nimport AlbumIcon from '@material-ui/icons/Album';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport LineChart from \"views/Dashboard/LineChart.js\";\r\nimport StackedBarChart from \"views/Dashboard/StackedBarChart.js\";\r\nimport MultiBarChart from \"views/Dashboard/MultiBarChart.js\";\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\n\r\nimport { truncateToRadix, bytesToString } from 'utils.js';\r\nimport { getInstanceStatus, getInstanceConfig } from \"nano_api.js\";\r\n\r\nimport {\r\n  primaryColor,\r\n  infoColor,\r\n  successColor,\r\n  warningColor,\r\n  grayColor,\r\n  whiteColor,\r\n  roseColor,\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Instance',\r\n    cores: 'Cores',\r\n    memory: 'Memory',\r\n    disks: 'Disk',\r\n    autoStartup: 'Auto Startup',\r\n    internalAddress: 'Internal Address',\r\n    externalAddress: 'External Address',\r\n    ioUsage: 'IO Usage',\r\n    stopped: 'Stopped ',\r\n    running: 'Running ',\r\n    used: 'Used ',\r\n    available: 'Available ',\r\n    coresUsed: 'Cores Used',\r\n    throughput: 'Throughput',\r\n    receive: 'Receive ',\r\n    send: 'Send ',\r\n    write: 'Write ',\r\n    read: 'Read ',\r\n    flags: 'Running Flags',\r\n    mediaAttached: 'Media Attached',\r\n  },\r\n  'cn':{\r\n    title: '云主机',\r\n    cores: '核心数',\r\n    memory: '内存',\r\n    disks: '磁盘',\r\n    autoStartup: '开机启动',\r\n    internalAddress: '内部地址',\r\n    externalAddress: '外部地址',\r\n    ioUsage: 'IO吞吐量',\r\n    stopped: '停止',\r\n    running: '运行',\r\n    used: '已用',\r\n    available: '可用',\r\n    coresUsed: '核心已占用',\r\n    throughput: '吞吐量',\r\n    receive: '接收',\r\n    send: '发送',\r\n    write: '写入',\r\n    read: '读取',\r\n    flags: '运行标志',\r\n    mediaAttached: '已挂载媒体',\r\n  }\r\n}\r\n\r\nconst shadowChartPanel = {\r\n  borderRadius: \"3px\",\r\n  marginTop: \"-20px\",\r\n  // marginLeft: \"10px\",\r\n  // marginRight: \"10px\",\r\n  padding: \"15px\",\r\n};\r\n\r\nconst styles = {\r\n  ...dashboardStyles,\r\n  ...fontStyles,\r\n  cardWithDivider: {\r\n    borderTop: \"1px solid \" + grayColor[10],\r\n  },\r\n  coresChart: {\r\n    ...shadowChartPanel,\r\n    background: successColor[0],\r\n  },\r\n  memoryChart: {\r\n    ...shadowChartPanel,\r\n    background: infoColor[0],\r\n  },\r\n  networkChart: {\r\n    ...shadowChartPanel,\r\n    background: warningColor[0],\r\n  },\r\n  diskChart: {\r\n    ...shadowChartPanel,\r\n    background: roseColor[0],\r\n  },\r\n  disableChart: {\r\n    ...shadowChartPanel,\r\n    background: grayColor[5],\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst SingleInstanceStatus = props => {\r\n  const { lang, status } = props;\r\n  const classes = useStyles();\r\n  const texts = i18n[lang];\r\n  let title;\r\n  if (!status.running){\r\n    title = (\r\n      <Typography component='span' className={classes.cardTitle}>\r\n        <StopIcon className={classes.mutedText}/>\r\n        {texts.title + ': ' + status.name + ' ( ' + texts.stopped + ' )'}\r\n      </Typography>\r\n    )\r\n  }else{\r\n    //online\r\n    title = (\r\n      <Typography component='span' className={classes.cardTitle}>\r\n        <PlayArrowIcon className={classes.successText}/>\r\n        {texts.title + ': ' + status.name + ' ( ' + texts.running + ' )'}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  let content, dataLabels;\r\n  if (!status.running){\r\n    content = new Array(4).fill(\r\n      <GridItem xs={8} sm={6} md={3}>\r\n        <Box m={0} p={0} className={classes.disableChart} boxShadow={2}>\r\n        </Box>\r\n      </GridItem>\r\n    );\r\n    dataLabels = [];\r\n  }else{\r\n    const MiB = 1 << 20;\r\n\r\n    //core usage\r\n    var usedCores = {\r\n      label: texts.coresUsed,\r\n      color: whiteColor,\r\n      data: [],\r\n    }\r\n\r\n    var maxCores = 0;\r\n    status.coreRecords.forEach( data =>{\r\n      usedCores.data.push(data.current);\r\n      maxCores = Math.max(maxCores, data.max);\r\n    })\r\n\r\n    const coresChart = (\r\n      <GridItem xs={8} sm={6} md={3} key='cores-usage'>\r\n        <Box m={0} p={0} className={classes.coresChart} boxShadow={2}>\r\n          <LineChart\r\n            series={[usedCores]}\r\n            minTickStep={1}\r\n            maxValue={100}\r\n            maxTicks={5}\r\n            displayValue={tick => tick.toString() + '%'}\r\n            />\r\n        </Box>\r\n      </GridItem>\r\n    )\r\n    //memory\r\n    var usedMemory = {\r\n      label: texts.used + texts.memory,\r\n      color: grayColor[4],\r\n      data: [],\r\n    };\r\n    var availableMemory = {\r\n      label: texts.available + texts.memory,\r\n      color: successColor[1],\r\n      data: [],\r\n    };\r\n    status.memoryRecords.forEach( data =>{\r\n      usedMemory.data.push(data.used);\r\n      availableMemory.data.push(data.available)\r\n    })\r\n    const memoryChart = (\r\n      <GridItem xs={8} sm={6} md={3} key='memory-usage'>\r\n        <Box m={0} p={0} className={classes.memoryChart} boxShadow={2}>\r\n          <StackedBarChart\r\n            series={[usedMemory, availableMemory]}\r\n            minTickStep={1 << 10}\r\n            displayValue={ mib => {\r\n              const GiB = 1 << 10;\r\n              if (0 === mib){\r\n                return '0';\r\n              }else if (mib >= GiB){\r\n                if (0 === mib % GiB){\r\n                  return (mib / GiB).toString() + ' GB';\r\n                }else{\r\n                  return (mib / GiB).toFixed(2) + ' GB';\r\n                }\r\n              }else {\r\n                return mib.toString() + ' MB';\r\n              }\r\n            }}\r\n            />\r\n        </Box>\r\n      </GridItem>\r\n    )\r\n    //network\r\n    var networkReceive = {\r\n      label: texts.receive + texts.throughput,\r\n      color: infoColor[3],\r\n      data: [],\r\n    };\r\n    var networkSend = {\r\n      label: texts.send + texts.throughput,\r\n      color: primaryColor[1],\r\n      data: [],\r\n    };\r\n    status.networkSpeed.forEach( data =>{\r\n      networkReceive.data.push(truncateToRadix(data.receive/ MiB, 2) );\r\n      networkSend.data.push(truncateToRadix(data.send/ MiB, 2));\r\n    })\r\n    const displaySpeedByMB = speed => {\r\n      const gb = 1 << 10;\r\n      if (speed >= gb){\r\n        if (0 === speed % gb){\r\n          return (speed / gb).toString() + ' GB/s';\r\n        }else{\r\n          return (speed / gb).toFixed(2) + ' GB/s';\r\n        }\r\n      }else{\r\n        if (Number.isInteger(speed)){\r\n          return speed.toString() + ' MB/s';\r\n        }else{\r\n          return speed.toFixed(2) + ' MB/s';\r\n        }\r\n      }\r\n    }\r\n    const networkSeries = [ networkReceive, networkSend ];\r\n    const networkChart = (\r\n      <GridItem xs={8} sm={6} md={3} key='network-usage'>\r\n        <Box m={0} p={0} className={classes.networkChart} boxShadow={2}>\r\n          <MultiBarChart\r\n            series={networkSeries}\r\n            displayValue={displaySpeedByMB}\r\n            minTickStep={1}\r\n            />\r\n        </Box>\r\n      </GridItem>\r\n    )\r\n    //disk IO\r\n    var diskWrite = {\r\n      label: texts.write + texts.throughput,\r\n      color: successColor[1],\r\n      data: [],\r\n    };\r\n    var diskRead = {\r\n      label: texts.read + texts.throughput,\r\n      color: infoColor[3],\r\n      data: [],\r\n    };\r\n    status.diskSpeed.forEach( data =>{\r\n      diskWrite.data.push(truncateToRadix(data.write / MiB, 2));\r\n      diskRead.data.push(truncateToRadix(data.read / MiB, 2));\r\n    })\r\n    const diskSeries = [ diskWrite, diskRead ];\r\n    const diskIOChart = (\r\n      <GridItem xs={8} sm={6} md={3} key='io-usage'>\r\n        <Box m={0} p={0} className={classes.diskChart} boxShadow={2}>\r\n          <MultiBarChart\r\n            series={diskSeries}\r\n            displayValue={displaySpeedByMB}\r\n            minTickStep={1}\r\n            />\r\n        </Box>\r\n      </GridItem>\r\n    )\r\n    content = [\r\n      coresChart,\r\n      memoryChart,\r\n      networkChart,\r\n      diskIOChart,\r\n    ];\r\n\r\n    const coreLabel = (\r\n      <Box m={1} p={2} key='core-label'>\r\n        <Typography component='span' className={classes.cardTitle}>\r\n          {texts.cores + ': '}\r\n        </Typography>\r\n        <Typography component='span'>\r\n          {status.cores}\r\n        </Typography>\r\n      </Box>\r\n    );\r\n    const memoryLabel = (\r\n      <Box m={1} p={2} key='memory-label'>\r\n        <Typography component='span' className={classes.cardTitle}>\r\n          {texts.memory + ': '}\r\n        </Typography>\r\n        <Typography component='span'>\r\n          {bytesToString(status.memory)}\r\n        </Typography>\r\n      </Box>\r\n    );\r\n\r\n    var sizeLabels = [];\r\n    status.disks.forEach(size =>{\r\n      sizeLabels.push(bytesToString(size));\r\n    });\r\n    const diskLabel = (\r\n      <Box m={1} p={2} key='disk-label'>\r\n        <Typography component='span' className={classes.cardTitle}>\r\n          {texts.disks + ': '}\r\n        </Typography>\r\n        <Typography component='span'>\r\n          {sizeLabels.join(' / ')}\r\n        </Typography>\r\n      </Box>\r\n    );\r\n\r\n    const internalLabel = (\r\n      <Box m={1} p={2} key='internal-label'>\r\n        <Typography component='span' className={classes.cardTitle}>\r\n          {texts.internalAddress + ': '}\r\n        </Typography>\r\n        <Typography component='span'>\r\n          {status.internal&&status.internal.network_address? status.internal.network_address:''}\r\n        </Typography>\r\n      </Box>\r\n    );\r\n\r\n    const externalLabel = (\r\n      <Box m={1} p={2} key='external-label'>\r\n        <Typography component='span' className={classes.cardTitle}>\r\n          {texts.externalAddress + ': '}\r\n        </Typography>\r\n        <Typography component='span'>\r\n          {status.external&&status.external.network_address? status.external.network_address:''}\r\n        </Typography>\r\n      </Box>\r\n    );\r\n\r\n    var flags = [];\r\n    if(status.auto_start){\r\n      flags.push(\r\n        <Tooltip\r\n          title={texts.autoStartup}\r\n          placement=\"top\"\r\n          key={texts.autoStartup}\r\n          >\r\n          <AllInclusiveIcon className={classes.infoText}/>\r\n        </Tooltip>\r\n      );\r\n    }\r\n    if(status.media_attached){\r\n      flags.push(\r\n        <Tooltip\r\n          title={texts.mediaAttached}\r\n          placement=\"top\"\r\n          key={texts.mediaAttached}\r\n          >\r\n          <AlbumIcon className={classes.infoText}/>\r\n        </Tooltip>\r\n      );\r\n    }\r\n    const flagLabel = (\r\n      <Box m={1} p={2} key='flag-label'>\r\n        <Typography component='span' className={classes.cardTitle}>\r\n          {texts.flags + ': '}\r\n        </Typography>\r\n        {flags}\r\n      </Box>\r\n    );\r\n\r\n    dataLabels = [\r\n      coreLabel,\r\n      memoryLabel,\r\n      diskLabel,\r\n      internalLabel,\r\n      externalLabel,\r\n      flagLabel,\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <Card chart>\r\n      <CardHeader>\r\n        <GridContainer>\r\n          {content}\r\n        </GridContainer>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {title}\r\n        <Box m={0} p={0} className={classes.cardWithDivider} display='flex' alignItems='center'>\r\n          {dataLabels}\r\n        </Box>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default function InstanceStatus(props) {\r\n  const CoreArraySize = 5;\r\n  const MemoryArraySize = 5;\r\n  const NetworkIOArraySize = 5;\r\n  const DiskIOArraySize = 5;\r\n  const IntervalInSecond = 2;\r\n  const instanceID = props.match.params.id;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ instance, setInstance ] = React.useState(null);\r\n  const [ notifyMessage, setNotifyMessage ] = React.useState('');\r\n\r\n  const closeNotify = React.useCallback(() => {\r\n    setNotifyMessage(\"\");\r\n  }, [setNotifyMessage]);\r\n\r\n  const showErrorMessage = React.useCallback((msg) => {\r\n    if (!mounted){\r\n      return;\r\n    }\r\n    const notifyDuration = 3000;\r\n    setNotifyMessage(msg);\r\n    setTimeout(closeNotify, notifyDuration);\r\n  }, [setNotifyMessage, closeNotify, mounted]);\r\n\r\n  React.useEffect(() =>{\r\n    setMounted(true)\r\n\r\n    var coreRecords = new Array(CoreArraySize).fill({\r\n      current: 0,\r\n      max: 0,\r\n    });\r\n    var memoryRecords = new Array(MemoryArraySize).fill({\r\n      available: 0,\r\n      used: 0,\r\n    });\r\n    var networkRecords = new Array(NetworkIOArraySize).fill({\r\n      receive: 0,\r\n      send: 0,\r\n    });\r\n    var diskRecords = new Array(DiskIOArraySize).fill({\r\n      write: 0,\r\n      read: 0,\r\n    });\r\n\r\n    var networkSpeed = new Array(NetworkIOArraySize).fill({\r\n      receive: 0,\r\n      send: 0,\r\n    });\r\n    var diskSpeed = new Array(DiskIOArraySize).fill({\r\n      write: 0,\r\n      read: 0,\r\n    });\r\n\r\n    var speedReady = false;\r\n    let timerID, poolName, cellName;\r\n    const onGetStatusSuccess = status => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const MiB = 1 << 20;\r\n      coreRecords.shift();\r\n      coreRecords.push({\r\n        current: truncateToRadix(status.cpu_usage, 2),\r\n        max: status.cores,\r\n      });\r\n      let usedMemory, availableMemory;\r\n      if (status.memory_available > status.memory){\r\n        showErrorMessage(\"abnormal available memory, \" + status.memory_available + \" > allocated \" +  status.memory);\r\n        availableMemory = status.memory;\r\n        usedMemory = 0;\r\n      }else{\r\n        availableMemory = status.memory_available;\r\n        usedMemory = status.memory - status.memory_available;\r\n      }\r\n      memoryRecords.shift();\r\n      memoryRecords.push({\r\n        available: truncateToRadix(availableMemory/MiB, 2),\r\n        used: truncateToRadix( usedMemory/MiB, 2),\r\n      });\r\n      networkRecords.shift();\r\n      networkRecords.push({\r\n        receive: status.bytes_received,\r\n        send: status.bytes_sent,\r\n      });\r\n      diskRecords.shift();\r\n      diskRecords.push({\r\n        write: status.bytes_written,\r\n        read: status.bytes_read,\r\n      });\r\n\r\n      if(!speedReady){\r\n        speedReady = true;\r\n      }else{\r\n        const receiveSpeed = (networkRecords[networkRecords.length - 1].receive - networkRecords[networkRecords.length - 2].receive) / IntervalInSecond;\r\n        const sendSpeed = (networkRecords[networkRecords.length - 1].send - networkRecords[networkRecords.length - 2].send) / IntervalInSecond;\r\n        const writeSpeed = (diskRecords[diskRecords.length - 1].write - diskRecords[diskRecords.length - 2].write) / IntervalInSecond;\r\n        const readSpeed = (diskRecords[diskRecords.length - 1].read - diskRecords[diskRecords.length - 2].read) / IntervalInSecond;\r\n        networkSpeed.shift();\r\n        networkSpeed.push({\r\n          receive: receiveSpeed,\r\n          send: sendSpeed,\r\n        });\r\n        diskSpeed.shift();\r\n        diskSpeed.push({\r\n          write: writeSpeed,\r\n          read: readSpeed,\r\n        });\r\n      }\r\n\r\n      const updated = {\r\n        ...status,\r\n        pool: poolName,\r\n        cell: cellName,\r\n        coreRecords: coreRecords,\r\n        memoryRecords: memoryRecords,\r\n        networkRecords: networkRecords,\r\n        diskRecords: diskRecords,\r\n        networkSpeed: networkSpeed,\r\n        diskSpeed: diskSpeed,\r\n      };\r\n      setInstance(updated);\r\n      setInitialed(true);\r\n    }\r\n\r\n    const onGetConfigSuccess = config =>{\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      poolName = config.pool;\r\n      cellName = config.cell;\r\n\r\n      getInstanceStatus(instanceID, onGetStatusSuccess, showErrorMessage);\r\n\r\n      const updateInterval = IntervalInSecond * 1000;\r\n      timerID = setInterval(()=>{\r\n        if (!mounted){\r\n          return;\r\n        }\r\n        getInstanceStatus(instanceID, onGetStatusSuccess, showErrorMessage);\r\n      }, updateInterval);\r\n    }\r\n\r\n    //get config\r\n    getInstanceConfig(instanceID, onGetConfigSuccess, showErrorMessage)\r\n\r\n    return () =>{\r\n      setMounted(false);\r\n      if(timerID){\r\n          clearInterval(timerID);\r\n      }\r\n    }\r\n  }, [instanceID, showErrorMessage, mounted, initialed]);\r\n\r\n  let content, headers;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    headers = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <GridItem xs={12}>\r\n        <SingleInstanceStatus status={instance} lang={props.lang}/>\r\n      </GridItem>\r\n    );\r\n    // content = <div/>;\r\n    const breadcrumbs = [\r\n      <Link to={'/admin/instances/range/?pool=' + instance.pool} key={instance.pool}>{instance.pool}</Link>,\r\n      <Link to={'/admin/instances/range/?pool=' + instance.pool + '&cell=' + instance.cell} key={instance.cell}>{instance.cell}</Link>,\r\n      <Typography color=\"textPrimary\" key={instance.name}>{instance.name}</Typography>,\r\n    ];\r\n    headers = (\r\n      <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\r\n        {breadcrumbs}\r\n      </Breadcrumbs>\r\n    )\r\n  }\r\n\r\n  return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          {headers}\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        {content}\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color=\"warning\"\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n      </GridContainer>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { createInstanceSnapshot } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create Snapshot',\r\n    name: \"Name\",\r\n    description: 'Description',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建云主机快照',\r\n    name: \"名称\",\r\n    description: '描述',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function CreateSnapshotDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n  };\r\n  const { lang, open, instanceID, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onCreateFail = (msg) =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = snapshotName =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(snapshotName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    if(!request.name){\r\n      onCreateFail('must specify snapshot name');\r\n      return;\r\n    }\r\n    if(!request.description){\r\n      onCreateFail('must specify description');\r\n      return;\r\n    }\r\n\r\n    createInstanceSnapshot(instanceID, request.name, request.description, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const inputs = [\r\n    {\r\n      type: \"text\",\r\n      label: texts.name,\r\n      onChange: handleRequestPropsChanged('name'),\r\n      value: request.name,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.description,\r\n      onChange: handleRequestPropsChanged('description'),\r\n      value: request.description,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n  ]\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { deleteInstanceSnapshot } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Snapshot',\r\n    content: 'Are you sure to delete snapshot ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除云主机快照',\r\n    content: '是否删除云主机快照 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteSnapshotDialog(props){\r\n  const { lang, instanceID, snapshotName, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const content = texts.content + snapshotName;\r\n  const onDeleteFail = (msg) =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(snapshotName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    deleteInstanceSnapshot(instanceID, snapshotName, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { restoreInstanceSnapshot } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Revert Snapshot',\r\n    content: 'Are you sure to revert snapshot ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '恢复云主机快照',\r\n    content: '是否恢复云主机快照 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function RevertSnapshotDialog(props){\r\n  const { lang, instanceID, snapshotName, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const content = texts.content + snapshotName;\r\n  const onRevertFail = (msg) =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRevertSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(snapshotName);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    restoreInstanceSnapshot(instanceID, snapshotName, onRevertSuccess, onRevertFail);\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport CreateSnapshotDialog from \"views/Instances/CreateSnapshotDialog.js\";\r\nimport DeleteSnapshotDialog from \"views/Instances/DeleteSnapshotDialog.js\";\r\nimport RevertSnapshotDialog from \"views/Instances/RevertSnapshotDialog.js\";\r\nimport { getLoggedSession, redirectToLogin } from 'utils.js';\r\nimport { getInstanceConfig, queryInstanceSnapshots, getInstanceSnapshot, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  panel: {\r\n    background: grey[100],\r\n  }\r\n}\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Snapshots of ',\r\n    noResource: 'No snapshots created',\r\n    back: 'Back',\r\n    create: 'Create New Snapshot',\r\n    delete: 'Delete',\r\n    revert: 'Revert',\r\n    current: 'Current',\r\n    name: 'Name',\r\n    description: 'Description',\r\n    createdTime: 'Created Time',\r\n    type: 'Type',\r\n    offline: 'Offline Snapshot',\r\n    realtime: 'Realtime Snapshot',\r\n  },\r\n  'cn':{\r\n    title: '云主机快照:',\r\n    noResource: '尚未创建云主机快照',\r\n    back: '返回',\r\n    create: '创建新快照',\r\n    delete: '删除',\r\n    revert: '恢复',\r\n    current: '当前',\r\n    name: '快照名称',\r\n    description: '描述',\r\n    createdTime: '创建时间',\r\n    type: '类型',\r\n    offline: '离线快照',\r\n    realtime: '实时快照',\r\n  }\r\n}\r\n\r\nexport default function Snapshots(props){\r\n    const useStyles = makeStyles(styles);\r\n    const classes = useStyles();\r\n    const instanceID = props.match.params.id;\r\n    const [ snapshots, setSnapshots ] = React.useState(null);\r\n    const [ selectedSnapshot, setSelectedSnapshot] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ revertDialogVisible, setRevertDialogVisible ] = React.useState(false);\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const onFail = React.useCallback(msg =>{\r\n      showErrorMessage(msg);\r\n    }, [showErrorMessage]);\r\n\r\n    const buildChildrenNode = React.useCallback((parent, current, dependent) =>{\r\n      var nodes = [];\r\n      var children = dependent.get(parent);\r\n      children.forEach( name => {\r\n        var node = {\r\n          name: name,\r\n        }\r\n        if (current === name){\r\n          node.isCurrent = true;\r\n        }\r\n        if (dependent.has(name)){\r\n          node.children = buildChildrenNode(name, current, dependent);\r\n        }\r\n        nodes.push(node);\r\n      });\r\n      return nodes;\r\n    }, []);\r\n\r\n    const reloadSnapshots = React.useCallback(instanceName => {\r\n      const onQuerySnapshotSuccess = data =>{\r\n        var rootName = '';\r\n        var current = '';\r\n        var rootNode = {};\r\n\r\n        //convert object to Map\r\n        var snapshotMap = new Map();\r\n        Object.keys(data).forEach((key) =>{\r\n          snapshotMap.set(key, data[key]);\r\n        });\r\n        if (0 !== snapshotMap.length){\r\n          var dependentMap = new Map();\r\n          //build tree\r\n          snapshotMap.forEach( (snapshot, name) =>{\r\n            if (snapshot.is_root){\r\n              rootName = name;\r\n            }\r\n            if (snapshot.is_current){\r\n              current = name;\r\n            }\r\n            if (snapshot.backing){\r\n              var parentName = snapshot.backing;\r\n              if (dependentMap.has(parentName)){\r\n                dependentMap.get(parentName).push(name);\r\n              }else{\r\n                dependentMap.set(parentName, [name]);\r\n              }\r\n            }\r\n          });\r\n          if('' !== rootName){\r\n            rootNode.name = rootName;\r\n            if(rootName === current){\r\n              rootNode.isCurrent = true;\r\n            }\r\n            if(dependentMap.has(rootName)){\r\n              rootNode.children = buildChildrenNode(rootName, current, dependentMap);\r\n            }\r\n          }\r\n        }\r\n\r\n        if(instanceName){\r\n          setSnapshots({\r\n            name: instanceName,\r\n            rootName: rootName,\r\n            current: current,\r\n            rootNode: rootNode,\r\n          });\r\n        }else{\r\n          setSnapshots(previous =>({\r\n            ...previous,\r\n            rootName: rootName,\r\n            current: current,\r\n            rootNode: rootNode,\r\n          }));\r\n        }\r\n\r\n      }\r\n      queryInstanceSnapshots(instanceID, onQuerySnapshotSuccess, onFail);\r\n    }, [instanceID, onFail, buildChildrenNode]);\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = snapshotName =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('new snapshot '+ snapshotName + ' created for ' + snapshots.name);\r\n      reloadSnapshots();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = () =>{\r\n      setDeleteDialogVisible(true);\r\n    };\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = snapshotName =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('snapshot '+ snapshotName + ' deleted');\r\n      reloadSnapshots();\r\n    };\r\n\r\n    //revert\r\n    const showRevertDialog = () =>{\r\n      setRevertDialogVisible(true);\r\n    };\r\n\r\n    const closeRevertDialog = () =>{\r\n      setRevertDialogVisible(false);\r\n    }\r\n\r\n    const onRevertSuccess = snapshotName =>{\r\n      closeRevertDialog();\r\n      showNotifyMessage('restored to snapshot '+ snapshotName);\r\n      reloadSnapshots();\r\n    };\r\n\r\n    const onSelectSnapshot = name =>{\r\n      const onQuerySuccess = snapshot =>{\r\n        setSelectedSnapshot({\r\n          ...snapshot,\r\n          name: name,\r\n        });\r\n      }\r\n      getInstanceSnapshot(instanceID, name, onQuerySuccess, onFail);\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      const onGetInstanceSuccess = status =>{\r\n        reloadSnapshots(status.name);\r\n      }\r\n      getInstanceConfig(instanceID, onGetInstanceSuccess, onFail);\r\n    }, [instanceID, onFail, reloadSnapshots]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content, title;\r\n    var buttons = [];\r\n    if (null === snapshots){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n      title = '';\r\n    }else{\r\n      if ('' === snapshots.rootName){\r\n        content = <Box display='flex' justifyContent=\"center\">{texts.noResource}</Box>;\r\n      }else{\r\n        var expanded = [];\r\n        const nodeToTree = node => {\r\n          let label;\r\n          if(node.isCurrent){\r\n            label = node.name + '( '+ texts.current +' )';\r\n          }else{\r\n            label = node.name;\r\n          }\r\n          expanded.push(node.name);\r\n          var props = {\r\n            nodeId: node.name,\r\n            label: label,\r\n            key: node.name,\r\n            onClick: e =>{\r\n              e.preventDefault();\r\n              onSelectSnapshot(node.name);\r\n            },\r\n          }\r\n          if(node.name === snapshots.rootName){\r\n            props.icon = <FolderIcon/>\r\n          }else if (node.name === snapshots.current){\r\n            props.icon = <DoubleArrowIcon/>\r\n          }\r\n          if(node.children){\r\n            var childrenNodes = [];\r\n            node.children.forEach(child =>{\r\n              childrenNodes.push(nodeToTree(child));\r\n            })\r\n            props.children = childrenNodes;\r\n          }\r\n          return React.createElement(TreeItem, props);\r\n        }\r\n\r\n        const rootFolder = nodeToTree(snapshots.rootNode);\r\n        const snapshotTree = (\r\n          <TreeView\r\n            defaultCollapseIcon={<SubdirectoryArrowRightIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n            defaultEndIcon={<CameraAltIcon/>}\r\n            defaultExpanded={expanded}\r\n            >\r\n            {rootFolder}\r\n          </TreeView>);\r\n\r\n        let selectPanel;\r\n        if(selectedSnapshot){\r\n          var tableData = [\r\n            {\r\n              title: texts.name,\r\n              value: selectedSnapshot.name,\r\n            },\r\n            {\r\n              title: texts.description,\r\n              value: selectedSnapshot.description,\r\n            },\r\n            {\r\n              title: texts.createdTime,\r\n              value: selectedSnapshot.create_time,\r\n            },\r\n            {\r\n              title: texts.type,\r\n              value: selectedSnapshot.running? texts.realtime : texts.offline,\r\n            },\r\n          ];\r\n          const panelButtons = [\r\n            <Button size=\"sm\" color=\"info\" onClick={showRevertDialog}>\r\n              <RestoreIcon />{texts.revert}\r\n            </Button>,\r\n            <Button size=\"sm\" color=\"info\" onClick={showDeleteDialog}>\r\n              <DeleteIcon />{texts.delete}\r\n            </Button>,\r\n          ];\r\n\r\n          selectPanel = (\r\n            <Paper className={classes.panel}>\r\n              <Box p={2} m={1}>\r\n                <Table  size=\"small\">\r\n                  <TableBody>\r\n                    {\r\n                      tableData.map(row => (\r\n                        <TableRow key={row.title}>\r\n                          <TableCell component='th'>\r\n                            <Typography component='span' variant='subtitle1'>\r\n                              {row.title}\r\n                            </Typography>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Typography component='span'>\r\n                              {row.value}\r\n                            </Typography>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n              <Box display='flex' m={2}>\r\n                {\r\n                  panelButtons.map((button, key) => (\r\n                    <Box key={key} m={2} p={1}>\r\n                      {button}\r\n                    </Box>\r\n                  ))\r\n                }\r\n              </Box>\r\n            </Paper>\r\n          )\r\n        }else{\r\n          selectPanel = <div/>\r\n        }\r\n        content = (\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={6}>\r\n              {snapshotTree}\r\n            </GridItem>\r\n            <GridItem xs={12} sm={6}>\r\n              {selectPanel}\r\n            </GridItem>\r\n          </GridContainer>\r\n        );\r\n      }\r\n\r\n      title = texts.title + snapshots.name;\r\n      buttons = [\r\n        <Button size=\"sm\" color=\"info\" round onClick={() =>{\r\n          props.history.goBack();\r\n        }}><NavigateBeforeIcon />{texts.back}</Button>,\r\n        <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><AddIcon />{texts.create}</Button>,\r\n      ];\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n          {\r\n            buttons.map((button, key) => (\r\n              <Box key={key} pl={2} pr={2}>\r\n                {button}\r\n              </Box>\r\n            ))\r\n          }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              {title}\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateSnapshotDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            instanceID={instanceID}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteSnapshotDialog\r\n            lang={lang}\r\n            open={deleteDialogVisible}\r\n            instanceID={instanceID}\r\n            snapshotName={selectedSnapshot? selectedSnapshot.name: ''}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <RevertSnapshotDialog\r\n            lang={lang}\r\n            open={revertDialogVisible}\r\n            instanceID={instanceID}\r\n            snapshotName={selectedSnapshot? selectedSnapshot.name: ''}\r\n            onSuccess={onRevertSuccess}\r\n            onCancel={closeRevertDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyInstanceName } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Instance Name',\r\n    current: 'Current Name',\r\n    new: 'New Name',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改云主机名称',\r\n    current: '当前云主机名',\r\n    new: '新主机名',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyNameDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n  };\r\n  const { lang, open, instanceID, current, onSuccess, onCancel } = props;\r\n  const currentName = current ? current.name.slice(current.group.length + 1) : '';\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = instanceName =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(instanceName, instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    if(!request.name){\r\n      onModifyFail('must specify new instance name');\r\n      return;\r\n    }\r\n    const newName = [current.group, request.name].join('.');\r\n\r\n    if(currentName === newName){\r\n      onModifyFail('no need to modify');\r\n      return;\r\n    }\r\n\r\n    modifyInstanceName(instanceID, newName, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    return ()=> setMounted(false);\r\n  }, [open]);\r\n\r\n  const inputs = [\r\n    {\r\n      type: \"text\",\r\n      label: texts.current,\r\n      value: currentName,\r\n      disabled: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.new,\r\n      onChange: handleRequestPropsChanged('name'),\r\n      value: request.name,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n  ];\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyInstanceCores } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Instance Cores',\r\n    current: 'Current Cores',\r\n    new: 'New Cores',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改核心数',\r\n    current: '当前核心数',\r\n    new: '新核心数',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyCoresDialog(props){\r\n  const defaultValues = {\r\n    cores: '',\r\n  };\r\n  const { lang, open, instanceID, current, onSuccess, onCancel } = props;\r\n  const currentCores = current ? current.cores : 0;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = cores =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(cores, instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    if(!request.cores){\r\n      onModifyFail('must specify new instance cores');\r\n      return;\r\n    }\r\n    const newCores = Number.parseInt(request.cores);\r\n    if(Number.isNaN(newCores)){\r\n      onModifyFail('invalid cores number: ' + request.cores);\r\n      return;\r\n    }\r\n\r\n    if(currentCores === newCores){\r\n      onModifyFail('no need to modify');\r\n      return;\r\n    }\r\n\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    modifyInstanceCores(instanceID, newCores, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    return ()=> setMounted(false);\r\n  }, [open]);\r\n\r\n  const inputs = [\r\n    {\r\n      type: \"text\",\r\n      label: texts.current,\r\n      value: currentCores.toString(),\r\n      disabled: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.new,\r\n      onChange: handleRequestPropsChanged('cores'),\r\n      value: request.cores,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n  ];\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n\r\n};\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyInstanceMemory } from 'nano_api.js';\r\nimport { bytesToString } from 'utils.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Memory of Instance',\r\n    current: 'Current Memory Size',\r\n    new: 'New Memory Size (MB)',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改内存大小',\r\n    current: '当前内存容量',\r\n    new: '新内存容量(MB)',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyMemoryDialog(props){\r\n  const defaultValues = {\r\n    memory: '',\r\n  };\r\n  const { lang, open, instanceID, current, onSuccess, onCancel } = props;\r\n  const currentMemory = current ? current.memory : 0;\r\n  const currentLabel = bytesToString(currentMemory);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = newMemory =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(newMemory, instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    if(!request.memory){\r\n      onModifyFail('must specify new memory size');\r\n      return;\r\n    }\r\n\r\n    const memoryInMB = Number.parseInt(request.memory);\r\n    if(Number.isNaN(memoryInMB)){\r\n      onModifyFail('invalid memory size: ' + request.memory);\r\n      return;\r\n    }\r\n\r\n    const newMemory = memoryInMB * (1 << 20);\r\n    if(currentMemory === newMemory){\r\n      onModifyFail('no need to modify');\r\n      return;\r\n    }\r\n\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    modifyInstanceMemory(instanceID, newMemory, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    return ()=> setMounted(false);\r\n  }, [open]);\r\n\r\n  const inputs = [\r\n    {\r\n      type: \"text\",\r\n      label: texts.current,\r\n      value: currentLabel,\r\n      disabled: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.new,\r\n      onChange: handleRequestPropsChanged('memory'),\r\n      value: request.memory,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n  ];\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyInstanceAdminPassword, getInstanceAdminPassword } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Admin Password',\r\n    name: 'Admin Name',\r\n    new: 'New Password (generate a new one when blank)',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改管理员密码',\r\n    name: '当前管理员',\r\n    new: '新密码(留空则自动生成)',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyPasswordDialog(props){\r\n  const defaultValues = {\r\n    user: \"\",\r\n    password: \"\",\r\n  };\r\n  const { lang, open, instanceID, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = user =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(user, instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    modifyInstanceAdminPassword(instanceID, request.user, request.password, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || !instanceID){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    const onGetAdminSuccess = (user, password) =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setRequest({\r\n        user: user,\r\n        password: password,\r\n      });\r\n      setInitialed(true);\r\n    }\r\n\r\n    getInstanceAdminPassword(instanceID,  onGetAdminSuccess, onModifyFail)\r\n\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, instanceID, onModifyFail]);\r\n\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        value: request.user,\r\n        disabled: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 6,\r\n        md: 4,\r\n      },\r\n      {\r\n        type: \"password\",\r\n        label: texts.new,\r\n        value: request.password,\r\n        onChange: handleRequestPropsChanged('password'),\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 12,\r\n        sm: 10,\r\n        md: 8,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n\r\n};\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { resizeInstanceDisk } from 'nano_api.js';\r\nimport { bytesToString } from 'utils.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Extend Disk Size',\r\n    current: 'Current Disk Size',\r\n    new: 'New Disk Size (GB)',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '扩展磁盘容量',\r\n    current: '当前磁盘容量',\r\n    new: '新磁盘容量(GB)',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyDiskDialog(props){\r\n  const defaultValues = {\r\n    size: '',\r\n  };\r\n  const { lang, open, instanceID, current, index, onSuccess, onCancel } = props;\r\n  const currentDisk = current ? current.disks[index] : 0;\r\n  const currentLabel = bytesToString(currentDisk);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = (diskIndex, newDisk) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(diskIndex, newDisk, instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    if(!request.size){\r\n      onModifyFail('must specify new disk size');\r\n      return;\r\n    }\r\n\r\n    const sizeInGB = Number.parseInt(request.size);\r\n    if(Number.isNaN(sizeInGB)){\r\n      onModifyFail('invalid disk size: ' + request.size);\r\n      return;\r\n    }\r\n\r\n    const newDisk = sizeInGB * (1 << 30);\r\n    if(currentDisk === newDisk){\r\n      onModifyFail('no need to modify');\r\n      return;\r\n    }\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    resizeInstanceDisk(instanceID, index, newDisk, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    return ()=> setMounted(false);\r\n  }, [open]);\r\n\r\n\r\n  const inputs = [\r\n    {\r\n      type: \"text\",\r\n      label: texts.current,\r\n      value: currentLabel,\r\n      disabled: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.new,\r\n      onChange: handleRequestPropsChanged('size'),\r\n      value: request.size,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 12,\r\n      sm: 10,\r\n      md: 8,\r\n    },\r\n  ];\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;    \r\n};\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { shrinkInstanceDisk } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Shrink Disk Size',\r\n    content1: 'Are you sure to shrink size of ',\r\n    content2: ' ? it will take a long time, please be patient and ignore the timeout warning.',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n    systemDisk: 'System Disk',\r\n    dataDisk: 'Data Disk',\r\n  },\r\n  'cn':{\r\n    title: '压缩磁盘容量',\r\n    content1: '是否压缩 ',\r\n    content2: ' 的磁盘空间，这会占用很长时间，请忽略超时提示并耐心等待',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n    systemDisk: '系统磁盘',\r\n    dataDisk: '数据磁盘',\r\n  },\r\n}\r\n\r\nexport default function ShrinkDiskSizeDialog(props){\r\n  const { lang, instanceID, index, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onShrinkFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const closeDialog = () =>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onShrinkSuccess = diskIndex =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(diskIndex, instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    shrinkInstanceDisk(instanceID, index, onShrinkSuccess, onShrinkFail);\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (!open){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    return ()=> setMounted(false);\r\n  }, [open]);\r\n\r\n  let content;\r\n  if (0 === index){\r\n    content = texts.content1 + texts.systemDisk + texts.content2;\r\n  }else{\r\n    content = texts.content1 + texts.dataDisk + index.toString() + texts.content2;\r\n  }\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyInstancePriority, getInstanceConfig } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify CPU Priority',\r\n    label: 'CPU Priority',\r\n    cpuPriorityHigh: 'High',\r\n    cpuPriorityMedium: 'Medium',\r\n    cpuPriorityLow: 'Low',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改CPU优先级',\r\n    label: 'CPU优先级',\r\n    cpuPriorityHigh: '高',\r\n    cpuPriorityMedium: '中',\r\n    cpuPriorityLow: '低',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyCPUPriorityDialog(props){\r\n  const { lang, open, instanceID, onSuccess, onCancel } = props;\r\n  const defaultValues = {\r\n    priority: \"medium\",\r\n  };\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = priority =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(priority, instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    if(!request.priority){\r\n      onModifyFail('invalid priority value');\r\n      return;\r\n    }\r\n\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    modifyInstancePriority(instanceID, request.priority, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || !instanceID){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    const onGetSuccess = data =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var priority = \"medium\";\r\n      if (data.qos ){\r\n        priority = data.qos.cpu_priority;\r\n      }\r\n      setRequest({\r\n        priority: priority,\r\n      })\r\n      setInitialed(true);\r\n    }\r\n    getInstanceConfig(instanceID, onGetSuccess, onModifyFail);\r\n\r\n    return ()=> setMounted(false);\r\n  }, [open, instanceID, mounted, onModifyFail]);\r\n\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const options = [\r\n      {\r\n        label: texts.cpuPriorityHigh,\r\n        value: \"high\",\r\n      },\r\n      {\r\n        label: texts.cpuPriorityMedium,\r\n        value: \"medium\",\r\n      },\r\n      {\r\n        label: texts.cpuPriorityLow,\r\n        value: \"low\",\r\n      },\r\n    ]\r\n\r\n    const inputs = [\r\n      {\r\n        type: \"radio\",\r\n        label: texts.label,\r\n        onChange: handleRequestPropsChanged('priority'),\r\n        value: request.priority,\r\n        options: options,\r\n        required: true,\r\n        xs: 12,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyInstanceDiskIOPS, getInstanceConfig } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Disk IOPS',\r\n    label: 'IOPS',\r\n    noLimit: 'No Limit',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改磁盘读写限制',\r\n    label: '磁盘读写限制',\r\n    noLimit: '无限制',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyDiskIOPSDialog(props){\r\n  const defaultValues = {\r\n    iops: 0,\r\n  };\r\n  const { lang, open, instanceID, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = iops =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(iops, instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    modifyInstanceDiskIOPS(instanceID, request.iops, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleSliderValueChanged = name => (e, value) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || !instanceID){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    const onGetSuccess = data =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      var iops = 0;\r\n      if (data.qos ){\r\n        iops = data.qos.write_iops;\r\n      }\r\n      setRequest({\r\n        iops: iops,\r\n      })\r\n      setInitialed(true);\r\n    }\r\n    getInstanceConfig(instanceID, onGetSuccess, onModifyFail);\r\n\r\n    return ()=> setMounted(false);\r\n  }, [open, instanceID, mounted, onModifyFail]);\r\n\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const marks = [\r\n      {value: 0, label: texts.noLimit},\r\n      {value: 2000, label: 2000}\r\n    ];\r\n\r\n    const inputs = [\r\n      {\r\n        type: \"slider\",\r\n        label: texts.label,\r\n        onChange: handleSliderValueChanged('iops'),\r\n        value: request.iops,\r\n        marks: marks,\r\n        step: 10,\r\n        maxStep: 2000,\r\n        minStep: 0,\r\n        required: true,\r\n        xs: 12,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n\r\n  }  \r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyInstanceBandwidth, getInstanceConfig } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Network Bandwidth',\r\n    outbound: 'Outband Bandwidth',\r\n    inbound: 'Inbound Bandwidth',\r\n    noLimit: 'No Limit',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改网络带宽限制',\r\n    outbound: '上行带宽',\r\n    inbound: '下行带宽',\r\n    noLimit: '无限制',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyNetworkBandwidthDialog(props){\r\n  const Mbit = 1 << (20 - 3);\r\n  const defaultValues = {\r\n    inbound: 0,\r\n    outbound: 0,\r\n  };\r\n  const { lang, open, instanceID, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n\r\n  const onModifyFail =  React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = (inbound, outbound) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(inbound, outbound, instanceID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setPrompt('');\r\n    setOperatable(false);\r\n    modifyInstanceBandwidth(instanceID, request.inbound * Mbit, request.outbound * Mbit, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleSliderValueChanged = name => (e, value) =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || !instanceID){\r\n      return;\r\n    }\r\n    setMounted(true);\r\n    const onGetSuccess = data =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n\r\n      var current = defaultValues;\r\n      if (data.qos&&data.qos.receive_speed ){\r\n        current.inbound = data.qos.receive_speed / Mbit;\r\n      }\r\n      if (data.qos&&data.qos.send_speed ){\r\n        current.outbound = data.qos.send_speed / Mbit;\r\n      }\r\n      setRequest(current)\r\n      setInitialed(true);\r\n    }\r\n    getInstanceConfig(instanceID, onGetSuccess, onModifyFail);\r\n\r\n    return ()=> setMounted(false);\r\n  }, [open, instanceID, mounted, onModifyFail, Mbit, defaultValues]);\r\n\r\n\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const marks = [\r\n      {value: 0, label: texts.noLimit},\r\n      {value: 20, label: '20 Mbit/s'}\r\n    ];\r\n\r\n    const inputs = [\r\n      {\r\n        type: \"slider\",\r\n        label: texts.inbound,\r\n        onChange: handleSliderValueChanged('inbound'),\r\n        value: request.inbound,\r\n        marks: marks,\r\n        step: 2,\r\n        maxStep: 20,\r\n        minStep: 0,\r\n        required: true,\r\n        xs: 12,\r\n      },\r\n      {\r\n        type: \"slider\",\r\n        label: texts.outbound,\r\n        onChange: handleSliderValueChanged('outbound'),\r\n        value: request.outbound,\r\n        marks: marks,\r\n        step: 2,\r\n        maxStep: 20,\r\n        minStep: 0,\r\n        required: true,\r\n        xs: 12,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { resetMonitorSecret } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Reset Monitor Secret',\r\n    content: 'Are you sure to reset monitor secret of instance ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '重置监控密码',\r\n    content: '是否重置云主机监控密码 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ResetMonitorSecretDialog(props){\r\n  const { lang, guestID, guestName, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const content = texts.content + guestName;\r\n  const onDeleteFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(guestID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n    resetMonitorSecret(guestID, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleConfirm,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport ZoomOutMapIcon from '@material-ui/icons/ZoomOutMap';\r\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton\";\r\nimport ModifyNameDialog from 'views/Instances/ModifyNameDialog';\r\nimport ModifyCoresDialog from 'views/Instances/ModifyCoresDialog';\r\nimport ModifyMemoryDialog from 'views/Instances/ModifyMemoryDialog';\r\nimport ModifyPasswordDialog from 'views/Instances/ModifyPasswordDialog';\r\nimport ModifyDiskSizeDialog from 'views/Instances/ModifyDiskSizeDialog';\r\nimport ShrinkDiskSizeDialog from 'views/Instances/ShrinkDiskSizeDialog';\r\nimport ModifyCPUPriorityDialog from 'views/Instances/ModifyCPUPriorityDialog';\r\nimport ModifyDiskIOPSDialog from 'views/Instances/ModifyDiskIOPSDialog';\r\nimport ModifyNetworkBandwidthDialog from 'views/Instances/ModifyNetworkBandwidthDialog';\r\nimport ResetSecretDialog from \"views/Instances/ResetSecretDialog\";\r\nimport { bytesToString, bpsToString } from 'utils.js';\r\nimport { getInstanceConfig, getInstanceAdminPassword, writeLog, setAutoStart } from \"nano_api.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Details of Instance ',\r\n    back: 'Back',\r\n    name: 'Name',\r\n    id: 'ID',\r\n    cores: 'Cores',\r\n    memory: 'Memory',\r\n    adminPassword: 'Admin Password',\r\n    monitorAddress: 'Monitor Address',\r\n    monitorSecret: 'Monitor Secret',\r\n    systemDisk: 'System Disk',\r\n    dataDisk: 'Data Disk',\r\n    ethernetAddress: 'Ethernet Address',\r\n    internalAddress: 'Internal Address',\r\n    allocatedAddress: 'Allocated Address',\r\n    externalAddress: 'External Address',\r\n    operatingSystem: 'Operating System',\r\n    autoStartup: 'Auto Startup',\r\n    enable: 'Enable',\r\n    disable: 'Disable',\r\n    pool: 'Host Pool',\r\n    cell: 'Host Cell',\r\n    owner: 'Owner',\r\n    group: 'Group',\r\n    cpuPriority: 'CPU Priority',\r\n    iops: 'Disk IOPS',\r\n    bandwidth: 'Inbound/Outbound Bandwidth',\r\n    noLimit: 'No Limit',\r\n    cpuPriorityHigh: 'High',\r\n    cpuPriorityMedium: 'Medium',\r\n    cpuPriorityLow: 'Low',\r\n    createdTime: 'Created Time',\r\n    disabledWhenRunning: 'Disabled When Running',\r\n    disabledWhenStopped: 'Disabled When Stopped',\r\n    status: 'Status',\r\n    running: 'Running',\r\n    stopped: 'Stopped',\r\n    display: 'Display',\r\n    hide: 'Hide',\r\n    modify: 'Modify',\r\n    extendDisk: 'Extend Disk Size',\r\n    shrinkDisk: 'Shrink Disk Size',\r\n    resetSecret: \"Reset Monitor Secret\",\r\n  },\r\n  'cn':{\r\n    title: '云主机详情 ',\r\n    back: '返回',\r\n    name: '主机名',\r\n    id: 'ID',\r\n    cores: '核心数',\r\n    memory: '内存',\r\n    adminPassword: '管理员密码',\r\n    monitorAddress: '监控地址',\r\n    monitorSecret: '监控密码',\r\n    systemDisk: '系统磁盘',\r\n    dataDisk: '数据磁盘',\r\n    ethernetAddress: 'MAC地址',\r\n    internalAddress: '内部地址',\r\n    allocatedAddress: '已分配地址',\r\n    externalAddress: '外部地址',\r\n    operatingSystem: '操作系统',\r\n    autoStartup: '开机启动',\r\n    enable: '启用',\r\n    disable: '未启用',\r\n    pool: '所属资源池',\r\n    cell: '承载资源节点',\r\n    owner: '所属用户',\r\n    group: '所属用户组',\r\n    cpuPriority: 'CPU优先级',\r\n    iops: '磁盘 IOPS',\r\n    bandwidth: '下/上行带宽',\r\n    noLimit: '无限制',\r\n    cpuPriorityHigh: '高',\r\n    cpuPriorityMedium: '中',\r\n    cpuPriorityLow: '低',\r\n    createdTime: '创建时间',\r\n    disabledWhenRunning: '运行时禁用',\r\n    disabledWhenStopped: '停机时禁用',\r\n    status: '状态',\r\n    running: '运行中',\r\n    stopped: '已停机',\r\n    display: '显示',\r\n    hide: '隐藏',\r\n    modify: '修改',\r\n    extendDisk: '扩展磁盘容量',\r\n    shrinkDisk: '缩减磁盘空间',\r\n    resetSecret: \"重置监控密码\",\r\n  }\r\n}\r\n\r\nexport default function Details(props){\r\n    const guestID = props.match.params.id;\r\n    const [ guest, setGuest] = React.useState(null);\r\n    const [ adminPassword, setAdminPassword ] = React.useState(null);\r\n    const [ secretVisiable, setSecretVisiable ] = React.useState(false);\r\n\r\n    //for dialog\r\n    const [ modifyNameVisiable, setModifyNameVisible ] = React.useState(false);\r\n    const [ modifyCoresVisiable, setModifyCoresVisible ] = React.useState(false);\r\n    const [ modifyMemoryVisiable, setModifyMemoryVisible ] = React.useState(false);\r\n    const [ modifyPasswordVisiable, setModifyPasswordVisible ] = React.useState(false);\r\n    const [ modifyDiskSizeVisiable, setModifyDiskSizeVisible ] = React.useState(false);\r\n    const [ shrinkDiskSizeVisiable, setShrinkDiskSizeVisible ] = React.useState(false);\r\n    const [ modifyCPUPriorityVisiable, setModifyCPUPriorityVisible ] = React.useState(false);\r\n    const [ modifyDiskIOPSVisiable, setModifyDiskIOPSVisible ] = React.useState(false);\r\n    const [ modifyNetworkBandwidthVisiable, setModifyNetworkBandwidthVisible ] = React.useState(false);\r\n    const [ resetSecretVisiable, setResetSecretVisible ] = React.useState(false);\r\n    const [ diskIndex, setDiskIndex ] = React.useState(0);\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const onFail = React.useCallback(msg =>{\r\n      showErrorMessage(msg);\r\n    }, [showErrorMessage]);\r\n\r\n    const reloadGuestConfig = React.useCallback(() => {\r\n      const onGetConfigSuccess = data =>{\r\n        setGuest(data);\r\n      }\r\n\r\n      getInstanceConfig(guestID, onGetConfigSuccess, onFail);\r\n\r\n    }, [guestID, onFail]);\r\n\r\n    //modify name\r\n    const showModifyNameDialog = () =>{\r\n      setModifyNameVisible(true);\r\n    };\r\n\r\n    const closeModifyNameDialog = () =>{\r\n      setModifyNameVisible(false);\r\n    }\r\n\r\n    const onModifyNameSuccess = newName =>{\r\n      closeModifyNameDialog();\r\n      showNotifyMessage('name of '+ guestID + ' changed to ' + newName);\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify cores\r\n    const showModifyCoresDialog = () =>{\r\n      setModifyCoresVisible(true);\r\n    };\r\n\r\n    const closeModifyCoresDialog = () =>{\r\n      setModifyCoresVisible(false);\r\n    }\r\n\r\n    const onModifyCoresSuccess = newCores =>{\r\n      closeModifyCoresDialog();\r\n      showNotifyMessage('cores of '+ guestID + ' changed to ' + newCores);\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify memory\r\n    const showModifyMemoryDialog = () =>{\r\n      setModifyMemoryVisible(true);\r\n    };\r\n\r\n    const closeModifyMemoryDialog = () =>{\r\n      setModifyMemoryVisible(false);\r\n    }\r\n\r\n    const onModifyMemorySuccess = newMemory =>{\r\n      closeModifyMemoryDialog();\r\n      showNotifyMessage('memory of '+ guestID + ' changed to ' + bytesToString(newMemory));\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify memory\r\n    const showModifyPasswordDialog = () =>{\r\n      setModifyPasswordVisible(true);\r\n    };\r\n\r\n    const closeModifyPasswordDialog = () =>{\r\n      setModifyPasswordVisible(false);\r\n    }\r\n\r\n    const onModifyPasswordSuccess = adminName =>{\r\n      closeModifyPasswordDialog();\r\n      showNotifyMessage('password of '+ adminName + ' modified');\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify disk Size\r\n    const showModifyDiskSizeDialog = index =>{\r\n      setModifyDiskSizeVisible(true);\r\n      setDiskIndex(index);\r\n    };\r\n\r\n    const closeModifyDiskSizeDialog = () =>{\r\n      setModifyDiskSizeVisible(false);\r\n    }\r\n\r\n    const onModifyDiskSizeSuccess = (index, size) =>{\r\n      closeModifyDiskSizeDialog();\r\n      showNotifyMessage('size of disk '+ index + ' changed to ' + bytesToString(size));\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //shrink disk Size\r\n    const showShrinkDiskSizeDialog = index =>{\r\n      setShrinkDiskSizeVisible(true);\r\n      setDiskIndex(index);\r\n    };\r\n\r\n    const closeShrinkDiskSizeDialog = () =>{\r\n      setShrinkDiskSizeVisible(false);\r\n    }\r\n\r\n    const onShrinkDiskSizeSuccess = index =>{\r\n      closeShrinkDiskSizeDialog();\r\n      showNotifyMessage('size of disk '+ index + ' shrunk');\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify CPU priority\r\n    const showModifyCPUPriorityDialog = () =>{\r\n      setModifyCPUPriorityVisible(true);\r\n    };\r\n\r\n    const closeModifyCPUPriorityDialog = () =>{\r\n      setModifyCPUPriorityVisible(false);\r\n    }\r\n\r\n    const onModifyCPUPrioritySuccess = priority =>{\r\n      closeModifyCPUPriorityDialog();\r\n      showNotifyMessage('CPU priority changed to '+ priority);\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify disk IOPS\r\n    const showModifyDiskIOPSDialog = () =>{\r\n      setModifyDiskIOPSVisible(true);\r\n    };\r\n\r\n    const closeModifyDiskIOPSDialog = () =>{\r\n      setModifyDiskIOPSVisible(false);\r\n    }\r\n\r\n    const onModifyDiskIOPSSuccess = iops =>{\r\n      closeModifyDiskIOPSDialog();\r\n      showNotifyMessage('Disk IOPS changed to '+ iops);\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //modify network bandwidth\r\n    const showModifyNetworkBandwidthDialog = () =>{\r\n      setModifyNetworkBandwidthVisible(true);\r\n    };\r\n\r\n    const closeModifyNetworkBandwidthDialog = () =>{\r\n      setModifyNetworkBandwidthVisible(false);\r\n    }\r\n\r\n    const onModifyNetworkBandwidthSuccess = (inbound, outbound) =>{\r\n      closeModifyNetworkBandwidthDialog();\r\n      var value = [bpsToString(inbound), bpsToString(outbound)].join('/');\r\n      showNotifyMessage('network bandwidth changed to ' + value);\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    //reset monitor secret\r\n    const showResetSecretDialog = () =>{\r\n      setResetSecretVisible(true);\r\n    };\r\n\r\n    const closeResetSecretDialog = () =>{\r\n      setResetSecretVisible(false);\r\n    }\r\n\r\n    const onResetSecretSuccess = () =>{\r\n      closeResetSecretDialog();\r\n      showNotifyMessage(\"monitor secret reset\");\r\n      reloadGuestConfig();\r\n    };\r\n\r\n    const setAutoStartSuccess = () => {\r\n      reloadGuestConfig();\r\n    }\r\n\r\n    const setAutoStartFail = msg => {\r\n      showErrorMessage(\"set auto start fail: \" + msg);\r\n    }\r\n\r\n    const handleAutoStartChanged = e =>{\r\n      var enable = e.target.checked;\r\n      e.preventDefault();\r\n      setAutoStart(guestID, enable, setAutoStartSuccess, setAutoStartFail);\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      reloadGuestConfig();\r\n    }, [reloadGuestConfig]);\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content, title;\r\n    var buttons = [];\r\n    if (null === guest){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n      title = '';\r\n    }else{\r\n      const disabledWhenRunningIcon = {\r\n        label: texts.disabledWhenRunning,\r\n        icon: LockIcon,\r\n      };\r\n      const disabledWhenStoppedIcon = {\r\n        label: texts.disabledWhenStopped,\r\n        icon: LockIcon,\r\n      };\r\n\r\n      let monitorAddress;\r\n      if(guest.display_protocol){\r\n        monitorAddress = guest.display_protocol + '://' + guest.internal.display_address;\r\n      }else{\r\n        monitorAddress = 'vnc://' + guest.internal.display_address\r\n      }\r\n      let inbound, outbound;\r\n      if (guest.qos&&guest.qos.send_speed&& 0 !== guest.qos.receive_speed){\r\n        inbound = bpsToString(guest.qos.receive_speed);\r\n      }else{\r\n        inbound = texts.noLimit;\r\n      }\r\n\r\n      if (guest.qos&&guest.qos.receive_speed&& 0 !== guest.qos.send_speed){\r\n        outbound = bpsToString(guest.qos.send_speed);\r\n      }else{\r\n        outbound = texts.noLimit;\r\n      }\r\n\r\n      const bandwidthLabel = [inbound, outbound].join(' / ');\r\n      const hideAdminPassword = () => setAdminPassword(null);\r\n      const showAdminPassword = () => {\r\n        const onQuerySuccess = (user, password) =>{\r\n          if(password){\r\n            setAdminPassword(password);\r\n          }else{\r\n            setAdminPassword('no password configured for user \"' + user + '\"');\r\n          }\r\n        }\r\n        getInstanceAdminPassword(guestID, onQuerySuccess, onFail);\r\n      };\r\n\r\n      var adminPasswordOperators = [];\r\n      if (adminPassword){\r\n        adminPasswordOperators.push({label:texts.hide, icon: VisibilityOffIcon, onClick: hideAdminPassword});\r\n      }else{\r\n        adminPasswordOperators.push({label:texts.display, icon: VisibilityIcon, onClick: showAdminPassword});\r\n      }\r\n      if (guest.running){\r\n        adminPasswordOperators.push({label:texts.modify, icon:BuildIcon, onClick:showModifyPasswordDialog});\r\n      }else{\r\n        adminPasswordOperators.push(disabledWhenStoppedIcon);\r\n      }\r\n\r\n      var tableData = [\r\n        {\r\n          title: texts.name,\r\n          value: guest.name,\r\n          operators: guest.running ? [disabledWhenRunningIcon] :\r\n            [{label:texts.modify, icon:BuildIcon, onClick:showModifyNameDialog}],\r\n        },\r\n        {\r\n          title: texts.id,\r\n          value: guestID,\r\n        },\r\n        {\r\n          title: texts.cores,\r\n          value: guest.cores,\r\n          operators: guest.running ? [disabledWhenRunningIcon] :\r\n            [{label:texts.modify, icon:BuildIcon, onClick:showModifyCoresDialog}],\r\n        },\r\n        {\r\n          title: texts.memory,\r\n          value: bytesToString(guest.memory),\r\n          operators: guest.running ? [disabledWhenRunningIcon] :\r\n            [{label:texts.modify, icon:BuildIcon, onClick:showModifyMemoryDialog}],\r\n        },\r\n        {\r\n          title: texts.status,\r\n          value: guest.running? texts.running : texts.stopped,\r\n        },\r\n        {\r\n          title: texts.ethernetAddress,\r\n          value: guest.ethernet_address,\r\n        },\r\n\r\n        {\r\n          title: texts.createdTime,\r\n          value: guest.create_time,\r\n        },\r\n        {\r\n          title: texts.adminPassword,\r\n          value: adminPassword ? adminPassword : '****************',\r\n          operators: adminPasswordOperators,\r\n        },\r\n        {\r\n          title: texts.monitorAddress,\r\n          value: guest.internal? monitorAddress : '',\r\n        },\r\n        {\r\n          title: texts.monitorSecret,\r\n          value: secretVisiable? guest.monitor_secret : new Array(guest.monitor_secret.length).fill('*'),\r\n          operators: secretVisiable? [\r\n            {label:texts.hide, icon:VisibilityOffIcon, onClick:() => setSecretVisiable(false)},\r\n            {label:texts.resetSecret, icon:AutorenewIcon, onClick:showResetSecretDialog}\r\n          ] : [\r\n            {label:texts.display, icon:VisibilityIcon, onClick:() => setSecretVisiable(true)},\r\n            {label:texts.resetSecret, icon:AutorenewIcon, onClick:showResetSecretDialog}\r\n          ],\r\n        },\r\n        {\r\n          title: texts.systemDisk,\r\n          value: bytesToString(guest.disks[0]),\r\n          operators: guest.running ? [disabledWhenRunningIcon] : [\r\n            {label:texts.extendDisk, icon:ZoomOutMapIcon, onClick:() => showModifyDiskSizeDialog(0)},\r\n            {label:texts.shrinkDisk, icon:SystemUpdateAltIcon, onClick:() => showShrinkDiskSizeDialog(0)},\r\n          ],\r\n        },\r\n      ];\r\n\r\n      if (guest.disks.length > 1){\r\n        for(var index = 1; index < guest.disks.length; index++){\r\n          const currentIndex = index;\r\n          tableData.push({\r\n            title: texts.dataDisk + index.toString(),\r\n            value: bytesToString(guest.disks[index]),\r\n            operators: guest.running ? [disabledWhenRunningIcon] : [\r\n              {label:texts.extendDisk, icon:ZoomOutMapIcon, onClick:() => showModifyDiskSizeDialog(currentIndex)},\r\n              {label:texts.shrinkDisk, icon:SystemUpdateAltIcon, onClick:() => showShrinkDiskSizeDialog(currentIndex)},\r\n            ],\r\n          })\r\n        }\r\n      }\r\n\r\n      let priorityLabel;\r\n      if (guest.qos&&guest.qos.cpu_priority){\r\n        switch (guest.qos.cpu_priority) {\r\n          case 'high':\r\n            priorityLabel = texts.cpuPriorityHigh;\r\n            break;\r\n          case 'medium':\r\n            priorityLabel = texts.cpuPriorityMedium;\r\n            break;\r\n          case 'low':\r\n            priorityLabel = texts.cpuPriorityLow;\r\n            break;\r\n          default:\r\n            priorityLabel = 'invalid priority ' + guest.qos.cpu_priority;\r\n        }\r\n      }else{\r\n        priorityLabel = texts.noLimit;\r\n      }\r\n\r\n\r\n      tableData = tableData.concat([\r\n        {\r\n          title: texts.internalAddress,\r\n          value: guest.internal&&guest.internal.network_address? guest.internal.network_address : '',\r\n        },\r\n        {\r\n          title: texts.allocatedAddress,\r\n          value: guest.internal&&guest.internal.allocated_address? guest.internal.allocated_address : '',\r\n        },\r\n        {\r\n          title: texts.externalAddress,\r\n          value: guest.external&&guest.external.network_address? guest.external.network_address : '',\r\n        },\r\n        {\r\n          title: texts.operatingSystem,\r\n          value: guest.system,\r\n        },\r\n        {\r\n          title: texts.autoStartup,\r\n          value: (\r\n            <div>\r\n              {texts.disable}\r\n              <Switch\r\n                checked={guest.auto_start}\r\n                onChange={handleAutoStartChanged}\r\n                color=\"primary\"\r\n              />\r\n              {texts.enable}\r\n            </div>\r\n          ),\r\n        },\r\n        {\r\n          title: texts.pool,\r\n          value: guest.pool,\r\n        },\r\n        {\r\n          title: texts.cell,\r\n          value: guest.cell,\r\n        },\r\n        {\r\n          title: texts.cpuPriority,\r\n          value: priorityLabel,\r\n          operators: [{label:texts.modify, icon:BuildIcon, onClick:showModifyCPUPriorityDialog}],\r\n        },\r\n        {\r\n          title: texts.iops,\r\n          value: guest.qos&&guest.qos.write_iops ? guest.qos.write_iops : texts.noLimit,\r\n          operators: guest.running ? [disabledWhenRunningIcon] : [\r\n            {label:texts.modify, icon:BuildIcon, onClick:showModifyDiskIOPSDialog},\r\n          ],\r\n        },\r\n        {\r\n          title: texts.bandwidth,\r\n          value: bandwidthLabel,\r\n          operators: [{label:texts.modify, icon:BuildIcon, onClick:showModifyNetworkBandwidthDialog}]\r\n        },\r\n      ]);\r\n      content = (\r\n        <Container maxWidth='md'>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableBody>\r\n              {\r\n                tableData.map((row, key) => (\r\n                  <TableRow key={key}>\r\n                    <TableCell component='th' scope='row'>\r\n                      {row.title}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {row.value}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {\r\n                        row.operators?\r\n                        row.operators.map(({ label, icon, onClick }, key) => (\r\n                            <IconButton key={key} label={label} icon={icon} onClick={onClick}/>\r\n                        ))\r\n                        : ''\r\n                      }\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              }\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        </Container>\r\n      )\r\n\r\n      title = texts.title + guest.name;\r\n      buttons = [\r\n        <Button size=\"sm\" color=\"info\" round href=\"/admin/instances/\">\r\n          <NavigateBeforeIcon />{texts.back}\r\n        </Button>,\r\n      ];\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n          {\r\n            buttons.map((button, key) => (\r\n              <Box key={key} pl={2} pr={2}>\r\n                {button}\r\n              </Box>\r\n            ))\r\n          }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              {title}\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyNameDialog\r\n            lang={lang}\r\n            open={modifyNameVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyNameSuccess}\r\n            onCancel={closeModifyNameDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyCoresDialog\r\n            lang={lang}\r\n            open={modifyCoresVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyCoresSuccess}\r\n            onCancel={closeModifyCoresDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyMemoryDialog\r\n            lang={lang}\r\n            open={modifyMemoryVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyMemorySuccess}\r\n            onCancel={closeModifyMemoryDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyPasswordDialog\r\n            lang={lang}\r\n            open={modifyPasswordVisiable}\r\n            instanceID={guestID}\r\n            onSuccess={onModifyPasswordSuccess}\r\n            onCancel={closeModifyPasswordDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDiskSizeDialog\r\n            lang={lang}\r\n            open={modifyDiskSizeVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            index={diskIndex}\r\n            onSuccess={onModifyDiskSizeSuccess}\r\n            onCancel={closeModifyDiskSizeDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ShrinkDiskSizeDialog\r\n            lang={lang}\r\n            open={shrinkDiskSizeVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            index={diskIndex}\r\n            onSuccess={onShrinkDiskSizeSuccess}\r\n            onCancel={closeShrinkDiskSizeDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyCPUPriorityDialog\r\n            lang={lang}\r\n            open={modifyCPUPriorityVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyCPUPrioritySuccess}\r\n            onCancel={closeModifyCPUPriorityDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyDiskIOPSDialog\r\n            lang={lang}\r\n            open={modifyDiskIOPSVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyDiskIOPSSuccess}\r\n            onCancel={closeModifyDiskIOPSDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyNetworkBandwidthDialog\r\n            lang={lang}\r\n            open={modifyNetworkBandwidthVisiable}\r\n            instanceID={guestID}\r\n            current={guest}\r\n            onSuccess={onModifyNetworkBandwidthSuccess}\r\n            onCancel={closeModifyNetworkBandwidthDialog}\r\n            />\r\n        </GridItem>\r\n        <ResetSecretDialog\r\n          lang={lang}\r\n          open={resetSecretVisiable}\r\n          guestID={guestID}\r\n          guestName={guest? guest.name : \"\"}\r\n          onSuccess={onResetSecretSuccess}\r\n          onCancel={closeResetSecretDialog}\r\n          />\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\n\r\nimport InstanceRow from \"views/Instances/InstanceRow.js\";\r\nimport DeleteDialog from \"views/Instances/DeleteDialog.js\";\r\nimport CreateDialog from \"views/Instances/CreateDialog.js\";\r\nimport StartWithMediaDialog from \"views/Instances/StartWithMediaDialog.js\";\r\nimport InsertMediaDialog from \"views/Instances/InsertMediaDialog.js\";\r\nimport BuildImageDialog from \"views/Instances/BuildImageDialog.js\";\r\nimport ResetSystemDialog from \"views/Instances/ResetSystemDialog.js\";\r\nimport MigrateInstanceDialog from \"views/Instances/MigrateInstanceDialog.js\";\r\nimport BatchStopDialog from \"views/Instances/BatchStopDialog\";\r\nimport BatchDeleteDialog from \"views/Instances/BatchDeleteDialog\";\r\nimport BatchCreateDialog from \"views/Instances/BatchCreateDialog\";\r\n\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { searchGuests, queryComputeCellsInPool, getAllComputePools, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  ...dashboardStyles,\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create New Instance\",\r\n    batchCreate: 'Batch Create',\r\n    batchDelete: 'Batch Delete',\r\n    batchStop: 'Batch Stop',\r\n    enterBatch: 'Enter Batch Mode',\r\n    exitBatch: 'Exit Batch Mode',\r\n    tableTitle: \"Cloud Instances\",\r\n    name: \"Name\",\r\n    cell: \"Host Cell\",\r\n    address: \"Address\",\r\n    core: \"Core\",\r\n    memory: \"Memory\",\r\n    disk: \"Disk\",\r\n    status: \"Status\",\r\n    operates: \"Operates\",\r\n    noResource: \"No instances available\",\r\n    pool: 'Compute Pool',\r\n    disabled: 'Disabled',\r\n    offline: \"Offline\",\r\n    allCells: 'All Cells',\r\n    allPools: 'All Pools',\r\n    keyword: 'Key Word',\r\n    search: 'Search',\r\n    notMatch: 'No instance match keyword: ',\r\n  },\r\n  'cn':{\r\n    createButton: \"创建云主机\",\r\n    batchCreate: '批量创建',\r\n    batchDelete: '批量删除',\r\n    batchStop: '批量停止',\r\n    enterBatch: '进入批量模式',\r\n    exitBatch: '退出批量模式',\r\n    tableTitle: \"云主机实例\",\r\n    name: \"名称\",\r\n    cell: \"承载节点\",\r\n    address: \"地址\",\r\n    core: \"核心\",\r\n    memory: \"内存\",\r\n    disk: \"磁盘\",\r\n    status: \"状态\",\r\n    operates: \"操作\",\r\n    noResource: \"没有云主机实例\",\r\n    pool: '计算资源池',\r\n    disabled: '已禁用',\r\n    offline: \"离线\",\r\n    allCells: '所有节点',\r\n    allPools: '所有资源池',\r\n    keyword: '关键词',\r\n    search: '搜索',\r\n    notMatch: '没有云主机匹配关键词: ',\r\n  }\r\n}\r\n\r\nexport default function AllInstances(props){\r\n    const recordPerPage = 10;\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const defaultPoolName = queryParams.get(\"pool\");\r\n    const defaultCellName = queryParams.get(\"cell\");\r\n    const [ initialed, setInitialed ] = React.useState(false);\r\n    const [ instanceList, setInstanceList ] = React.useState(null);\r\n    const [ checkedMap, setCheckedMap ] = React.useState(new Map());\r\n    const [ batchMode, setBatchMode ] = React.useState(false);\r\n    const [ scope, setScope ] = React.useState({\r\n      pool: '',\r\n      cell: '',\r\n    })\r\n    const [ pools, setPools ] = React.useState([]);\r\n    const [ cells, setCells ] = React.useState([]);\r\n    const [ offset, setOffset] = React.useState(0);\r\n    const [ keyword, setKeyword] = React.useState('');\r\n    const [ keywordInput, setKeywordInput] = React.useState('');\r\n    const [ totalCount, setTotalCount ] = React.useState(0);\r\n\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ mediaStartDialogVisible, setMediaStartDialogVisible ] = React.useState(false);\r\n    const [ insertMediaDialogVisible, setInsertMediaDialogVisible ] = React.useState(false);\r\n    const [ resetSystemDialogVisible, setResetSystemDialogVisible ] = React.useState(false);\r\n    const [ buildImageDialogVisible, setBuildImageDialogVisible ] = React.useState(false);\r\n    const [ migrateDialogVisible, setMigrateDialogVisible ] = React.useState(false);\r\n    const [ batchStopDialogVisible, setBatchStopDialogVisible ] = React.useState(false);\r\n    const [ batchDeleteDialogVisible, setBatchDeleteDialogVisible ] = React.useState(false);\r\n    const [ batchCreateDialogVisible, setBatchCreateDialogVisible ] = React.useState(false);\r\n    const [ currentInstance, setCurrentInstance ] = React.useState('');\r\n    const [ sourcePool, setSourcePool ] = React.useState('');\r\n    const [ sourceCell, setSourceCell ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const onPageChanged = (e, page) => {\r\n      setOffset((page - 1) * recordPerPage);\r\n    }\r\n\r\n    const handleKeywordChange = e =>{\r\n      var value = e.target.value;\r\n      setKeywordInput(value);\r\n    }\r\n\r\n    const clearState = () => {\r\n      setKeyword('');\r\n      setKeywordInput('');\r\n      setOffset(0);\r\n    }\r\n\r\n    const doSearch = () =>{\r\n      setKeywordInput('');//clear input field\r\n      setKeyword(keywordInput);\r\n      setOffset(0);\r\n      reloadAllInstances();\r\n    }\r\n\r\n    const reloadAllInstances = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      const onLoadSuccess = r => {\r\n        var dataList = r.result;\r\n        var updated = checkedMap;\r\n        var modified = false;\r\n        setTotalCount(r.total);\r\n        if (!dataList){\r\n          setInstanceList([]);\r\n          if (0 !== updated.size){\r\n            updated.clear();\r\n            modified = true;\r\n          }\r\n        }else{\r\n          setInstanceList(dataList);\r\n          var removeTargets = [];\r\n          updated.forEach((checked, id) =>{\r\n            if(!dataList.some(instance => instance.id === id)){\r\n              //not exists\r\n              removeTargets.push(id);\r\n            }\r\n          });\r\n          dataList.forEach(instance =>{\r\n            const instanceID = instance.id;\r\n            if (!updated.has(instanceID)){\r\n              //new entry\r\n              updated.set(instanceID, false);\r\n              if(!modified){\r\n                modified = true;\r\n              }\r\n            }\r\n          })\r\n          if (0 !== removeTargets.length){\r\n            removeTargets.forEach(id =>{\r\n              updated.delete(id);\r\n              if(!modified){\r\n                modified = true;\r\n              }\r\n            })\r\n          }\r\n        }\r\n        if(modified){\r\n          setCheckedMap(new Map(updated));\r\n        }\r\n      }\r\n      searchGuests(recordPerPage, offset, scope.pool, scope.cell, keyword, onLoadSuccess, onLoadFail);\r\n    }, [scope, checkedMap, showErrorMessage, offset, keyword]);\r\n\r\n    //delete\r\n    const showDeleteDialog = (instanceID) =>{\r\n      setDeleteDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = (instanceID) =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' deleted');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //start with media\r\n    const showMediaStartDialog = (instanceID) =>{\r\n      setMediaStartDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeMediaStartDialog = () =>{\r\n      setMediaStartDialogVisible(false);\r\n    }\r\n\r\n    const onMediaStartSuccess = (instanceID) =>{\r\n      closeMediaStartDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' started with media');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //insert media\r\n    const showInsertMediaDialog = (instanceID) =>{\r\n      setInsertMediaDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeInsertMediaDialog = () =>{\r\n      setInsertMediaDialogVisible(false);\r\n    }\r\n\r\n    const onInsertMediaSuccess = (instanceID) =>{\r\n      closeInsertMediaDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' started with media');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //reset system\r\n    const showResetSystemDialog = (instanceID) =>{\r\n      setResetSystemDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeResetSystemDialog = () =>{\r\n      setResetSystemDialogVisible(false);\r\n    }\r\n\r\n    const onResetSystemSuccess = (instanceID) =>{\r\n      closeResetSystemDialog();\r\n      showNotifyMessage('guest system of ' + instanceID + ' reset');\r\n    };\r\n\r\n    //build image\r\n    const showBuildImageDialog = (instanceID) =>{\r\n      setBuildImageDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n    }\r\n\r\n    const closeBuildImageDialog = () =>{\r\n      setBuildImageDialogVisible(false);\r\n    }\r\n\r\n    const onBuildImageSuccess = (imageName) =>{\r\n      closeBuildImageDialog();\r\n      showNotifyMessage('new image ' + imageName + ' created from ' + currentInstance);\r\n    };\r\n\r\n    //migrate instance\r\n    const showMigrateDialog = (instanceID, pool, cell) =>{\r\n      setMigrateDialogVisible(true);\r\n      setCurrentInstance(instanceID);\r\n      setSourcePool(pool);\r\n      setSourceCell(cell);\r\n    }\r\n\r\n    const closeMigrateDialog = () =>{\r\n      setMigrateDialogVisible(false);\r\n    }\r\n\r\n    const onMigrateSuccess = (instanceID) =>{\r\n      closeMigrateDialog();\r\n      showNotifyMessage('instance ' + instanceID + ' migrated');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = (id) =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('new instance ' + id + ' created');\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //batch stopping\r\n    const showBatchStopDialog = () =>{\r\n      setBatchStopDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchStopDialog = () =>{\r\n      setBatchStopDialogVisible(false);\r\n    }\r\n\r\n    const onBatchStopSuccess = () =>{\r\n      closeBatchStopDialog();\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //batch deleting\r\n    const showBatchDeleteDialog = () =>{\r\n      setBatchDeleteDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchDeleteDialog = () =>{\r\n      setBatchDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onBatchDeleteSuccess = () =>{\r\n      closeBatchDeleteDialog();\r\n      reloadAllInstances();\r\n    };\r\n\r\n    //batch creating\r\n    const showBatchCreateDialog = () =>{\r\n      setBatchCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchCreateDialog = () =>{\r\n      setBatchCreateDialogVisible(false);\r\n    }\r\n\r\n    const onBatchCreateSuccess = () =>{\r\n      closeBatchCreateDialog();\r\n      reloadAllInstances();\r\n    };\r\n\r\n    const onStatusChange = () =>{\r\n      reloadAllInstances();\r\n    }\r\n\r\n    const enterBatchMode = () => {\r\n      var updated = new Map();\r\n      //uncheck all\r\n      for(var instanceID of checkedMap.keys()){\r\n        updated.set(instanceID, false);\r\n      }\r\n      setCheckedMap(updated);\r\n      setBatchMode(true);\r\n    }\r\n\r\n    const exitBatchMode = () => {\r\n      setBatchMode(false);\r\n    }\r\n\r\n    const handleInstanceChecked = (checked, instanceID) =>{\r\n      var checkedStatus = new Map(checkedMap);\r\n      checkedStatus.set(instanceID, checked);\r\n      setCheckedMap(checkedStatus);\r\n    }\r\n\r\n    const handleAllClicked = e =>{\r\n      const checked = e.target.checked;\r\n      var updated = new Map();\r\n      for(var instanceID of checkedMap.keys()){\r\n        updated.set(instanceID, checked);\r\n      }\r\n      setCheckedMap(updated);\r\n    }\r\n\r\n    const handlePoolChanged = e => {\r\n      const poolName = e.target.value;\r\n      var cellList = [];\r\n      const onQueryCellsSuccess = dataList =>{\r\n        dataList.forEach(cell =>{\r\n          cellList.push(cell)\r\n        });\r\n        setCells(cellList);\r\n        setScope({\r\n          pool: poolName,\r\n          cell: '',\r\n        });\r\n        clearState();\r\n      }\r\n      queryComputeCellsInPool(poolName, onQueryCellsSuccess, showErrorMessage);\r\n    }\r\n\r\n    const handleCellChanged = e => {\r\n      const cellName = e.target.value;\r\n      setScope(previous => ({\r\n        ...previous,\r\n        cell: cellName,\r\n      }));\r\n      clearState();\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      if (!initialed){\r\n        //initial\r\n        const onQueryPoolsSuccess = dataList => {\r\n          var poolList = [];\r\n          dataList.forEach( pool => {\r\n            poolList.push(pool.name);\r\n          })\r\n          if(0 === poolList.length){\r\n            showErrorMessage('no compute pools available');\r\n            return;\r\n          }\r\n          setPools(poolList);\r\n          setCells([]);\r\n          setScope({\r\n            pool: defaultPoolName? defaultPoolName : '',\r\n            cell: defaultCellName? defaultCellName : '',\r\n          });\r\n          setInitialed(true);\r\n        }\r\n        getAllComputePools(onQueryPoolsSuccess, showErrorMessage);\r\n\r\n      }else {\r\n        var mounted = true\r\n        reloadAllInstances();\r\n        const updateInterval = 5 * 1000;\r\n        var timerID = setInterval(()=>{\r\n          if (mounted){\r\n            reloadAllInstances();\r\n          }\r\n        }, updateInterval);\r\n        return () =>{\r\n          mounted = false;\r\n          clearInterval(timerID);\r\n        }\r\n      }\r\n    }, [reloadAllInstances, initialed, showErrorMessage, defaultPoolName, defaultCellName]);\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (!initialed || !instanceList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === instanceList.length){\r\n      if ('' !== keyword){\r\n        content = <Box textAlign=\"center\"><Info>{texts.notMatch + keyword}</Info></Box>;\r\n      }else{\r\n        content = <Box textAlign=\"center\"><Info>{texts.noResource}</Info></Box>;\r\n      }\r\n\r\n    }else{\r\n      let nameHeader;\r\n      if(batchMode){\r\n        nameHeader = (\r\n          <Box display='flex' alignItems=\"center\">\r\n            <Box>\r\n              <Checkbox\r\n                onChange={handleAllClicked}\r\n                />\r\n            </Box>\r\n            <Box>\r\n              {texts.name}\r\n            </Box>\r\n          </Box>\r\n        );\r\n      }else{\r\n        nameHeader = texts.name;\r\n      }\r\n      let pagination;\r\n      if (totalCount > recordPerPage){\r\n        let totalPages, currentPage;\r\n        if (0 === totalCount % recordPerPage){\r\n          totalPages = totalCount / recordPerPage;\r\n        }else{\r\n          totalPages = (totalCount - totalCount % recordPerPage) / recordPerPage + 1;\r\n        }\r\n        if (0 === offset % recordPerPage){\r\n          currentPage = offset / recordPerPage + 1;\r\n        }else{\r\n          currentPage = (offset - offset % recordPerPage ) / recordPerPage + 1;\r\n        }\r\n        pagination = (\r\n          <Box justifyContent=\"center\" display=\"flex\">\r\n            <Box m={1}>\r\n            <Pagination\r\n                count={totalPages}\r\n                page={currentPage}\r\n                onChange={onPageChanged}\r\n                color='primary'\r\n                boundaryCount={3}\r\n                // hidePrevButton={1 === currentPage}\r\n                // hideNextButton={currentPage === totalPages}\r\n                showFirstButton\r\n                showLastButton\r\n                />\r\n            </Box>\r\n          </Box>\r\n        );\r\n      }else{\r\n        pagination = <div/>;\r\n      }\r\n\r\n      content = (\r\n        <div>\r\n          <OperableTable\r\n            color=\"primary\"\r\n            headers={[nameHeader, texts.cell, texts.address, texts.core, texts.memory, texts.disk, texts.status, texts.operates]}\r\n            rows={\r\n              instanceList.map(instance =>{\r\n                const instanceID = instance.id;\r\n                return (\r\n                  <InstanceRow\r\n                    key={instance.id}\r\n                    instance={instance}\r\n                    lang={lang}\r\n                    checked={checkedMap && checkedMap.has(instanceID) ? checkedMap.get(instanceID): false}\r\n                    checkable={batchMode}\r\n                    onCheckStatusChanged={handleInstanceChecked}\r\n                    onNotify={showNotifyMessage}\r\n                    onError={showErrorMessage}\r\n                    onDelete={showDeleteDialog}\r\n                    onMediaStart={showMediaStartDialog}\r\n                    onInsertMedia={showInsertMediaDialog}\r\n                    onResetSystem={showResetSystemDialog}\r\n                    onBuildImage={showBuildImageDialog}\r\n                    onStatusChange={onStatusChange}\r\n                    onMigrateInstance={showMigrateDialog}\r\n                    />\r\n                )\r\n              })}\r\n            />\r\n          {pagination}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    var buttonProperties = [\r\n      {\r\n        label: texts.createButton,\r\n        icon: AddIcon,\r\n        color: \"info\",\r\n        onClick: showCreateDialog,\r\n      },\r\n      {\r\n        label: texts.batchCreate,\r\n        icon: PlaylistAddIcon,\r\n        color: \"info\",\r\n        onClick: showBatchCreateDialog,\r\n      }\r\n    ];\r\n    if (batchMode){\r\n      buttonProperties.push(\r\n        {\r\n          label: texts.batchDelete,\r\n          icon: DeleteIcon,\r\n          color: \"danger\",\r\n          onClick: showBatchDeleteDialog,\r\n        },\r\n        {\r\n          label: texts.batchStop,\r\n          icon: PowerSettingsNewIcon,\r\n          color: \"info\",\r\n          onClick: showBatchStopDialog,\r\n        },\r\n        {\r\n          label: texts.exitBatch,\r\n          icon: ExitToAppIcon,\r\n          color: \"success\",\r\n          onClick: exitBatchMode,\r\n        },\r\n      );\r\n    }else{\r\n      buttonProperties.push(\r\n        {\r\n          label: texts.enterBatch,\r\n          icon: ListIcon,\r\n          color: \"info\",\r\n          onClick: enterBatchMode,\r\n        }\r\n      );\r\n    }\r\n\r\n    var poolOptions = [\r\n      {\r\n        label: texts.allPools,\r\n        value: '',\r\n      }\r\n    ];\r\n\r\n    pools.forEach( poolName => {\r\n      poolOptions.push({\r\n        label: poolName,\r\n        value: poolName,\r\n      })\r\n    });\r\n\r\n    var cellOptions = [\r\n      {\r\n        label: texts.allCells,\r\n        value: '',\r\n      }\r\n    ];\r\n\r\n    cells.forEach( cell =>{\r\n      var label = cell.name;\r\n      if (cell.address){\r\n        label += '('+ cell.address +')';\r\n      }\r\n      if (!cell.alive){\r\n        label += '-' + texts.offline;\r\n      }\r\n      if (!cell.enabled){\r\n        label += '-' + texts.disabled;\r\n      }\r\n      cellOptions.push({\r\n        label: label,\r\n        value: cell.name,\r\n      })\r\n    });\r\n\r\n    const poolSelector = (\r\n      <Box m={0} pb={2}>\r\n        <InputLabel htmlFor=\"pool\" className={classes.cardCategory}>\r\n          {texts.pool}\r\n        </InputLabel>\r\n        <Select\r\n          value={scope.pool}\r\n          onChange={handlePoolChanged}\r\n          inputProps={{\r\n            name: 'pool',\r\n            id: 'pool',\r\n          }}\r\n          fullWidth\r\n          >\r\n          {\r\n            poolOptions.map( (option, key) => (\r\n              <MenuItem value={option.value} key={key}>{option.label}</MenuItem>\r\n            ))\r\n          }\r\n        </Select>\r\n      </Box>\r\n    );\r\n\r\n    const cellSelector = (\r\n      <Box m={0} pb={2}>\r\n        <InputLabel htmlFor=\"cell\" className={classes.cardCategory}>{texts.cell}</InputLabel>\r\n        <Select\r\n          value={scope.cell}\r\n          onChange={handleCellChanged}\r\n          inputProps={{\r\n            name: 'cell',\r\n            id: 'cell',\r\n          }}\r\n          fullWidth\r\n          >\r\n          {\r\n            cellOptions.map( (option, key) => (\r\n              <MenuItem value={option.value} key={key}>{option.label}</MenuItem>\r\n            ))\r\n          }\r\n        </Select>\r\n      </Box>\r\n    );\r\n\r\n    var batchTargets = [];\r\n    if(checkedMap){\r\n      checkedMap.forEach((checked, id) =>{\r\n        if(checked){\r\n          batchTargets.push(id);\r\n        }\r\n      });\r\n      batchTargets.sort();\r\n    }\r\n\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttonProperties.map(({label, color, icon, onClick}, key) =>(\r\n                <Box key={key} m={1}>\r\n                  <Button size=\"sm\" color={color} round onClick={onClick}>\r\n                    {React.createElement(icon)}\r\n                    {label}\r\n                  </Button>\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box ml={1}>\r\n          <GridContainer>\r\n            <GridItem xs={5} sm={3} md={2}>\r\n              <Box pt={1}>\r\n                {poolSelector}\r\n              </Box>\r\n            </GridItem>\r\n            <GridItem xs={6} sm={4} md={2}>\r\n              <Box pt={1}>\r\n                {cellSelector}\r\n              </Box>\r\n            </GridItem>\r\n            <GridItem xs={10} sm={6} md={4}>\r\n              <TextField\r\n                value={keywordInput}\r\n                label={texts.keyword}\r\n                onChange={handleKeywordChange}\r\n                margin=\"normal\"\r\n                fullWidth\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={2} sm={1}>\r\n              <Box pt={4}>\r\n                <Button size=\"sm\" color='info' round onClick={doSearch}>\r\n                  {texts.search}\r\n                </Button>\r\n              </Box>\r\n            </GridItem>\r\n          </GridContainer>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={deleteDialogVisible}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <StartWithMediaDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={mediaStartDialogVisible}\r\n            onSuccess={onMediaStartSuccess}\r\n            onCancel={closeMediaStartDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <InsertMediaDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={insertMediaDialogVisible}\r\n            onSuccess={onInsertMediaSuccess}\r\n            onCancel={closeInsertMediaDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ResetSystemDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={resetSystemDialogVisible}\r\n            onSuccess={onResetSystemSuccess}\r\n            onCancel={closeResetSystemDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BuildImageDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            open={buildImageDialogVisible}\r\n            onSuccess={onBuildImageSuccess}\r\n            onCancel={closeBuildImageDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <MigrateInstanceDialog\r\n            lang={lang}\r\n            instanceID={currentInstance}\r\n            sourcePool={sourcePool}\r\n            sourceCell={sourceCell}\r\n            open={migrateDialogVisible}\r\n            onSuccess={onMigrateSuccess}\r\n            onCancel={closeMigrateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchStopDialog\r\n            lang={lang}\r\n            open={batchStopDialogVisible}\r\n            targets={batchStopDialogVisible? batchTargets : []}\r\n            onSuccess={onBatchStopSuccess}\r\n            onCancel={closeBatchStopDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchDeleteDialog\r\n            lang={lang}\r\n            open={batchDeleteDialogVisible}\r\n            targets={batchDeleteDialogVisible? batchTargets : []}\r\n            onSuccess={onBatchDeleteSuccess}\r\n            onCancel={closeBatchDeleteDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchCreateDialog\r\n            lang={lang}\r\n            open={batchCreateDialogVisible}\r\n            onSuccess={onBatchCreateSuccess}\r\n            onCancel={closeBatchCreateDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { removeGuestSecurityRule } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Remove Security Policy Rule',\r\n    content: 'Are you sure to remove ',\r\n    content2: 'th rule',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除安全规则',\r\n    content: '是否删除第 ',\r\n    content2: '个安全规则',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function RemoveDialog(props){\r\n  const { lang, open, guestID, index, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onRemoveFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRemoveSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(guestID, index);\r\n  }\r\n\r\n  const handleRemove = () =>{\r\n    setOperatable(false);\r\n    removeGuestSecurityRule(guestID, index, onRemoveSuccess, onRemoveFail);\r\n  }\r\n\r\n  const content = texts.content + (index + 1) + texts.content2;\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleRemove,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { addGuestSecurityRule } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Add Security Policy Rule',\r\n    action: 'Action',\r\n    accept: 'Accept',\r\n    reject: 'Reject',\r\n    protocol: 'Protocol',\r\n    sourceAddress: 'Source Address',\r\n    targetPort: 'Target Port',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '添加安全规则',\r\n    action: '处理',\r\n    accept: '接受',\r\n    reject: '拒绝',\r\n    protocol: '协议',\r\n    sourceAddress: '来源地址',\r\n    targetPort: '目标端口',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function AddRuleDialog(props){\r\n\r\n  const protocolOptions = [\r\n    {\r\n      label: 'TCP',\r\n      value: 'tcp',\r\n    },\r\n    {\r\n      label: 'UDP',\r\n      value: 'udp',\r\n    }];\r\n  const defaultValues = {\r\n    action: 'accept',\r\n    protocol: '',\r\n    port: '',\r\n  };\r\n  const { lang, guestID, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const actionOptions = [\r\n    {\r\n      label: texts.accept,\r\n      value: 'accept',\r\n    },\r\n    {\r\n      label: texts.reject,\r\n      value: 'reject',\r\n    },\r\n  ];\r\n  const onAddFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onAddSuccess = id =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(id);\r\n  }\r\n\r\n  const handleAdd = () =>{\r\n    setOperatable(false);\r\n\r\n    if(!request.action){\r\n      onAddFail('must specify action');\r\n      return;\r\n    }\r\n    if(!request.protocol){\r\n      onAddFail('must specify protocol');\r\n      return;\r\n    }\r\n    if(!request.port){\r\n      onAddFail('must specify target port');\r\n      return;\r\n    }\r\n    var targetPort = Number.parseInt(request.port);\r\n    if(Number.isNaN(targetPort)){\r\n      onAddFail('invalid target port: ' + request.port);\r\n      return;\r\n    }\r\n\r\n    addGuestSecurityRule(guestID, request.action, request.protocol, targetPort, onAddSuccess, onAddFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n\r\n  //begin render\r\n  const inputs = [\r\n    {\r\n      type: \"radio\",\r\n      label: texts.action,\r\n      onChange: handleRequestPropsChanged('action'),\r\n      value: request.action,\r\n      options: actionOptions,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 10,\r\n      sm: 8,\r\n      md: 6,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      label: texts.protocol,\r\n      onChange: handleRequestPropsChanged('protocol'),\r\n      value: request.protocol,\r\n      options: protocolOptions,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 8,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.targetPort,\r\n      onChange: handleRequestPropsChanged('port'),\r\n      value: request.port,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 8,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleAdd,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifyGuestSecurityRule } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Security Policy Rule',\r\n    action: 'Action',\r\n    accept: 'Accept',\r\n    reject: 'Reject',\r\n    protocol: 'Protocol',\r\n    sourceModifyress: 'Source Address',\r\n    targetPort: 'Target Port',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改安全规则',\r\n    action: '处理',\r\n    accept: '接受',\r\n    reject: '拒绝',\r\n    protocol: '协议',\r\n    sourceModifyress: '来源地址',\r\n    targetPort: '目标端口',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyRuleDialog(props){\r\n  const { lang, guestID, rule, open, onSuccess, onCancel } = props;\r\n  const protocolOptions = [\r\n    {\r\n      label: 'TCP',\r\n      value: 'tcp',\r\n    },\r\n    {\r\n      label: 'UDP',\r\n      value: 'udp',\r\n    }];\r\n  const defaultValues = {\r\n    action: rule.action,\r\n    protocol: rule.protocol,\r\n    port: rule.to_port,\r\n  };\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const actionOptions = [\r\n    {\r\n      label: texts.accept,\r\n      value: 'accept',\r\n    },\r\n    {\r\n      label: texts.reject,\r\n      value: 'reject',\r\n    },\r\n  ];\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = id =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(id);\r\n  }\r\n\r\n  const handleModify = () =>{\r\n    setOperatable(false);\r\n\r\n    if(!request.action){\r\n      onModifyFail('must specify action');\r\n      return;\r\n    }\r\n    if(!request.protocol){\r\n      onModifyFail('must specify protocol');\r\n      return;\r\n    }\r\n    if(!request.port){\r\n      onModifyFail('must specify target port');\r\n      return;\r\n    }\r\n    var targetPort = Number.parseInt(request.port);\r\n    if(Number.isNaN(targetPort)){\r\n      onModifyFail('invalid target port: ' + request.port);\r\n      return;\r\n    }\r\n\r\n    modifyGuestSecurityRule(guestID, rule.index, request.action, request.protocol, targetPort, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n\r\n    React.useEffect(()=>{\r\n      if (!guestID || !rule ){\r\n        return;\r\n      }\r\n\r\n      setMounted(true);\r\n      setRequest({\r\n        action: rule.action,\r\n        protocol: rule.protocol,\r\n        port: rule.to_port,\r\n      })\r\n      setInitialed(true);\r\n      return () => {\r\n        setMounted(false);\r\n      }\r\n    }, [mounted, open, guestID, rule, onModifyFail]);\r\n\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"radio\",\r\n        label: texts.action,\r\n        onChange: handleRequestPropsChanged('action'),\r\n        value: request.action,\r\n        options: actionOptions,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n        sm: 8,\r\n        md: 6,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.protocol,\r\n        onChange: handleRequestPropsChanged('protocol'),\r\n        value: request.protocol,\r\n        options: protocolOptions,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n        sm: 6,\r\n        md: 4,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.targetPort,\r\n        onChange: handleRequestPropsChanged('port'),\r\n        value: request.port,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n        sm: 6,\r\n        md: 4,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n    buttons.push({\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleModify,\r\n      });\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport Box from '@material-ui/core/Box';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Table from \"components/Table/ObjectTable.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport RemoveDialog from \"views/Instances/RemoveRuleDialog.js\";\r\nimport AddDialog from \"views/Instances/AddRuleDialog.js\";\r\nimport ModifyDialog from \"views/Instances/ModifyRuleDialog.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\nimport { getGuestSecurityPolicy, moveUpGuestSecurityRule,\r\n  moveDownGuestSecurityRule, changeGuestSecurityPolicyAction, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  ...fontStyles,\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Add New Rule\",\r\n    tableTitle: \"Security Policy Rules\",\r\n    rule: 'Rule',\r\n    action: 'Action',\r\n    protocol: 'Protocol',\r\n    sourceAddress: 'Source Address',\r\n    targetPort: 'Target Port',\r\n    default: 'Default Action',\r\n    accept: 'Accept',\r\n    reject: 'Reject',\r\n    operates: \"Operates\",\r\n    noResource: \"No security policy available\",\r\n    modify: 'Modify',\r\n    remove: 'Remove',\r\n    moveUp: 'Move Up',\r\n    moveDown: 'Move Down',\r\n    back: 'Back',\r\n  },\r\n  'cn':{\r\n    createButton: \"添加新规则\",\r\n    tableTitle: \"安全规则\",\r\n    rule: '规则',\r\n    action: '处理',\r\n    protocol: '协议',\r\n    sourceAddress: '来源地址',\r\n    targetPort: '目标端口',\r\n    default: '默认处理',\r\n    accept: '接受',\r\n    reject: '拒绝',\r\n    operates: \"操作\",\r\n    noResource: \"没有安全策略组\",\r\n    modify: '修改',\r\n    remove: '移除',\r\n    moveUp: '上移',\r\n    moveDown: '下移',\r\n    back: '返回',\r\n  }\r\n}\r\n\r\nexport default function SystemTemplates(props){\r\n    const guestID = props.match.params.id;\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const classes = useStyles();\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ data, setData ] = React.useState(null);\r\n    //for dialog\r\n    const [ addDialogVisible, setAddDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ remoeDialogVisible, setRemoveDialogVisible ] = React.useState(false);\r\n    const [ selected, setSelected ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const reloadAllData = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      getGuestSecurityPolicy(guestID, setData, showErrorMessage);\r\n    }, [guestID, showErrorMessage, mounted]);\r\n\r\n    const showNotifyMessage = msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //modify\r\n    const showModifyDialog = rule =>{\r\n      setModifyDialogVisible(true);\r\n      setSelected(rule);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = index =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage(index + 'th rule modified');\r\n      reloadAllData();\r\n    };\r\n\r\n    //delete\r\n    const showRemoveDialog = rule =>{\r\n      setRemoveDialogVisible(true);\r\n      setSelected(rule);\r\n    }\r\n\r\n    const closeRemoveDialog = () =>{\r\n      setRemoveDialogVisible(false);\r\n    }\r\n\r\n    const onRemoveSuccess = (id, index) =>{\r\n      closeRemoveDialog();\r\n      showNotifyMessage(index + 'the rule removed');\r\n      reloadAllData();\r\n    };\r\n\r\n    //create\r\n    const showAddDialog = () =>{\r\n      setAddDialogVisible(true);\r\n    };\r\n\r\n    const closeAddDialog = () =>{\r\n      setAddDialogVisible(false);\r\n    }\r\n\r\n    const onAddSuccess = () =>{\r\n      closeAddDialog();\r\n      showNotifyMessage('new security policy rule added');\r\n      reloadAllData();\r\n    };\r\n\r\n    //move rule\r\n    const moveUp = rule =>{\r\n      const onMoveUpSuccess = (id, i) =>{\r\n        showNotifyMessage(i + 'th rule moved up');\r\n        reloadAllData();\r\n      }\r\n      moveUpGuestSecurityRule(guestID, rule.index, onMoveUpSuccess, showErrorMessage);\r\n    }\r\n\r\n    const moveDown = rule =>{\r\n      const onMoveDownSuccess = (id, i) =>{\r\n        showNotifyMessage(i + 'th rule moved down');\r\n        reloadAllData();\r\n      }\r\n      moveDownGuestSecurityRule(guestID, rule.index, onMoveDownSuccess, showErrorMessage);\r\n    }\r\n\r\n    const changeDefaultAction = e =>{\r\n      var action = e.target.value\r\n      const onChangeSuccess = () =>{\r\n        showNotifyMessage('default action changed to ' + action);\r\n        reloadAllData();\r\n      }\r\n      changeGuestSecurityPolicyAction(guestID, action, onChangeSuccess, showErrorMessage);\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadAllData();\r\n      return () =>{\r\n        setMounted(false);\r\n      }\r\n    }, [reloadAllData]);\r\n\r\n    function dataToNodes(index, data, buttons){\r\n      const operates = buttons.map((button, key) => (\r\n        <IconButton label={button.label} icon={button.icon} onClick={button.onClick} key={key}/>\r\n      ))\r\n      const { action, protocol, from_address, to_port } = data;\r\n      let actionIcon;\r\n      if ('accept' === action){\r\n        actionIcon = (\r\n          <Tooltip title={texts.accept} placement=\"top\">\r\n            <CheckIcon className={classes.successText}/>\r\n          </Tooltip>);\r\n      }else{\r\n        actionIcon = (\r\n          <Tooltip title={texts.reject} placement=\"top\">\r\n            <BlockIcon className={classes.dangerText}/>\r\n          </Tooltip>);\r\n      }\r\n      return [ index, actionIcon, protocol, from_address, to_port, operates];\r\n    }\r\n\r\n    //begin rendering\r\n    let content;\r\n    if (null === data){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else{\r\n      var defaultAction = (\r\n        <FormControl component=\"fieldset\" fullWidth disabled>\r\n          <RadioGroup name=\"type\" value={data.default_action} onChange={changeDefaultAction} row>\r\n            <Box display='flex' alignItems='center'>\r\n              <Box><FormControlLabel value='accept' control={<Radio />} label={texts.accept}/></Box>\r\n              <Box><FormControlLabel value='reject' control={<Radio />} label={texts.reject}/></Box>\r\n            </Box>\r\n          </RadioGroup>\r\n        </FormControl>\r\n      )\r\n      var rows = [[texts.default, defaultAction]];\r\n      if (!data.rules || 0 === data.rules.length){\r\n        rows.push([<Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noResource}</Info></Box>]);\r\n      }else{\r\n        data.rules.forEach( (rule, index) => {\r\n          var item = {\r\n            index: index,\r\n            action: rule.action,\r\n            protocol: rule.protocol,\r\n            to_port: rule.to_port,\r\n          }\r\n          var buttons = [\r\n            {\r\n              onClick: e => showModifyDialog(item),\r\n              icon: BuildIcon,\r\n              label: texts.modify,\r\n            },\r\n            {\r\n              onClick: e => showRemoveDialog(item),\r\n              icon: DeleteIcon,\r\n              label: texts.remove,\r\n            },\r\n          ];\r\n          if (data.rules.length - 1 !== index){\r\n            buttons.push({\r\n              onClick: e => moveDown(item),\r\n              icon: ArrowDownwardIcon,\r\n              label: texts.moveDown,\r\n            });\r\n          }\r\n          if (0 !== index){\r\n            buttons.push({\r\n              onClick: e => moveUp(item),\r\n              icon: ArrowUpwardIcon,\r\n              label: texts.moveUp,\r\n            });\r\n          }\r\n\r\n          rows.push(dataToNodes(index, rule, buttons));\r\n        });\r\n      }\r\n\r\n      content = (\r\n        <Table\r\n          color=\"primary\"\r\n          headers={[texts.rule, texts.action, texts.protocol, texts.sourceAddress, texts.targetPort, texts.operates]}\r\n          rows={rows}/>\r\n      );\r\n\r\n    }\r\n\r\n    var buttonProps = [\r\n      {\r\n        href: '/admin/instances/',\r\n        icon: NavigateBeforeIcon,\r\n        label: texts.back,\r\n      },\r\n      {\r\n        onClick: showAddDialog,\r\n        icon: AddIcon,\r\n        label: texts.createButton,\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={6} md={4}>\r\n              <Box display=\"flex\">\r\n              {\r\n                buttonProps.map((p,key) => {\r\n                  if (p.href){\r\n                    return (\r\n                      <Box p={1} key={key}>\r\n                        <Button size=\"sm\" color=\"info\" round href={p.href}>\r\n                          {React.createElement(p.icon)}{p.label}\r\n                        </Button>\r\n                      </Box>\r\n                    );\r\n                  }else{\r\n                    return (\r\n                      <Box p={1} key={key}>\r\n                        <Button size=\"sm\" color=\"info\" round onClick={p.onClick}>\r\n                          {React.createElement(p.icon)}{p.label}\r\n                        </Button>\r\n                      </Box>\r\n                    );\r\n                  }\r\n                })\r\n              }\r\n              </Box>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <Snackbar\r\n          place=\"tr\"\r\n          color={notifyColor}\r\n          message={notifyMessage}\r\n          open={\"\" !== notifyMessage}\r\n          closeNotification={closeNotify}\r\n          close\r\n        />\r\n        <AddDialog\r\n          lang={lang}\r\n          open={addDialogVisible}\r\n          guestID={guestID}\r\n          onSuccess={onAddSuccess}\r\n          onCancel={closeAddDialog}\r\n          />\r\n        <ModifyDialog\r\n          lang={lang}\r\n          open={modifyDialogVisible}\r\n          guestID={guestID}\r\n          rule={selected}\r\n          onSuccess={onModifySuccess}\r\n          onCancel={closeModifyDialog}\r\n          />\r\n        <RemoveDialog\r\n          lang={lang}\r\n          open={remoeDialogVisible}\r\n          guestID={guestID}\r\n          index={selected.index}\r\n          onSuccess={onRemoveSuccess}\r\n          onCancel={closeRemoveDialog}\r\n          />\r\n      </GridContainer>\r\n    );\r\n}\r\n","import { hexToRgb, whiteColor } from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst customTabsStyle = {\r\n  cardTitle: {\r\n    float: \"left\",\r\n    padding: \"10px 10px 10px 0px\",\r\n    lineHeight: \"24px\"\r\n  },\r\n  cardTitleRTL: {\r\n    float: \"right\",\r\n    padding: \"10px 0px 10px 10px !important\"\r\n  },\r\n  displayNone: {\r\n    display: \"none !important\"\r\n  },\r\n  tabsRoot: {\r\n    minHeight: \"unset !important\",\r\n    overflowX: \"visible\",\r\n    \"& $tabRootButton\": {\r\n      fontSize: \"0.875rem\"\r\n    }\r\n  },\r\n  tabRootButton: {\r\n    minHeight: \"unset !important\",\r\n    minWidth: \"unset !important\",\r\n    width: \"unset !important\",\r\n    height: \"unset !important\",\r\n    maxWidth: \"unset !important\",\r\n    maxHeight: \"unset !important\",\r\n    padding: \"10px 15px\",\r\n    borderRadius: \"3px\",\r\n    lineHeight: \"24px\",\r\n    border: \"0 !important\",\r\n    color: whiteColor + \" !important\",\r\n    marginLeft: \"4px\",\r\n    \"&:last-child\": {\r\n      marginLeft: \"0px\"\r\n    }\r\n  },\r\n  tabSelected: {\r\n    backgroundColor: \"rgba(\" + hexToRgb(whiteColor) + \", 0.2)\",\r\n    transition: \"0.2s background-color 0.1s\"\r\n  },\r\n  tabWrapper: {\r\n    display: \"inline-block\",\r\n    minHeight: \"unset !important\",\r\n    minWidth: \"unset !important\",\r\n    width: \"unset !important\",\r\n    height: \"unset !important\",\r\n    maxWidth: \"unset !important\",\r\n    maxHeight: \"unset !important\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"12px\",\r\n    marginTop: \"1px\",\r\n    \"& > svg,& > .material-icons\": {\r\n      verticalAlign: \"middle\",\r\n      margin: \"-1px 5px 0 0 !important\"\r\n    }\r\n  }\r\n};\r\n\r\nexport default customTabsStyle;\r\n","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n\r\n// material-ui components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n// core components\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/customTabsStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CustomTabs(props) {\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, value) => {\r\n    setValue(value);\r\n  };\r\n  const classes = useStyles();\r\n  const { headerColor, plainTabs, tabs, title, rtlActive } = props;\r\n  const cardTitle = classNames({\r\n    [classes.cardTitle]: true,\r\n    [classes.cardTitleRTL]: rtlActive\r\n  });\r\n  return (\r\n    <Card plain={plainTabs}>\r\n      <CardHeader color={headerColor} plain={plainTabs}>\r\n        {title !== undefined ? <div className={cardTitle}>{title}</div> : null}\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          classes={{\r\n            root: classes.tabsRoot,\r\n            indicator: classes.displayNone,\r\n            scrollButtons: classes.displayNone\r\n          }}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n        >\r\n          {tabs.map((prop, key) => {\r\n            var icon = {};\r\n            if (prop.tabIcon) {\r\n              icon = {\r\n                icon: <prop.tabIcon />\r\n              };\r\n            }\r\n            return (\r\n              <Tab\r\n                classes={{\r\n                  root: classes.tabRootButton,\r\n                  selected: classes.tabSelected,\r\n                  wrapper: classes.tabWrapper\r\n                }}\r\n                key={key}\r\n                label={prop.tabName}\r\n                {...icon}\r\n              />\r\n            );\r\n          })}\r\n        </Tabs>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {tabs.map((prop, key) => {\r\n          if (key === value) {\r\n            return <div key={key}>{prop.tabContent}</div>;\r\n          }\r\n          return null;\r\n        })}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nCustomTabs.propTypes = {\r\n  headerColor: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"success\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"primary\",\r\n    \"rose\"\r\n  ]),\r\n  title: PropTypes.string,\r\n  tabs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      tabName: PropTypes.string.isRequired,\r\n      tabIcon: PropTypes.object,\r\n      tabContent: PropTypes.node.isRequired\r\n    })\r\n  ),\r\n  rtlActive: PropTypes.bool,\r\n  plainTabs: PropTypes.bool\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { createUser } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create User',\r\n    user: 'Username',\r\n    password: 'Password',\r\n    password2: 'Confirm Password',\r\n    nick: 'Nickname',\r\n    mail: 'Mail',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建用户',\r\n    user: '用户名',\r\n    password: '密码',\r\n    password2: '确认密码',\r\n    nick: '昵称',\r\n    mail: '邮箱',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function CreateUserDialog(props){\r\n  const defaultValues = {\r\n    user: '',\r\n    password: '',\r\n    password2: '',\r\n    nick: '',\r\n    mail: '',\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const onCreateFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = username =>{\r\n    resetDialog();\r\n    onSuccess(username);\r\n  }\r\n\r\n  const confirmCreate = () =>{\r\n    const namePattern = new RegExp('[^\\\\w-.]');\r\n\r\n    if(!request.user){\r\n      onCreateFail('must specify user name');\r\n      return;\r\n    }else if (namePattern.test(request.user)){\r\n      onCreateFail(\"only letter/digit/'-'/'_'/'.' allowed in username\");\r\n      return;\r\n    }\r\n\r\n    if(!request.password){\r\n      onCreateFail('please input password');\r\n      return;\r\n    }else if (request.password2 !== request.password){\r\n      onCreateFail('password mismatch');\r\n      return;\r\n    }\r\n\r\n    createUser(request.user, request.password, request.nick, request.mail, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.user}\r\n                onChange={handleRequestPropsChanged('user')}\r\n                value={request.user}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.password}\r\n                onChange={handleRequestPropsChanged('password')}\r\n                value={request.password}\r\n                margin=\"normal\"\r\n                type='password'\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.password2}\r\n                onChange={handleRequestPropsChanged('password2')}\r\n                value={request.password2}\r\n                margin=\"normal\"\r\n                type='password'\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.nick}\r\n                onChange={handleRequestPropsChanged('nick')}\r\n                value={request.nick}\r\n                margin=\"normal\"\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.mail}\r\n                onChange={handleRequestPropsChanged('mail')}\r\n                value={request.mail}\r\n                margin=\"normal\"\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmCreate} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { getUser, modifyUser } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify User',\r\n    user: 'Username',\r\n    nick: 'Nickname',\r\n    mail: 'Mail',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改用户',\r\n    user: '用户名',\r\n    nick: '昵称',\r\n    mail: '邮箱',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyUserDialog(props){\r\n  const defaultValues = {\r\n    user: '',\r\n    nick: '',\r\n    mail: '',\r\n  };\r\n  const { lang, name, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const texts = i18n[lang];\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = username =>{\r\n    resetDialog();\r\n    onSuccess(username);\r\n  }\r\n\r\n  const confirmModify = () =>{\r\n    modifyUser(request.user, request.nick, request.mail, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (!name || !open || initialed ){\r\n      return;\r\n    }\r\n\r\n    const onGetUserSuccess = user =>{\r\n      setRequest({\r\n        user: name,\r\n        nick: user.nick ? user.nick : '',\r\n        mail: user.mail ? user.mail : '',\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    getUser(name, onGetUserSuccess, onModifyFail);\r\n\r\n  }, [initialed, open, name]);\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.user}\r\n                value={request.user}\r\n                margin=\"normal\"\r\n                disabled\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.nick}\r\n                onChange={handleRequestPropsChanged('nick')}\r\n                value={request.nick}\r\n                margin=\"normal\"\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.mail}\r\n                onChange={handleRequestPropsChanged('mail')}\r\n                value={request.mail}\r\n                margin=\"normal\"\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { deleteUser } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete User',\r\n    content: 'Are you sure to delete user ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除用户',\r\n    content: '是否删除用户 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeleteUserDialog(props){\r\n  const { lang, name, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onDeleteFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = (name) =>{\r\n    setError('');\r\n    onSuccess(name);\r\n  }\r\n\r\n  const confirmDelete = () =>{\r\n    deleteUser(name, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + name}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmDelete} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport CreateUserDialog from \"views/Users/CreateUserDialog\";\r\nimport ModifyUserDialog from \"views/Users/ModifyUserDialog\";\r\nimport DeleteUserDialog from \"views/Users/DeleteUserDialog\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { queryAllUsers, writeLog } from \"nano_api.js\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n\r\nconst styles = {\r\n  ...tableStyles,\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create New User\",\r\n    name: 'User Name',\r\n    modify: 'Modify',\r\n    delete: 'Delete',\r\n    operates: 'Operates',\r\n    noResource: 'No User Available',\r\n  },\r\n  'cn':{\r\n    createButton: \"创建新用户\",\r\n    name: '用户名',\r\n    modify: '修改',\r\n    delete: '删除',\r\n    operates: '操作',\r\n    noResource: '尚未创建用户',\r\n  }\r\n}\r\n\r\nexport default function UserTab(props){\r\n    const classes = useStyles();\r\n    const [ userList, setUserList ] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ currentUser, setCurrentUser ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadAllUsers = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      queryAllUsers(setUserList, onLoadFail);\r\n    }, [ showErrorMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //detail\r\n    const showModifyDialog = username =>{\r\n      setModifyDialogVisible(true);\r\n      setCurrentUser(username);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = username =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('user '+ username + ' modified');\r\n      reloadAllUsers();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = username =>{\r\n      setDeleteDialogVisible(true);\r\n      setCurrentUser(username);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = username =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('user '+ username + ' deleted');\r\n      reloadAllUsers();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = username =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('user '+ username + ' created');\r\n      reloadAllUsers();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      reloadAllUsers();\r\n    }, [reloadAllUsers]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === userList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === userList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.operates]}\r\n          rows={\r\n            userList.map((username, key) => {\r\n              const name = username;\r\n              var operators = [<IconButton key='modify' label={texts.modify} icon={EditIcon} onClick={() => showModifyDialog(name)}/>]\r\n              if (name !== session.user){\r\n                operators.push(<IconButton key='delete' label={texts.delete} icon={DeleteIcon} onClick={() => showDeleteDialog(name)}/>)\r\n              }\r\n              return (\r\n                <TableRow className={classes.tableBodyRow} key={key}>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {username}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {operators}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button size=\"sm\" color=\"info\" round onClick={showCreateDialog}><CreateIcon />{texts.createButton}</Button>,\r\n    ];\r\n\r\n    return (\r\n\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Container maxWidth='sm'>\r\n            {content}\r\n          </Container>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <CreateUserDialog\r\n            lang={lang}\r\n            open={createDialogVisible}\r\n            onSuccess={onCreateSuccess}\r\n            onCancel={closeCreateDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyUserDialog\r\n            lang={lang}\r\n            name={currentUser}\r\n            open={modifyDialogVisible}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <DeleteUserDialog\r\n            lang={lang}\r\n            name={currentUser}\r\n            open={deleteDialogVisible}\r\n            onSuccess={onDeleteSuccess}\r\n            onCancel={closeDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { addGroup, queryAllRoles } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Add Group',\r\n    name: 'Group Name',\r\n    display: 'Display Name',\r\n    role: 'Roles',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '添加用户组',\r\n    name: '组名称',\r\n    display: '显示名称',\r\n    role: '角色清单',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function AddGroupDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    display: '',\r\n    checked: new Set(),\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const texts = i18n[lang];\r\n  const [ options, setOptions]  = React.useState([]);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const onAddFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onAddSuccess = name =>{\r\n    resetDialog();\r\n    onSuccess(name);\r\n  }\r\n\r\n  const confirmAdd = () => {\r\n    if(!request.name){\r\n      onAddFail('Group name required');\r\n      return;\r\n    }\r\n    if(!request.display){\r\n      onAddFail('Display name required');\r\n      return;\r\n    }\r\n    if(!request.checked || 0 === request.checked.size){\r\n      onAddFail('Select at least one role');\r\n      return;\r\n    }\r\n\r\n    //push by order\r\n    var roles = [];\r\n    options.forEach(rolename => {\r\n      if(request.checked.has(rolename)){\r\n        roles.push(rolename);\r\n      }\r\n    })\r\n    addGroup(request.name, request.display, roles, onAddSuccess, onAddFail);\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed ){\r\n      return;\r\n    }\r\n\r\n    const onQueryRolesSuccess = dataList => {\r\n      setOptions(dataList);\r\n      setInitialed(true);\r\n    }\r\n\r\n    queryAllRoles(onQueryRolesSuccess, onAddFail);\r\n\r\n  }, [initialed, open]);\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = e =>{\r\n    const value = e.target.value;\r\n    var checked = e.target.checked;\r\n    var previous = {\r\n      ...request,\r\n    };\r\n\r\n    if(checked){\r\n      previous.checked.add(value);\r\n    }else{\r\n      previous.checked.delete(value);\r\n    }\r\n    setRequest(previous);\r\n  };\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                onChange={handleRequestPropsChanged('name')}\r\n                value={request.name}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.display}\r\n                onChange={handleRequestPropsChanged('display')}\r\n                value={request.display}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.role}</FormLabel>\r\n                <FormGroup>\r\n                  <Grid container>\r\n                    {\r\n                        options.map((rolename, key) => {\r\n                          let checked;\r\n                          if (request.checked.has(rolename)){\r\n                            checked = true;\r\n                          }else{\r\n                            checked = false;\r\n                          }\r\n                          return (\r\n                            <GridItem xs={6} sm={3} key={key}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox checked={checked} onChange={handleTagsChanged} value={rolename}/>}\r\n                                label={rolename}\r\n                              />\r\n                            </GridItem>\r\n                          )\r\n                        })\r\n                    }\r\n                  </Grid>\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmAdd} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { getGroup, modifyGroup, queryAllRoles } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Group',\r\n    name: 'Group Name',\r\n    display: 'Display Name',\r\n    role: 'Roles',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改用户组',\r\n    name: '组名称',\r\n    display: '显示名称',\r\n    role: '角色清单',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyGroupDialog(props){\r\n  const defaultValues = {\r\n    display: '',\r\n    checked: new Set(),\r\n  };\r\n  const { lang, name, open, onSuccess, onCancel } = props;\r\n  const texts = i18n[lang];\r\n  const [ options, setOptions]  = React.useState([]);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = () =>{\r\n    resetDialog();\r\n    onSuccess(name);\r\n  }\r\n\r\n  const confirmModify = () => {\r\n    if(!request.checked || 0 === request.checked.size){\r\n      onModifyFail('Select at least one role');\r\n      return;\r\n    }\r\n    if(!request.display){\r\n      onModifyFail('Display name required');\r\n      return;\r\n    }\r\n    //push by order\r\n    var roles = [];\r\n    options.forEach(rolename => {\r\n      if(request.checked.has(rolename)){\r\n        roles.push(rolename);\r\n      }\r\n    })\r\n    modifyGroup(name, request.display, roles, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (!name || !open || initialed ){\r\n      return;\r\n    }\r\n    var roleList = [];\r\n    const onGetGroupSuccess = data =>{\r\n      const { display, role } = data;\r\n      var checked = new Set();\r\n      role.forEach( rolename => {\r\n        checked.add(rolename);\r\n      })\r\n      setRequest({\r\n        display: display,\r\n        checked: checked,\r\n      })\r\n      setOptions(roleList);\r\n      setInitialed(true);\r\n    };\r\n\r\n    const onQueryRolesSuccess = dataList => {\r\n      roleList = dataList;\r\n      getGroup(name, onGetGroupSuccess, onModifyFail);\r\n    }\r\n\r\n    queryAllRoles(onQueryRolesSuccess, onModifyFail);\r\n\r\n  }, [initialed, open, name]);\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  \r\n  const handleTagsChanged = e =>{\r\n    const value = e.target.value;\r\n    var checked = e.target.checked;\r\n    var previous = {\r\n      ...request,\r\n    };\r\n\r\n    if(checked){\r\n      previous.checked.add(value);\r\n    }else{\r\n      previous.checked.delete(value);\r\n    }\r\n    setRequest(previous);\r\n  };\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                value={name}\r\n                margin=\"normal\"\r\n                disabled\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={10} md={8}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.display}\r\n                onChange={handleRequestPropsChanged('display')}\r\n                value={request.display}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.role}</FormLabel>\r\n                <FormGroup>\r\n                  <Grid container>\r\n                    {\r\n                        options.map((rolename, key) => {\r\n                          let checked;\r\n                          if (request.checked.has(rolename)){\r\n                            checked = true;\r\n                          }else{\r\n                            checked = false;\r\n                          }\r\n                          return (\r\n                            <GridItem xs={6} sm={3} key={key}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox checked={checked} onChange={handleTagsChanged} value={rolename}/>}\r\n                                label={rolename}\r\n                              />\r\n                            </GridItem>\r\n                          )\r\n                        })\r\n                    }\r\n                  </Grid>\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { removeGroup } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Remove Group',\r\n    content: 'Are you sure to remove group ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除用户组',\r\n    content: '是否删除用户组 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function RemoveGroupDialog(props){\r\n  const { lang, name, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onRemoveFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRemoveSuccess = name =>{\r\n    setError('');\r\n    onSuccess(name);\r\n  }\r\n\r\n  const confirmRemove = () =>{\r\n    removeGroup(name, onRemoveSuccess, onRemoveFail);\r\n  }\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + name}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmRemove} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport AddGroupDialog from \"views/Users/AddGroupDialog\";\r\nimport ModifyGroupDialog from \"views/Users/ModifyGroupDialog\";\r\nimport RemoveGroupDialog from \"views/Users/RemoveGroupDialog\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { queryAllGroups, writeLog } from \"nano_api.js\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n\r\nconst styles = {\r\n  ...tableStyles,\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Add New Group\",\r\n    name: 'Group Name',\r\n    display: 'Display Name',\r\n    modify: 'Modify',\r\n    remove: 'Remove',\r\n    member: 'Members',\r\n    operates: 'Operates',\r\n    noResource: 'No Group Available',\r\n  },\r\n  'cn':{\r\n    createButton: \"创建新用户组\",\r\n    name: '用户组名',\r\n    display: '显示名称',\r\n    modify: '修改',\r\n    remove: '删除',\r\n    member: '成员',\r\n    operates: '操作',\r\n    noResource: '尚未创建用户组',\r\n  }\r\n}\r\n\r\nexport default function GroupTab(props){\r\n    const { lang } = props;\r\n    const showMembers = props.setGroup;\r\n    const classes = useStyles();\r\n    const [ groupList, setGroupList ] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ addDialogVisible, setAddDialogVisible ] = React.useState(false);\r\n    const [ removeDialogVisible, setRemoveDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ currentGroup, setCurrentGroup ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadAllGroups = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      queryAllGroups(setGroupList, onLoadFail);\r\n    }, [ showErrorMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //detail\r\n    const showModifyDialog = groupName =>{\r\n      setModifyDialogVisible(true);\r\n      setCurrentGroup(groupName);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = groupName =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('group '+ groupName + ' modified');\r\n      reloadAllGroups();\r\n    };\r\n\r\n    //remove\r\n    const showRemoveDialog = groupName =>{\r\n      setRemoveDialogVisible(true);\r\n      setCurrentGroup(groupName);\r\n    }\r\n\r\n    const closeRemoveDialog = () =>{\r\n      setRemoveDialogVisible(false);\r\n    }\r\n\r\n    const onRemoveSuccess = groupName =>{\r\n      closeRemoveDialog();\r\n      showNotifyMessage('group '+ groupName + ' removed');\r\n      reloadAllGroups();\r\n    };\r\n\r\n    //create\r\n    const showAddDialog = () =>{\r\n      setAddDialogVisible(true);\r\n    };\r\n\r\n    const closeAddDialog = () =>{\r\n      setAddDialogVisible(false);\r\n    }\r\n\r\n    const onAddSuccess = groupName =>{\r\n      closeAddDialog();\r\n      showNotifyMessage('new group '+ groupName + ' added');\r\n      reloadAllGroups();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      reloadAllGroups();\r\n    }, [reloadAllGroups]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === groupList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === groupList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.display, texts.member, texts.operates]}\r\n          rows={\r\n            groupList.map((group, key) => {\r\n              const name = group.name;\r\n              var operators = [\r\n                <IconButton key='modify' label={texts.modify} icon={EditIcon} onClick={() => showModifyDialog(name)}/>,\r\n                <IconButton key='member' label={texts.member} icon={GroupIcon} onClick={() => showMembers(name)}/>,\r\n              ];\r\n              if (name !== session.group){\r\n                operators.push(<IconButton key='remove' label={texts.remove} icon={DeleteIcon} onClick={() => showRemoveDialog(name)}/>)\r\n              }\r\n              return (\r\n                <TableRow className={classes.tableBodyRow} key={key}>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {name}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {group.display}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {group.member.toString()}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {operators}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button size=\"sm\" color=\"info\" round onClick={showAddDialog}><AddIcon />{texts.createButton}</Button>,\r\n    ];\r\n\r\n    return (\r\n\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Container maxWidth='sm'>\r\n            {content}\r\n          </Container>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <AddGroupDialog\r\n            lang={lang}\r\n            open={addDialogVisible}\r\n            onSuccess={onAddSuccess}\r\n            onCancel={closeAddDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyGroupDialog\r\n            lang={lang}\r\n            name={currentGroup}\r\n            open={modifyDialogVisible}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <RemoveGroupDialog\r\n            lang={lang}\r\n            name={currentGroup}\r\n            open={removeDialogVisible}\r\n            onSuccess={onRemoveSuccess}\r\n            onCancel={closeRemoveDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { searchUsers, addGroupMember } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Add Group Member ',\r\n    name: 'User',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '添加新成员 ',\r\n    name: '用户名',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function AddMemberDialog(props){\r\n  const defaultValues = {\r\n    member: '',\r\n  };\r\n  const { lang, group, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const [ options, setOptions ] = React.useState([]);\r\n\r\n  const texts = i18n[lang];\r\n  const onAddFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () => {\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  }\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onAddSuccess = member =>{\r\n    resetDialog();\r\n    onSuccess(member, group);\r\n  }\r\n\r\n  const confirmAdd = () =>{\r\n    if(!request.member || '' === request.member){\r\n      onAddFail('must select an user');\r\n    }\r\n    addGroupMember(group, request.member, onAddSuccess, onAddFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!open || initialed){\r\n      return;\r\n    }\r\n\r\n    const onQueryUserSuccess = dataList => {\r\n      if (0 === dataList.length){\r\n        onAddFail('no unallocated users available');\r\n        return;\r\n      }\r\n      setOptions(dataList);\r\n      setInitialed(true);\r\n    };\r\n\r\n    searchUsers(null, onQueryUserSuccess, onAddFail);\r\n  }, [initialed, open]);\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <GridItem xs={8}>\r\n          <Box m={1} p={2}>\r\n          <InputLabel htmlFor=\"member\">{texts.name}</InputLabel>\r\n          <Select\r\n            value={request.member}\r\n            onChange={handleRequestPropsChanged('member')}\r\n            inputProps={{\r\n              name: 'member',\r\n              id: 'member',\r\n            }}\r\n            fullWidth\r\n          >\r\n            {\r\n              options.map(username =>(\r\n                <MenuItem value={username} key={username}>{username}</MenuItem>\r\n              ))\r\n            }\r\n          </Select>\r\n          </Box>\r\n        </GridItem>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmAdd} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { removeGroupMember } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Remove Group Member',\r\n    content: 'Are you sure to remove member ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除成员',\r\n    content: '是否删除用户组成员 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function RemoveMemberDialog(props){\r\n  const { lang, group, member, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onRemoveFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRemoveSuccess = () =>{\r\n    setError('');\r\n    onSuccess(member, group);\r\n  }\r\n\r\n  const confirmRemove = () =>{\r\n    removeGroupMember(group, member, onRemoveSuccess, onRemoveFail);\r\n  }\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + member}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmRemove} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport AddMemberDialog from \"views/Users/AddMemberDialog\";\r\nimport RemoveMemberDialog from \"views/Users/RemoveMemberDialog\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { queryGroupMembers,writeLog } from \"nano_api.js\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n\r\nconst styles = {\r\n  ...tableStyles,\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    addButton: \"Add Group Member\",\r\n    backButton: \"Back\",\r\n    remove: 'Remove',\r\n    member: 'Member',\r\n    operates: 'Operates',\r\n    noResource: 'No Member Available',\r\n  },\r\n  'cn':{\r\n    addButton: \"增加新成员\",\r\n    backButton: \"返回\",\r\n    remove: '删除',\r\n    member: '成员',\r\n    operates: '操作',\r\n    noResource: '尚未添加成员',\r\n  }\r\n}\r\n\r\nexport default function GroupMemberTab(props){\r\n    const { lang, group, onBack } = props;\r\n    const classes = useStyles();\r\n    const [ memberList, setMemberList ] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ addDialogVisible, setAddDialogVisible ] = React.useState(false);\r\n    const [ removeDialogVisible, setRemoveDialogVisible ] = React.useState(false);\r\n    const [ currentMember, setCurrentMember ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadAllMembers = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      queryGroupMembers(group, setMemberList, onLoadFail);\r\n    }, [ showErrorMessage, group]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //remove\r\n    const showRemoveDialog = name =>{\r\n      setRemoveDialogVisible(true);\r\n      setCurrentMember(name);\r\n    }\r\n\r\n    const closeRemoveDialog = () =>{\r\n      setRemoveDialogVisible(false);\r\n    }\r\n\r\n    const onRemoveSuccess = name =>{\r\n      closeRemoveDialog();\r\n      showNotifyMessage('member '+ name + ' removed');\r\n      reloadAllMembers();\r\n    };\r\n\r\n    //create\r\n    const showAddDialog = () =>{\r\n      setAddDialogVisible(true);\r\n    };\r\n\r\n    const closeAddDialog = () =>{\r\n      setAddDialogVisible(false);\r\n    }\r\n\r\n    const onAddSuccess = name =>{\r\n      closeAddDialog();\r\n      showNotifyMessage('member '+ name + ' added');\r\n      reloadAllMembers();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      reloadAllMembers();\r\n    }, [reloadAllMembers]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === memberList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === memberList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.member, texts.operates]}\r\n          rows={\r\n            memberList.map((member, key) => {\r\n              var operators = [\r\n                <IconButton key='remove' label={texts.remove} icon={DeleteIcon} onClick={() => showRemoveDialog(member)}/>,\r\n              ];\r\n\r\n              return (\r\n                <TableRow className={classes.tableBodyRow} key={key}>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {member}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {operators}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button size=\"sm\" color=\"info\" round onClick={onBack}><NavigateBeforeIcon />{texts.backButton}</Button>,\r\n      <Button size=\"sm\" color=\"info\" round onClick={showAddDialog}><AddIcon />{texts.addButton}</Button>,\r\n    ];\r\n\r\n    return (\r\n\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Container maxWidth='sm'>\r\n            {content}\r\n          </Container>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <AddMemberDialog\r\n            lang={lang}\r\n            group={group}\r\n            open={addDialogVisible}\r\n            onSuccess={onAddSuccess}\r\n            onCancel={closeAddDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <RemoveMemberDialog\r\n            lang={lang}\r\n            group={group}\r\n            member={currentMember}\r\n            open={removeDialogVisible}\r\n            onSuccess={onRemoveSuccess}\r\n            onCancel={closeRemoveDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { addRole, getAllMenus } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Add Role',\r\n    name: 'Name',\r\n    menu: 'Menus',\r\n    dashboard: 'Dashboard',\r\n    computePool: 'Compute Pools',\r\n    addressPool: 'Address Pools',\r\n    storagePool: 'Storage Pools',\r\n    instance: 'Instances',\r\n    diskImage: 'Disk Image',\r\n    mediaImage: 'Media Image',\r\n    user: 'Users',\r\n    log: 'Logs',\r\n    visibility: 'Resource Visibility',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '新增角色',\r\n    name: '名称',\r\n    menu: '可用菜单',\r\n    dashboard: '仪表盘',\r\n    computePool: '计算资源池',\r\n    addressPool: '地址资源池',\r\n    storagePool: '存储资源池',\r\n    instance: '云主机实例',\r\n    diskImage: '磁盘镜像',\r\n    mediaImage: '光盘镜像',\r\n    user: '用户',\r\n    log: '日志',\r\n    visibility: '资源可见性',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function AddRoleDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    checked: new Set(),\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const texts = i18n[lang];\r\n  const options = getAllMenus(lang);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const onAddFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onAddSuccess = rolename =>{\r\n    resetDialog();\r\n    onSuccess(rolename);\r\n  }\r\n\r\n  const confirmAdd = () =>{\r\n    if(!request.name){\r\n      onAddFail('must specify role name');\r\n      return;\r\n    }\r\n\r\n    if(!request.checked || 0 === request.checked.size){\r\n      onAddFail('Select at least one menu item');\r\n      return;\r\n    }\r\n    //puy by order\r\n    var menus = [];\r\n    options.forEach(menu => {\r\n      if(request.checked.has(menu.value)){\r\n        menus.push(menu.value);\r\n      }\r\n    })\r\n    addRole(request.name, menus, onAddSuccess, onAddFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleTagsChanged = e =>{\r\n    const value = e.target.value;\r\n    var checked = e.target.checked;\r\n    var previous = {\r\n      ...request,\r\n    };\r\n\r\n    if(checked){\r\n      previous.checked.add(value);\r\n    }else{\r\n      previous.checked.delete(value);\r\n    }\r\n    setRequest(previous);\r\n  };\r\n\r\n  //begin render\r\n  const content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                onChange={handleRequestPropsChanged('name')}\r\n                value={request.name}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n            <FormControl component=\"fieldset\" fullWidth>\r\n              <FormLabel component=\"legend\">{texts.menu}</FormLabel>\r\n              <FormGroup>\r\n                <Grid container>\r\n                  {\r\n                      options.map((tag, key) => {\r\n                        const { value, label } = tag;\r\n                        let checked;\r\n                        if (request.checked.has(value)){\r\n                          checked = true;\r\n                        }else{\r\n                          checked = false;\r\n                        }\r\n                        return (\r\n                          <GridItem xs={6} sm={3} key={key}>\r\n                            <FormControlLabel\r\n                              control={<Checkbox checked={checked} onChange={handleTagsChanged} value={value}/>}\r\n                              label={label}\r\n                            />\r\n                          </GridItem>\r\n                        )\r\n                      })\r\n                  }\r\n                </Grid>\r\n              </FormGroup>\r\n            </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmAdd} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SingleRow from \"components/Grid/SingleRow.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { getRole, modifyRole, getAllMenus } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Role',\r\n    name: 'Name',\r\n    menu: 'Menus',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改角色权限',\r\n    name: '名称',\r\n    menu: '可用菜单',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyRoleDialog(props){\r\n  const defaultValues = {\r\n    checked: new Set(),\r\n  };\r\n  const { lang, name, open, onSuccess, onCancel } = props;\r\n  const texts = i18n[lang];\r\n  const options = getAllMenus(lang);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ error, setError ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n\r\n  const onModifyFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setError('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = () =>{\r\n    resetDialog();\r\n    onSuccess(name);\r\n  }\r\n\r\n  const confirmModify = () => {\r\n    if(!request.checked || 0 === request.checked.size){\r\n      onModifyFail('Select at least one menu item');\r\n      return;\r\n    }\r\n    //puy by order\r\n    var menus = [];\r\n    options.forEach(menu => {\r\n      if(request.checked.has(menu.value)){\r\n        menus.push(menu.value);\r\n      }\r\n    })\r\n    modifyRole(name, menus, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (!name || !open || initialed ){\r\n      return;\r\n    }\r\n\r\n    const onGetRoleSuccess = data =>{\r\n      const { menu } = data;\r\n      var updated = new Set();\r\n      menu.forEach(itemValue => {\r\n        updated.add(itemValue);\r\n      })\r\n      setRequest({\r\n        checked: updated,\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    getRole(name, onGetRoleSuccess, onModifyFail);\r\n\r\n  }, [initialed, open, name]);\r\n\r\n  const handleTagsChanged = e =>{\r\n    const value = e.target.value;\r\n    var checked = e.target.checked;\r\n    var previous = {\r\n      ...request,\r\n    };\r\n\r\n    if(checked){\r\n      previous.checked.add(value);\r\n    }else{\r\n      previous.checked.delete(value);\r\n    }\r\n    setRequest(previous);\r\n  };\r\n\r\n  //begin render\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    content = (\r\n      <Grid container>\r\n        <SingleRow>\r\n          <GridItem xs={12} sm={6} md={4}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.name}\r\n                value={name}\r\n                margin=\"normal\"\r\n                disabled\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n        <SingleRow>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <FormControl component=\"fieldset\" fullWidth>\r\n                <FormLabel component=\"legend\">{texts.menu}</FormLabel>\r\n                <FormGroup>\r\n                  <Grid container>\r\n                    {\r\n                        options.map((tag, key) => {\r\n                          const { value, label } = tag;\r\n                          let checked;\r\n                          if (request.checked.has(value)){\r\n                            checked = true;\r\n                          }else{\r\n                            checked = false;\r\n                          }\r\n                          return (\r\n                            <GridItem xs={6} sm={3} key={key}>\r\n                              <FormControlLabel\r\n                                control={<Checkbox checked={checked} onChange={handleTagsChanged} value={value}/>}\r\n                                label={label}\r\n                              />\r\n                            </GridItem>\r\n                          )\r\n                        })\r\n                    }\r\n                  </Grid>\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Box>\r\n          </GridItem>\r\n        </SingleRow>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {content}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmModify} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { removeRole } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Remove Role',\r\n    content: 'Are you sure to remove role ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除角色',\r\n    content: '是否删除角色 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function RemoveRoleDialog(props){\r\n  const { lang, name, open, onSuccess, onCancel } = props;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onRemoveFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRemoveSuccess = (name) =>{\r\n    setError('');\r\n    onSuccess(name);\r\n  }\r\n\r\n  const confirmRemove = () =>{\r\n    removeRole(name, onRemoveSuccess, onRemoveFail);\r\n  }\r\n\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"xs\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content + name}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmRemove} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport AddRoleDialog from \"views/Users/AddRoleDialog\";\r\nimport ModifyRoleDialog from \"views/Users/ModifyRoleDialog\";\r\nimport RemoveRoleDialog from \"views/Users/RemoveRoleDialog\";\r\nimport { getLoggedSession, logoutSession, redirectToLogin } from 'utils.js';\r\nimport { queryAllRoles, writeLog } from \"nano_api.js\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\n\r\nconst styles = {\r\n  ...tableStyles,\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Add New Role\",\r\n    name: 'Role Name',\r\n    modify: 'Modify',\r\n    delete: 'Remove',\r\n    operates: 'Operates',\r\n    noResource: 'No Role Available',\r\n  },\r\n  'cn':{\r\n    createButton: \"增加新角色\",\r\n    name: '角色名',\r\n    modify: '修改',\r\n    delete: '删除',\r\n    operates: '操作',\r\n    noResource: '尚未创建角色',\r\n  }\r\n}\r\n\r\nexport default function RoleTab(props){\r\n    const classes = useStyles();\r\n    const [ roleList, setRoleList ] = React.useState(null);\r\n\r\n    //for dialog\r\n    const [ addDialogVisible, setAddDialogVisible ] = React.useState(false);\r\n    const [ removeDialogVisible, setRemoveDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ currentRole, setCurrentRole ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadAllRoles = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n        logoutSession();\r\n      }\r\n      queryAllRoles(setRoleList, onLoadFail);\r\n    }, [ showErrorMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //detail\r\n    const showModifyDialog = rolename =>{\r\n      setModifyDialogVisible(true);\r\n      setCurrentRole(rolename);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = rolename =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('role '+ rolename + ' modified');\r\n      reloadAllRoles();\r\n    };\r\n\r\n    //delete\r\n    const showRemoveDialog = rolename =>{\r\n      setRemoveDialogVisible(true);\r\n      setCurrentRole(rolename);\r\n    }\r\n\r\n    const closeRemoveDialog = () =>{\r\n      setRemoveDialogVisible(false);\r\n    }\r\n\r\n    const onRemoveSuccess = rolename =>{\r\n      closeRemoveDialog();\r\n      showNotifyMessage('role '+ rolename + ' removed');\r\n      reloadAllRoles();\r\n    };\r\n\r\n    //create\r\n    const showAddDialog = () =>{\r\n      setAddDialogVisible(true);\r\n    };\r\n\r\n    const closeAddDialog = () =>{\r\n      setAddDialogVisible(false);\r\n    }\r\n\r\n    const onAddSuccess = rolename =>{\r\n      closeAddDialog();\r\n      showNotifyMessage('role '+ rolename + ' added');\r\n      reloadAllRoles();\r\n    };\r\n\r\n    React.useEffect(() =>{\r\n      reloadAllRoles();\r\n    }, [reloadAllRoles]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (null === roleList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === roleList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.operates]}\r\n          rows={\r\n            roleList.map((rolename, key) => {\r\n              const name = rolename;\r\n              var operators = [\r\n                <IconButton key='modify' label={texts.modify} icon={EditIcon} onClick={() => showModifyDialog(name)}/>,\r\n                <IconButton key='remove' label={texts.delete} icon={DeleteIcon} onClick={() => showRemoveDialog(name)}/>,\r\n              ];\r\n\r\n              return (\r\n                <TableRow className={classes.tableBodyRow} key={key}>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {rolename}\r\n                  </TableCell>\r\n                  <TableCell className={classes.tableCell}>\r\n                    {operators}\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button size=\"sm\" color=\"info\" round onClick={showAddDialog}><AddIcon />{texts.createButton}</Button>,\r\n    ];\r\n\r\n    return (\r\n\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Container maxWidth='sm'>\r\n            {content}\r\n          </Container>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <AddRoleDialog\r\n            lang={lang}\r\n            open={addDialogVisible}\r\n            onSuccess={onAddSuccess}\r\n            onCancel={closeAddDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <ModifyRoleDialog\r\n            lang={lang}\r\n            name={currentRole}\r\n            open={modifyDialogVisible}\r\n            onSuccess={onModifySuccess}\r\n            onCancel={closeModifyDialog}\r\n            />\r\n        </GridItem>\r\n        <GridItem>\r\n          <RemoveRoleDialog\r\n            lang={lang}\r\n            name={currentRole}\r\n            open={removeDialogVisible}\r\n            onSuccess={onRemoveSuccess}\r\n            onCancel={closeRemoveDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\n\r\nimport Tabs from \"components/CustomTabs/CustomTabs.js\";\r\nimport UserTab from \"views/Users/UserTab\";\r\nimport GroupTab from \"views/Users/GroupTab\";\r\nimport GroupMemberTab from \"views/Users/GroupMemberTab\";\r\nimport RoleTab from \"views/Users/RoleTab\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Permissions',\r\n    user: 'Users',\r\n    group: 'User Groups',\r\n    role: 'Roles',\r\n  },\r\n  'cn':{\r\n    title: '权限管理',\r\n    user: '用户',\r\n    group: '用户组',\r\n    role: '角色',\r\n  },\r\n}\r\n\r\nconst MutableGroupTab = props => {\r\n  const { lang } = props;\r\n  const [ group, setGroup ] = React.useState('');\r\n  if(group){\r\n    return <GroupMemberTab lang={lang} group={group} onBack={() => setGroup('')}/>;\r\n  }else{\r\n    return <GroupTab lang={lang} setGroup={setGroup}/>;\r\n  }\r\n}\r\n\r\nexport default function Main(props){\r\n  const { lang } = props;\r\n  const texts = i18n[lang];\r\n  return (\r\n    <Tabs\r\n      title={texts.title}\r\n      headerColor=\"primary\"\r\n      tabs={[\r\n        {\r\n          tabName: texts.user,\r\n          tabIcon: PersonIcon,\r\n          tabContent: <UserTab lang={lang}/>,\r\n        },\r\n        {\r\n          tabName: texts.group,\r\n          tabIcon: GroupIcon,\r\n          tabContent: <MutableGroupTab lang={lang}/>,\r\n        },\r\n        {\r\n          tabName: texts.role,\r\n          tabIcon: ListAltIcon,\r\n          tabContent: <RoleTab lang={lang}/>,\r\n        },\r\n      ]}\r\n    />\r\n  )\r\n\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport Box from '@material-ui/core/Box';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport tableStyles from \"assets/jss/material-dashboard-react/components/tableStyle.js\";\r\nimport { getLoggedSession, redirectToLogin } from 'utils.js';\r\nimport { getVisibilities, setVisiblities, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  ...tableStyles,\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    modify: 'Modify',\r\n    visibility: 'Group Resource Visibility',\r\n    description: 'Description',\r\n    instance: 'Instances Visible',\r\n    instanceDescription: 'User can browse instances created by other users in the same group when enabled. Otherwise, an instance is only visible to its creator by default.',\r\n    disk: 'Disk Images Visible',\r\n    diskDescription: 'User can browse disk images created by other users in the same group when enabled. Otherwise, an image is only visible to its creator by default.',\r\n    media: 'Media Images Visible',\r\n    mediaDescription: 'User can browse media images created by other users in the same group when enabled. Otherwise, an image is only visible to its creator by default.',\r\n  },\r\n  'cn':{\r\n    modify: '修改',\r\n    visibility: '组资源可见性',\r\n    description: '描述',\r\n    instance: '云主机实例组内可见',\r\n    instanceDescription: '勾选后，用户可以查看同一组内其他用户创建的云主机实例(默认仅对创建者可见)',\r\n    disk: '磁盘镜像组内可见',\r\n    diskDescription: '勾选后，用户可以查看同一组内其他用户创建的磁盘镜像(默认仅对创建者可见)',\r\n    media: '光盘镜像组内可见',\r\n    mediaDescription: '勾选后，用户可以查看同一组内其他用户创建的光盘镜像(默认仅对创建者可见)',\r\n  }\r\n}\r\n\r\nconst VisibilityRow = props => {\r\n  const { checked, onChange, label, description, classes } = props;\r\n  return (\r\n    <TableRow className={classes.tableBodyRow}>\r\n      <TableCell className={classes.tableCell}>\r\n        <Box display='flex' alignItems=\"center\">\r\n          <Box>\r\n            <Checkbox\r\n              checked={checked}\r\n              onChange={onChange}\r\n              />\r\n          </Box>\r\n          <Box>\r\n            {label}\r\n          </Box>\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell className={classes.tableCell}>\r\n        {description}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nexport default function Visibilities(props){\r\n    const defaultValues = {\r\n      instanceVisible: false,\r\n      diskImageVisible: false,\r\n      mediaImageVisible: false,\r\n    }\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const classes = useStyles();\r\n    const [ initialed, setInitialed ] = React.useState(false);\r\n    const [ request, setRequest ] = React.useState(defaultValues);\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const reloadVisibility = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n      }\r\n      const onLoadSuccess = data => {\r\n        var updated = {\r\n        }\r\n        if(data.instance_visible){\r\n          updated.instanceVisible = true;\r\n        }\r\n        if(data.disk_image_visible){\r\n          updated.diskImageVisible = true;\r\n        }\r\n        if(data.media_image_visible){\r\n          updated.mediaImageVisible = true;\r\n        }\r\n        setRequest(updated);\r\n        setInitialed(true);\r\n      }\r\n      getVisibilities(onLoadSuccess, onLoadFail);\r\n    }, [showErrorMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const handleRequestPropsChanged = name => e =>{\r\n      var checked = e.target.checked\r\n      setRequest(previous => ({\r\n        ...previous,\r\n        [name]: checked,\r\n      }));\r\n    };\r\n\r\n    const modify = () =>{\r\n      const onOperateSuccess = () =>{\r\n        showNotifyMessage('Visibilities updated');\r\n        writeLog('Visibilities updated');\r\n      }\r\n      setVisiblities(request.instanceVisible, request.diskImageVisible, request.mediaImageVisible, onOperateSuccess, showErrorMessage);\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      reloadVisibility();\r\n    }, [reloadVisibility]);\r\n\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n    let content;\r\n    if (!initialed){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else{\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[texts.visibility, texts.visibility]}\r\n          rows={[\r\n            <VisibilityRow key='instance'\r\n              checked={request.instanceVisible}\r\n              onChange={handleRequestPropsChanged('instanceVisible')}\r\n              label={texts.instance}\r\n              description={texts.instanceDescription}\r\n              classes={classes}/>\r\n            ,\r\n            <VisibilityRow key='disk'\r\n              checked={request.diskImageVisible}\r\n              onChange={handleRequestPropsChanged('diskImageVisible')}\r\n              label={texts.disk}\r\n              description={texts.diskDescription}\r\n              classes={classes}/>\r\n            ,\r\n            <VisibilityRow key='media'\r\n              checked={request.mediaImageVisible}\r\n              onChange={handleRequestPropsChanged('mediaImageVisible')}\r\n              label={texts.media}\r\n              description={texts.mediaDescription}\r\n              classes={classes}/>\r\n            ,\r\n          ]}\r\n          />\r\n      );\r\n    }\r\n\r\n    const buttons = [\r\n      <Button key='modify' color=\"info\" onClick={modify}>\r\n        <BuildIcon />{texts.modify}\r\n      </Button>,\r\n    ];\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          {content}\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { deleteSecurityPolicyGroup } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Delete Security Policy',\r\n    content: 'Are you sure to delete security policy ',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除安全策略',\r\n    content: '是否删除安全策略 ',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function DeletePolicyDialog(props){\r\n  const { lang, policyID, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onDeleteFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(policyID);\r\n  }\r\n\r\n  const handleDelete = () =>{\r\n    setOperatable(false);\r\n    deleteSecurityPolicyGroup(policyID, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  const content = texts.content + policyID;\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleDelete,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { createSecurityPolicyGroup } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Create New Security Policy',\r\n    name: 'Name',\r\n    description: 'Description',\r\n    enable: 'Enable',\r\n    enabled: 'Enabled',\r\n    disabled: 'Disabled',\r\n    global: 'Global',\r\n    yes: 'Yes',\r\n    no: 'No',\r\n    defaultAction: 'Default Action',\r\n    accept: 'Accept',\r\n    reject: 'Reject',\r\n    format: \"only letter/digit/'_' allowed\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '创建新安全策略',\r\n    name: \"名称\",\r\n    description: '描述',\r\n    enable: '是否启用',\r\n    enabled: '已启用',\r\n    disabled: '已禁用',\r\n    global: '全局可见',\r\n    yes: '是',\r\n    no: '否',\r\n    defaultAction: '默认处理',\r\n    accept: '接受',\r\n    reject: '拒绝',\r\n    format: \"仅允许字母数字与下划线_\",\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function CreatePolicyDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    action: 'accept',\r\n    enabled: true,\r\n    global: false,\r\n  };\r\n  const { lang, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const actionOptions = [\r\n    {\r\n      label: texts.accept,\r\n      value: 'accept',\r\n    },\r\n    {\r\n      label: texts.reject,\r\n      value: 'reject',\r\n    },\r\n  ];\r\n  const onCreateFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onCreateSuccess = id =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(id);\r\n  }\r\n\r\n  const handleCreate = () =>{\r\n    setOperatable(false);\r\n\r\n    if(!request.action){\r\n      onCreateFail('must specify action');\r\n      return;\r\n    }\r\n\r\n    const namePattern = new RegExp('[^\\\\w]');\r\n    if(!request.name){\r\n      onCreateFail('must specify policy name');\r\n      return;\r\n    }if (namePattern.test(request.name)){\r\n      onCreateFail(texts.format);\r\n      return;\r\n    }\r\n\r\n    createSecurityPolicyGroup(request.name, request.description, request.enabled,\r\n      request.global, request.action, onCreateSuccess, onCreateFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleRequestSwitchChanged = name => e =>{\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  //begin render\r\n  const inputs = [\r\n    {\r\n      type: \"text\",\r\n      label: texts.name,\r\n      onChange: handleRequestPropsChanged('name'),\r\n      value: request.name,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 8,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n    {\r\n      type: \"radio\",\r\n      label: texts.defaultAction,\r\n      onChange: handleRequestPropsChanged('action'),\r\n      value: request.action,\r\n      options: actionOptions,\r\n      disabled: true,\r\n      oneRow: true,\r\n      xs: 10,\r\n      sm: 8,\r\n      md: 6,\r\n    },\r\n    {\r\n      type: \"switch\",\r\n      label: texts.enable,\r\n      onChange: handleRequestSwitchChanged('enabled'),\r\n      value: request.enabled,\r\n      on: texts.enabled,\r\n      off: texts.disabled,\r\n      oneRow: true,\r\n      xs: 6,\r\n    },\r\n    {\r\n      type: \"switch\",\r\n      label: texts.global,\r\n      onChange: handleRequestSwitchChanged('global'),\r\n      value: request.global,\r\n      on: texts.yes,\r\n      off: texts.no,\r\n      oneRow: true,\r\n      xs: 6,\r\n    },\r\n    {\r\n      type: \"textarea\",\r\n      label: texts.description,\r\n      onChange: handleRequestPropsChanged('description'),\r\n      value: request.description,\r\n      oneRow: true,\r\n      rows: 3,\r\n      xs: 10,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleCreate,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifySecurityPolicyGroup, getSecurityPolicyGroup } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Security Policy',\r\n    name: 'Name',\r\n    description: 'Description',\r\n    enable: 'Enable',\r\n    enabled: 'Enabled',\r\n    disabled: 'Disabled',\r\n    global: 'Global',\r\n    yes: 'Yes',\r\n    no: 'No',\r\n    defaultAction: 'Default Action',\r\n    accept: 'Accept',\r\n    reject: 'Reject',\r\n    format: \"only letter/digit/'_' allowed\",\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改安全策略',\r\n    name: \"名称\",\r\n    description: '描述',\r\n    enable: '是否启用',\r\n    enabled: '已启用',\r\n    disabled: '已禁用',\r\n    global: '全局可见',\r\n    yes: '是',\r\n    no: '否',\r\n    defaultAction: '默认处理',\r\n    accept: '接受',\r\n    reject: '拒绝',\r\n    format: \"仅允许字母数字与下划线_\",\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyPolicyDialog(props){\r\n  const defaultValues = {\r\n    name: '',\r\n    description: '',\r\n    action: 'accept',\r\n    enabled: true,\r\n    global: false,\r\n  };\r\n  const { lang, policyID, open, onSuccess, onCancel } = props;\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const actionOptions = [\r\n    {\r\n      label: texts.accept,\r\n      value: 'accept',\r\n    },\r\n    {\r\n      label: texts.reject,\r\n      value: 'reject',\r\n    },\r\n  ];\r\n\r\n  const onModifyFail =React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = () =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(policyID);\r\n  }\r\n\r\n  const handleConfirm = () =>{\r\n    setOperatable(false);\r\n\r\n    if(!request.action){\r\n      onModifyFail('must specify action');\r\n      return;\r\n    }\r\n\r\n    const namePattern = new RegExp('[^\\\\w]');\r\n    if(!request.name){\r\n      onModifyFail('must specify policy name');\r\n      return;\r\n    }if (namePattern.test(request.name)){\r\n      onModifyFail(texts.format);\r\n      return;\r\n    }\r\n\r\n    modifySecurityPolicyGroup(policyID, request.name, request.description, request.enabled,\r\n      request.global, request.action, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleRequestSwitchChanged = name => e =>{\r\n    var value = e.target.checked\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  React.useEffect(()=>{\r\n    if (!policyID || !open ){\r\n      return;\r\n    }\r\n\r\n    setMounted(true);\r\n    const onGetPolicySuccess = policy =>{\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      setRequest({\r\n        name: policy.name,\r\n        description: policy.description,\r\n        action: policy.default_action,\r\n        enabled: policy.enabled,\r\n        global: policy.global,\r\n      })\r\n      setInitialed(true);\r\n    };\r\n\r\n    getSecurityPolicyGroup(policyID, onGetPolicySuccess, onModifyFail);\r\n    return () => {\r\n      setMounted(false);\r\n    }\r\n  }, [mounted, open, policyID, onModifyFail]);\r\n\r\n  //begin render\r\n\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"text\",\r\n        label: texts.name,\r\n        onChange: handleRequestPropsChanged('name'),\r\n        value: request.name,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n        sm: 6,\r\n        md: 4,\r\n      },\r\n      {\r\n        type: \"radio\",\r\n        label: texts.defaultAction,\r\n        onChange: handleRequestPropsChanged('action'),\r\n        value: request.action,\r\n        options: actionOptions,\r\n        disabled: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n        sm: 8,\r\n        md: 6,\r\n      },\r\n      {\r\n        type: \"switch\",\r\n        label: texts.enable,\r\n        onChange: handleRequestSwitchChanged('enabled'),\r\n        value: request.enabled,\r\n        on: texts.enabled,\r\n        off: texts.disabled,\r\n        oneRow: true,\r\n        xs: 6,\r\n      },\r\n      {\r\n        type: \"switch\",\r\n        label: texts.global,\r\n        onChange: handleRequestSwitchChanged('global'),\r\n        value: request.global,\r\n        on: texts.yes,\r\n        off: texts.no,\r\n        oneRow: true,\r\n        xs: 6,\r\n      },\r\n      {\r\n        type: \"textarea\",\r\n        label: texts.description,\r\n        onChange: handleRequestPropsChanged('description'),\r\n        value: request.description,\r\n        oneRow: true,\r\n        rows: 3,\r\n        xs: 10,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n    buttons.push(\r\n      {\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleConfirm,\r\n      }\r\n    );\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n      title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Table from \"components/Table/ObjectTable.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport DeleteDialog from \"views/PolicyGroups/DeletePolicyDialog.js\";\r\nimport CreateDialog from \"views/PolicyGroups/CreatePolicyDialog.js\";\r\nimport ModifyDialog from \"views/PolicyGroups/ModifyPolicyDialog.js\";\r\nimport { getLoggedSession } from 'utils.js';\r\nimport { searchSecurityPolicyGroups, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Create New Group\",\r\n    tableTitle: \"Security Policy Groups\",\r\n    name: \"Name\",\r\n    enable: 'Enable',\r\n    enabled: 'Enabled',\r\n    disabled: 'Disabled',\r\n    global: 'Global',\r\n    yes: 'Yes',\r\n    no: 'No',\r\n    defaultAction: 'Default Action',\r\n    accept: 'Accept',\r\n    reject: 'Reject',\r\n    operates: \"Operates\",\r\n    noResource: \"No security policy available\",\r\n    modify: 'Modify',\r\n    delete: 'Delete',\r\n    rules: 'Rules',\r\n  },\r\n  'cn':{\r\n    createButton: \"创建新策略组\",\r\n    tableTitle: \"安全策略组\",\r\n    name: \"名称\",\r\n    enable: '是否启用',\r\n    enabled: '已启用',\r\n    disabled: '已禁用',\r\n    global: '全局可见',\r\n    yes: '是',\r\n    no: '否',\r\n    defaultAction: '默认处理',\r\n    accept: '接受',\r\n    reject: '拒绝',\r\n    operates: \"操作\",\r\n    noResource: \"没有安全策略组\",\r\n    modify: '修改',\r\n    delete: '删除',\r\n    rules: '规则',\r\n  }\r\n}\r\n\r\nexport default function SystemTemplates(props){\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const classes = useStyles();\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ dataList, setDataList ] = React.useState(null);\r\n    //for dialog\r\n    const [ createDialogVisible, setCreateDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ deleteDialogVisible, setDeleteDialogVisible ] = React.useState(false);\r\n    const [ selected, setSelected ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const reloadAllData = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      var session = getLoggedSession();\r\n      if (null === session){\r\n        showErrorMessage('session expired');\r\n        return;\r\n      }\r\n\r\n      searchSecurityPolicyGroups(session.user, session.group, false, false,\r\n        setDataList, showErrorMessage);\r\n    }, [showErrorMessage, mounted]);\r\n\r\n    const showNotifyMessage = msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //modify\r\n    const showModifyDialog = policyID =>{\r\n      setModifyDialogVisible(true);\r\n      setSelected(policyID);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = policyID =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage('policy ' + policyID + ' modified');\r\n      reloadAllData();\r\n    };\r\n\r\n    //delete\r\n    const showDeleteDialog = policyID =>{\r\n      setDeleteDialogVisible(true);\r\n      setSelected(policyID);\r\n    }\r\n\r\n    const closeDeleteDialog = () =>{\r\n      setDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onDeleteSuccess = policyID =>{\r\n      closeDeleteDialog();\r\n      showNotifyMessage('policy ' + policyID + ' deleted');\r\n      reloadAllData();\r\n    };\r\n\r\n    //create\r\n    const showCreateDialog = () =>{\r\n      setCreateDialogVisible(true);\r\n    };\r\n\r\n    const closeCreateDialog = () =>{\r\n      setCreateDialogVisible(false);\r\n    }\r\n\r\n    const onCreateSuccess = policyID =>{\r\n      closeCreateDialog();\r\n      showNotifyMessage('new policy ' + policyID + ' created');\r\n      reloadAllData();\r\n    };\r\n\r\n    function dataToNodes(data, buttons){\r\n      const operates = buttons.map((button, key) => (\r\n        <IconButton label={button.label} icon={button.icon} onClick={button.onClick} href={button.href} key={key}/>\r\n      ))\r\n      const { name, default_action, enabled, global } = data;\r\n      return [ name, default_action === 'accept'?texts.accept: texts.reject, enabled? texts.enabled:texts.disabled, global? texts.yes:texts.no, operates];\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadAllData();\r\n      return () =>{\r\n        setMounted(false);\r\n      }\r\n    }, [reloadAllData]);\r\n\r\n    //begin rendering\r\n    let content;\r\n    if (null === dataList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === dataList.length){\r\n      content = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noResource}</Info></Box>;\r\n    }else{\r\n      var rows = [];\r\n      dataList.forEach( data => {\r\n        const buttons = [\r\n          {\r\n            onClick: e => showModifyDialog(data.id),\r\n            icon: BuildIcon,\r\n            label: texts.modify,\r\n          },\r\n          {\r\n            onClick: e => showDeleteDialog(data.id),\r\n            icon: DeleteIcon,\r\n            label: texts.delete,\r\n          },\r\n          {\r\n            href: '/admin/security_policies/' + data.id + '/rules/',\r\n            icon: PlaylistAddCheckIcon,\r\n            label: texts.rules,\r\n          }\r\n        ];\r\n        rows.push(dataToNodes(data, buttons));\r\n      });\r\n      content = (\r\n        <Table\r\n          color=\"primary\"\r\n          headers={[texts.name, texts.defaultAction, texts.enable, texts.global, texts.operates]}\r\n          rows={rows}/>\r\n      );\r\n\r\n    }\r\n\r\n    var buttonProps = [\r\n      {\r\n        onClick: showCreateDialog,\r\n        icon: AddIcon,\r\n        label: texts.createButton,\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={6} md={4}>\r\n              <Box display=\"flex\">\r\n              {\r\n                buttonProps.map((p, key) => {\r\n                  if (p.href){\r\n                    return (\r\n                      <Box p={1} key={key}>\r\n                        <Button size=\"sm\" color=\"info\" round href={p.href}>\r\n                          {React.createElement(p.icon)}{p.label}\r\n                        </Button>\r\n                      </Box>\r\n                    );\r\n                  }else{\r\n                    return (\r\n                      <Box p={1} key={key}>\r\n                        <Button size=\"sm\" color=\"info\" round onClick={p.onClick}>\r\n                          {React.createElement(p.icon)}{p.label}\r\n                        </Button>\r\n                      </Box>\r\n                    );\r\n                  }\r\n                })\r\n              }\r\n              </Box>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <Snackbar\r\n          place=\"tr\"\r\n          color={notifyColor}\r\n          message={notifyMessage}\r\n          open={\"\" !== notifyMessage}\r\n          closeNotification={closeNotify}\r\n          close\r\n        />\r\n        <CreateDialog\r\n          lang={lang}\r\n          open={createDialogVisible}\r\n          onSuccess={onCreateSuccess}\r\n          onCancel={closeCreateDialog}\r\n          />\r\n        <ModifyDialog\r\n          lang={lang}\r\n          open={modifyDialogVisible}\r\n          policyID={selected}\r\n          onSuccess={onModifySuccess}\r\n          onCancel={closeModifyDialog}\r\n          />\r\n        <DeleteDialog\r\n          lang={lang}\r\n          open={deleteDialogVisible}\r\n          policyID={selected}\r\n          onSuccess={onDeleteSuccess}\r\n          onCancel={closeDeleteDialog}\r\n          />\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { removeSecurityPolicyRule } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Remove Security Policy Rule',\r\n    content: 'Are you sure to remove ',\r\n    content2: 'th rule',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '删除安全规则',\r\n    content: '是否删除第 ',\r\n    content2: '个安全规则',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function RemoveDialog(props){\r\n  const { lang, open, policyID, index, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const onRemoveFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setPrompt('');\r\n    onCancel();\r\n  }\r\n\r\n  const onRemoveSuccess = () =>{\r\n    setOperatable(true);\r\n    setPrompt('');\r\n    onSuccess(policyID, index);\r\n  }\r\n\r\n  const handleRemove = () =>{\r\n    setOperatable(false);\r\n    removeSecurityPolicyRule(policyID, index, onRemoveSuccess, onRemoveFail);\r\n  }\r\n\r\n  const content = texts.content + (index + 1) + texts.content2;\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label:  texts.confirm,\r\n      onClick: handleRemove,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='xs' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { addSecurityPolicyRule } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Add Security Policy Rule',\r\n    action: 'Action',\r\n    accept: 'Accept',\r\n    reject: 'Reject',\r\n    protocol: 'Protocol',\r\n    sourceAddress: 'Source Address',\r\n    targetPort: 'Target Port',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '添加安全规则',\r\n    action: '处理',\r\n    accept: '接受',\r\n    reject: '拒绝',\r\n    protocol: '协议',\r\n    sourceAddress: '来源地址',\r\n    targetPort: '目标端口',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function AddRuleDialog(props){\r\n\r\n  const protocolOptions = [\r\n    {\r\n      label: 'TCP',\r\n      value: 'tcp',\r\n    },\r\n    {\r\n      label: 'UDP',\r\n      value: 'udp',\r\n    }];\r\n  const defaultValues = {\r\n    action: 'accept',\r\n    protocol: '',\r\n    port: '',\r\n  };\r\n  const { lang, policyID, open, onSuccess, onCancel } = props;\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const actionOptions = [\r\n    {\r\n      label: texts.accept,\r\n      value: 'accept',\r\n    },\r\n    {\r\n      label: texts.reject,\r\n      value: 'reject',\r\n    },\r\n  ];\r\n  const onAddFail = msg =>{\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onAddSuccess = id =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(id);\r\n  }\r\n\r\n  const handleAdd = () =>{\r\n    setOperatable(false);\r\n\r\n    if(!request.action){\r\n      onAddFail('must specify action');\r\n      return;\r\n    }\r\n    if(!request.protocol){\r\n      onAddFail('must specify protocol');\r\n      return;\r\n    }\r\n    if(!request.port){\r\n      onAddFail('must specify target port');\r\n      return;\r\n    }\r\n    var targetPort = Number.parseInt(request.port);\r\n    if(Number.isNaN(targetPort)){\r\n      onAddFail('invalid target port: ' + request.port);\r\n      return;\r\n    }\r\n\r\n    addSecurityPolicyRule(policyID, request.action, request.protocol, targetPort, onAddSuccess, onAddFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n\r\n  //begin render\r\n  const inputs = [\r\n    {\r\n      type: \"radio\",\r\n      label: texts.action,\r\n      onChange: handleRequestPropsChanged('action'),\r\n      value: request.action,\r\n      options: actionOptions,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 10,\r\n      sm: 8,\r\n      md: 6,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      label: texts.protocol,\r\n      onChange: handleRequestPropsChanged('protocol'),\r\n      value: request.protocol,\r\n      options: protocolOptions,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 8,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n    {\r\n      type: \"text\",\r\n      label: texts.targetPort,\r\n      onChange: handleRequestPropsChanged('port'),\r\n      value: request.port,\r\n      required: true,\r\n      oneRow: true,\r\n      xs: 8,\r\n      sm: 6,\r\n      md: 4,\r\n    },\r\n  ];\r\n\r\n  const content = <InputList inputs={inputs}/>\r\n\r\n  const buttons = [\r\n    {\r\n      color: 'transparent',\r\n      label: texts.cancel,\r\n      onClick: closeDialog,\r\n    },\r\n    {\r\n      color: 'info',\r\n      label: texts.confirm,\r\n      onClick: handleAdd,\r\n    },\r\n  ];\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport InputList from \"components/CustomInput/InputList\";\r\nimport CustomDialog from \"components/Dialog/CustomDialog.js\";\r\nimport { modifySecurityPolicyRule } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Modify Security Policy Rule',\r\n    action: 'Action',\r\n    accept: 'Accept',\r\n    reject: 'Reject',\r\n    protocol: 'Protocol',\r\n    sourceModifyress: 'Source Address',\r\n    targetPort: 'Target Port',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '修改安全规则',\r\n    action: '处理',\r\n    accept: '接受',\r\n    reject: '拒绝',\r\n    protocol: '协议',\r\n    sourceModifyress: '来源地址',\r\n    targetPort: '目标端口',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function ModifyRuleDialog(props){\r\n  const { lang, policyID, rule, open, onSuccess, onCancel } = props;\r\n  const protocolOptions = [\r\n    {\r\n      label: 'TCP',\r\n      value: 'tcp',\r\n    },\r\n    {\r\n      label: 'UDP',\r\n      value: 'udp',\r\n    }];\r\n  const defaultValues = {\r\n    action: rule.action,\r\n    protocol: rule.protocol,\r\n    port: rule.to_port,\r\n  };\r\n  const [ operatable, setOperatable ] = React.useState(true);\r\n  const [ prompt, setPrompt ] = React.useState('');\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ request, setRequest ] = React.useState(defaultValues);\r\n  const texts = i18n[lang];\r\n  const title = texts.title;\r\n  const actionOptions = [\r\n    {\r\n      label: texts.accept,\r\n      value: 'accept',\r\n    },\r\n    {\r\n      label: texts.reject,\r\n      value: 'reject',\r\n    },\r\n  ];\r\n  const onModifyFail = React.useCallback(msg =>{\r\n    if(!mounted){\r\n      return;\r\n    }\r\n    setOperatable(true);\r\n    setPrompt(msg);\r\n  }, [mounted]);\r\n\r\n  const resetDialog = () =>{\r\n    setPrompt('');\r\n    setRequest(defaultValues);\r\n    setInitialed(false);\r\n  };\r\n\r\n  const closeDialog = ()=>{\r\n    resetDialog();\r\n    onCancel();\r\n  }\r\n\r\n  const onModifySuccess = id =>{\r\n    setOperatable(true);\r\n    resetDialog();\r\n    onSuccess(id);\r\n  }\r\n\r\n  const handleModify = () =>{\r\n    setOperatable(false);\r\n\r\n    if(!request.action){\r\n      onModifyFail('must specify action');\r\n      return;\r\n    }\r\n    if(!request.protocol){\r\n      onModifyFail('must specify protocol');\r\n      return;\r\n    }\r\n    if(!request.port){\r\n      onModifyFail('must specify target port');\r\n      return;\r\n    }\r\n    var targetPort = Number.parseInt(request.port);\r\n    if(Number.isNaN(targetPort)){\r\n      onModifyFail('invalid target port: ' + request.port);\r\n      return;\r\n    }\r\n\r\n    modifySecurityPolicyRule(policyID, rule.index, request.action, request.protocol, targetPort, onModifySuccess, onModifyFail);\r\n  }\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n\r\n    React.useEffect(()=>{\r\n      if (!policyID || !rule ){\r\n        return;\r\n      }\r\n\r\n      setMounted(true);\r\n      setRequest({\r\n        action: rule.action,\r\n        protocol: rule.protocol,\r\n        port: rule.to_port,\r\n      })\r\n      setInitialed(true);\r\n      return () => {\r\n        setMounted(false);\r\n      }\r\n    }, [mounted, open, policyID, rule, onModifyFail]);\r\n\r\n\r\n  //begin render\r\n  var buttons = [{\r\n    color: 'transparent',\r\n    label: texts.cancel,\r\n    onClick: closeDialog,\r\n  }];\r\n  let content;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  }else{\r\n    const inputs = [\r\n      {\r\n        type: \"radio\",\r\n        label: texts.action,\r\n        onChange: handleRequestPropsChanged('action'),\r\n        value: request.action,\r\n        options: actionOptions,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 10,\r\n        sm: 8,\r\n        md: 6,\r\n      },\r\n      {\r\n        type: \"select\",\r\n        label: texts.protocol,\r\n        onChange: handleRequestPropsChanged('protocol'),\r\n        value: request.protocol,\r\n        options: protocolOptions,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n        sm: 6,\r\n        md: 4,\r\n      },\r\n      {\r\n        type: \"text\",\r\n        label: texts.targetPort,\r\n        onChange: handleRequestPropsChanged('port'),\r\n        value: request.port,\r\n        required: true,\r\n        oneRow: true,\r\n        xs: 8,\r\n        sm: 6,\r\n        md: 4,\r\n      },\r\n    ];\r\n\r\n    content = <InputList inputs={inputs}/>\r\n    buttons.push({\r\n        color: 'info',\r\n        label: texts.confirm,\r\n        onClick: handleModify,\r\n      });\r\n  }\r\n\r\n  return <CustomDialog size='sm' open={open} prompt={prompt}\r\n    title={title}  buttons={buttons} content={content} operatable={operatable}/>;\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport Box from '@material-ui/core/Box';\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Table from \"components/Table/ObjectTable.js\";\r\nimport IconButton from \"components/CustomButtons/IconButton.js\";\r\nimport RemoveDialog from \"views/PolicyGroups/RemoveRuleDialog.js\";\r\nimport AddDialog from \"views/PolicyGroups/AddRuleDialog.js\";\r\nimport ModifyDialog from \"views/PolicyGroups/ModifyRuleDialog.js\";\r\nimport fontStyles from \"assets/jss/material-dashboard-react/components/typographyStyle.js\";\r\nimport { getSecurityPolicyRules, moveUpSecurityPolicyRule,\r\n  moveDownSecurityPolicyRule, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  ...fontStyles,\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    createButton: \"Add New Rule\",\r\n    tableTitle: \"Security Policy Rules\",\r\n    rule: 'Rule',\r\n    action: 'Action',\r\n    protocol: 'Protocol',\r\n    sourceAddress: 'Source Address',\r\n    targetPort: 'Target Port',\r\n    accept: 'Accept',\r\n    reject: 'Reject',\r\n    operates: \"Operates\",\r\n    noResource: \"No security policy available\",\r\n    modify: 'Modify',\r\n    remove: 'Remove',\r\n    moveUp: 'Move Up',\r\n    moveDown: 'Move Down',\r\n    back: 'Back',\r\n  },\r\n  'cn':{\r\n    createButton: \"添加新规则\",\r\n    tableTitle: \"安全规则\",\r\n    rule: '规则',\r\n    action: '处理',\r\n    protocol: '协议',\r\n    sourceAddress: '来源地址',\r\n    targetPort: '目标端口',\r\n    accept: '接受',\r\n    reject: '拒绝',\r\n    operates: \"操作\",\r\n    noResource: \"没有安全策略组\",\r\n    modify: '修改',\r\n    remove: '移除',\r\n    moveUp: '上移',\r\n    moveDown: '下移',\r\n    back: '返回',\r\n  }\r\n}\r\n\r\nexport default function SystemTemplates(props){\r\n    const policyID = props.match.params.id;\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    const classes = useStyles();\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ datalist, setDatalist ] = React.useState(null);\r\n    //for dialog\r\n    const [ addDialogVisible, setAddDialogVisible ] = React.useState(false);\r\n    const [ modifyDialogVisible, setModifyDialogVisible ] = React.useState(false);\r\n    const [ remoeDialogVisible, setRemoveDialogVisible ] = React.useState(false);\r\n    const [ selected, setSelected ] = React.useState('');\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage, mounted]);\r\n\r\n    const reloadAllData = React.useCallback(() => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      getSecurityPolicyRules(policyID, setDatalist, showErrorMessage);\r\n    }, [policyID, showErrorMessage, mounted]);\r\n\r\n    const showNotifyMessage = msg => {\r\n      if (!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    //modify\r\n    const showModifyDialog = rule =>{\r\n      setModifyDialogVisible(true);\r\n      setSelected(rule);\r\n    }\r\n\r\n    const closeModifyDialog = () =>{\r\n      setModifyDialogVisible(false);\r\n    }\r\n\r\n    const onModifySuccess = index =>{\r\n      closeModifyDialog();\r\n      showNotifyMessage(index + 'th rule modified');\r\n      reloadAllData();\r\n    };\r\n\r\n    //delete\r\n    const showRemoveDialog = rule =>{\r\n      setRemoveDialogVisible(true);\r\n      setSelected(rule);\r\n    }\r\n\r\n    const closeRemoveDialog = () =>{\r\n      setRemoveDialogVisible(false);\r\n    }\r\n\r\n    const onRemoveSuccess = (id, index) =>{\r\n      closeRemoveDialog();\r\n      showNotifyMessage(index + 'the rule removed');\r\n      reloadAllData();\r\n    };\r\n\r\n    //create\r\n    const showAddDialog = () =>{\r\n      setAddDialogVisible(true);\r\n    };\r\n\r\n    const closeAddDialog = () =>{\r\n      setAddDialogVisible(false);\r\n    }\r\n\r\n    const onAddSuccess = () =>{\r\n      closeAddDialog();\r\n      showNotifyMessage('new security policy rule added');\r\n      reloadAllData();\r\n    };\r\n\r\n    //move rule\r\n    const moveUp = rule =>{\r\n      const onMoveUpSuccess = (id, i) =>{\r\n        showNotifyMessage(i + 'th rule moved up');\r\n        reloadAllData();\r\n      }\r\n      moveUpSecurityPolicyRule(policyID, rule.index, onMoveUpSuccess, showErrorMessage);\r\n    }\r\n\r\n    const moveDown = rule =>{\r\n      const onMoveDownSuccess = (id, i) =>{\r\n        showNotifyMessage(i + 'th rule moved down');\r\n        reloadAllData();\r\n      }\r\n      moveDownSecurityPolicyRule(policyID, rule.index, onMoveDownSuccess, showErrorMessage);\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      setMounted(true);\r\n      reloadAllData();\r\n      return () =>{\r\n        setMounted(false);\r\n      }\r\n    }, [reloadAllData]);\r\n\r\n    function dataToNodes(index, datalist, buttons){\r\n      const operates = buttons.map((button, key) => (\r\n        <IconButton label={button.label} icon={button.icon} onClick={button.onClick} key={key}/>\r\n      ))\r\n      const { action, protocol, from_address, to_port } = datalist;\r\n      let actionIcon;\r\n      if ('accept' === action){\r\n        actionIcon = (\r\n          <Tooltip title={texts.accept} placement=\"top\">\r\n            <CheckIcon className={classes.successText}/>\r\n          </Tooltip>);\r\n      }else{\r\n        actionIcon = (\r\n          <Tooltip title={texts.reject} placement=\"top\">\r\n            <BlockIcon className={classes.dangerText}/>\r\n          </Tooltip>);\r\n      }\r\n      return [ index, actionIcon, protocol, from_address, to_port, operates];\r\n    }\r\n\r\n    //begin rendering\r\n    let content;\r\n    if (null === datalist){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === datalist.length){\r\n      content = <Box display=\"flex\" justifyContent=\"center\"><Info>{texts.noResource}</Info></Box>;\r\n    }else{\r\n      var rows = [];\r\n      datalist.forEach( (rule, index) => {\r\n        var item = {\r\n          index: index,\r\n          action: rule.action,\r\n          protocol: rule.protocol,\r\n          to_port: rule.to_port,\r\n        }\r\n        var buttons = [\r\n          {\r\n            onClick: e => showModifyDialog(item),\r\n            icon: BuildIcon,\r\n            label: texts.modify,\r\n          },\r\n          {\r\n            onClick: e => showRemoveDialog(item),\r\n            icon: DeleteIcon,\r\n            label: texts.remove,\r\n          },\r\n        ];\r\n        if (datalist.length - 1 !== index){\r\n          buttons.push({\r\n            onClick: e => moveDown(item),\r\n            icon: ArrowDownwardIcon,\r\n            label: texts.moveDown,\r\n          });\r\n        }\r\n        if (0 !== index){\r\n          buttons.push({\r\n            onClick: e => moveUp(item),\r\n            icon: ArrowUpwardIcon,\r\n            label: texts.moveUp,\r\n          });\r\n        }\r\n\r\n        rows.push(dataToNodes(index, rule, buttons));\r\n      });\r\n\r\n      content = (\r\n        <Table\r\n          color=\"primary\"\r\n          headers={[texts.rule, texts.action, texts.protocol, texts.sourceAddress, texts.targetPort, texts.operates]}\r\n          rows={rows}/>\r\n      );\r\n\r\n    }\r\n\r\n    var buttonProps = [\r\n      {\r\n        href: '/admin/security_policies/',\r\n        icon: NavigateBeforeIcon,\r\n        label: texts.back,\r\n      },\r\n      {\r\n        onClick: showAddDialog,\r\n        icon: AddIcon,\r\n        label: texts.createButton,\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n          <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={6} md={4}>\r\n              <Box display=\"flex\">\r\n              {\r\n                buttonProps.map( (p, key) => {\r\n                  if (p.href){\r\n                    return (\r\n                      <Box p={1} key={key}>\r\n                        <Button size=\"sm\" color=\"info\" round href={p.href}>\r\n                          {React.createElement(p.icon)}{p.label}\r\n                        </Button>\r\n                      </Box>\r\n                    );\r\n                  }else{\r\n                    return (\r\n                      <Box p={1} key={key}>\r\n                        <Button size=\"sm\" color=\"info\" round onClick={p.onClick}>\r\n                          {React.createElement(p.icon)}{p.label}\r\n                        </Button>\r\n                      </Box>\r\n                    );\r\n                  }\r\n                })\r\n              }\r\n              </Box>\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <Snackbar\r\n          place=\"tr\"\r\n          color={notifyColor}\r\n          message={notifyMessage}\r\n          open={\"\" !== notifyMessage}\r\n          closeNotification={closeNotify}\r\n          close\r\n        />\r\n        <AddDialog\r\n          lang={lang}\r\n          open={addDialogVisible}\r\n          policyID={policyID}\r\n          onSuccess={onAddSuccess}\r\n          onCancel={closeAddDialog}\r\n          />\r\n        <ModifyDialog\r\n          lang={lang}\r\n          open={modifyDialogVisible}\r\n          policyID={policyID}\r\n          rule={selected}\r\n          onSuccess={onModifySuccess}\r\n          onCancel={closeModifyDialog}\r\n          />\r\n        <RemoveDialog\r\n          lang={lang}\r\n          open={remoeDialogVisible}\r\n          policyID={policyID}\r\n          index={selected.index}\r\n          onSuccess={onRemoveSuccess}\r\n          onCancel={closeRemoveDialog}\r\n          />\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// dashboard components\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { deleteLog } from 'nano_api.js';\r\n\r\nconst i18n = {\r\n  'en':{\r\n    title: 'Batch Deleting Log',\r\n    content1: 'Are you sure to delete ',\r\n    content2: ' log(s)',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n  },\r\n  'cn':{\r\n    title: '批量删除日志',\r\n    content1: '是否删除 ',\r\n    content2: ' 条日志',\r\n    cancel: '取消',\r\n    confirm: '确定',\r\n  },\r\n}\r\n\r\nexport default function BatchDeleteDialog(props){\r\n  const { lang, targets, open, onSuccess, onCancel } = props;\r\n  const count = targets.length;\r\n  const [ error, setError ] = React.useState('');\r\n  const texts = i18n[lang];\r\n  const onDeleteFail = (msg) =>{\r\n    setError(msg);\r\n  }\r\n\r\n  const closeDialog = ()=>{\r\n    setError('');\r\n    onCancel();\r\n  }\r\n\r\n  const onDeleteSuccess = () =>{\r\n    setError('');\r\n    onSuccess(count);\r\n  }\r\n\r\n  const confirmDelete = () =>{\r\n    deleteLog(targets, onDeleteSuccess, onDeleteFail);\r\n  }\r\n\r\n  //begin render\r\n  let prompt;\r\n  if (!error || '' === error){\r\n    prompt = <GridItem xs={12}/>;\r\n  }else{\r\n    prompt = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={error} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      aria-labelledby={texts.title}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>{texts.title}</DialogTitle>\r\n      <DialogContent>\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            {texts.content1 + count.toString() + texts.content2}\r\n          </GridItem>\r\n          {prompt}\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color=\"transparent\" autoFocus>\r\n          {texts.cancel}\r\n        </Button>\r\n        <Button onClick={confirmDelete} color=\"info\">\r\n          {texts.confirm}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n};\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Info from \"components/Typography/Info.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport OperableTable from \"components/Table/OperableTable.js\";\r\nimport BatchDeleteDialog from \"views/Logs/BatchDeleteDialog\";\r\n\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport { getLoggedSession, redirectToLogin } from 'utils.js';\r\nimport { queryLogs, writeLog } from \"nano_api.js\";\r\n\r\nconst styles = {\r\n  ...dashboardStyles,\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\"\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst i18n = {\r\n  'en':{\r\n    batchDelete: 'Batch Delete',\r\n    enterBatch: 'Enter Batch Mode',\r\n    exitBatch: 'Exit Batch Mode',\r\n    tableTitle: \"Operate Logs\",\r\n    duration: 'Log Duration',\r\n    time: \"Timestamp\",\r\n    content: \"Content\",\r\n    noResource: \"No log available\",\r\n    day: 'The Last Day',\r\n    month: 'The Last Month',\r\n    year: 'The Last Year',\r\n  },\r\n  'cn':{\r\n    batchDelete: '批量删除',\r\n    enterBatch: '进入批量模式',\r\n    exitBatch: '退出批量模式',\r\n    tableTitle: \"操作日志\",\r\n    duration: '日志范围',\r\n    time: \"日志时间\",\r\n    content: \"内容\",\r\n    noResource: \"没有日志信息\",\r\n    day: '最近一天',\r\n    month: '最近一个月',\r\n    year: '最近一年',\r\n  }\r\n}\r\n\r\nconst LogRow = props =>{\r\n  const { log, checked, checkable, onCheckStatusChanged} = props;\r\n  const handleCheckChanged = e => {\r\n    const isChecked = e.target.checked;\r\n    onCheckStatusChanged(isChecked, log.id);\r\n  }\r\n  let rowHeader;\r\n  if(checkable){\r\n    rowHeader = (\r\n      <Box display='flex' alignItems=\"center\">\r\n        <Box>\r\n          <Checkbox\r\n            checked={checked}\r\n            onChange={handleCheckChanged}\r\n            value={log.id}\r\n            />\r\n        </Box>\r\n        <Box>\r\n          {log.time}\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }else{\r\n    rowHeader = log.time;\r\n  }\r\n  return (\r\n    <TableRow>\r\n      <TableCell>\r\n        {rowHeader}\r\n      </TableCell>\r\n      <TableCell>\r\n        {log.content}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nexport default function Logs(props){\r\n    const logsPerPage = 10;\r\n    const DurantionDay = 'last-day';\r\n    const DurantionMonth = 'last-month';\r\n    const DurantionYear = 'last-year';\r\n    const classes = useStyles();\r\n    const [ logList, setLogList ] = React.useState(null);\r\n    const [ checkedMap, setCheckedMap ] = React.useState(new Map());\r\n    const [ batchMode, setBatchMode ] = React.useState(false);\r\n    const [ queryParams, setQueryParams ] = React.useState({\r\n      offset: 0,\r\n      duration: DurantionDay,\r\n    })\r\n    const [ pages, setPages ] = React.useState({\r\n      current: 0,\r\n      total: 0,\r\n    })\r\n\r\n    //for dialog\r\n    const [ batchDeleteDialogVisible, setBatchDeleteDialogVisible ] = React.useState(false);\r\n\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const dateToString = date => {\r\n      const paddingToTwoBytes = number => {\r\n        if (number < 10){\r\n          return '0' + number.toString();\r\n        }else{\r\n          return number.toString();\r\n        }\r\n      }\r\n      return date.getFullYear() + '-' + paddingToTwoBytes(date.getMonth() + 1)\r\n       + '-' + paddingToTwoBytes(date.getDate()) + ' ' +\r\n       paddingToTwoBytes(date.getHours()) + ':' + paddingToTwoBytes(date.getMinutes())\r\n       + ':' + paddingToTwoBytes(date.getSeconds());\r\n    }\r\n\r\n    const reloadAllLogs = React.useCallback(() => {\r\n      const onLoadFail = (err) =>{\r\n        showErrorMessage(err);\r\n      }\r\n      const onLoadSuccess = result => {\r\n        const { logs, total, offset } = result;\r\n        var updated = new Map(checkedMap);\r\n        var modified = false;\r\n        if (!logs){\r\n          setLogList([]);\r\n          if (0 !== updated.size){\r\n            updated.clear();\r\n            modified = true;\r\n          }\r\n        }else{\r\n          setLogList(logs);\r\n          var removeTargets = [];\r\n          updated.forEach((checked, id) =>{\r\n            if(!logs.some(log => log.id === id)){\r\n              //not exists\r\n              removeTargets.push(id);\r\n            }\r\n          });\r\n          logs.forEach(log =>{\r\n            const logID = log.id;\r\n            if (!updated.has(logID)){\r\n              //new entry\r\n              updated.set(logID, false);\r\n              if(!modified){\r\n                modified = true;\r\n              }\r\n            }\r\n          })\r\n          if (0 !== removeTargets.length){\r\n            removeTargets.forEach(id =>{\r\n              updated.delete(id);\r\n              if(!modified){\r\n                modified = true;\r\n              }\r\n            })\r\n          }\r\n        }\r\n        if(modified){\r\n          setCheckedMap(new Map(updated));\r\n        }\r\n        if(0 !== total){\r\n          let currentPage;\r\n          if(offset < logsPerPage){\r\n            currentPage = 0;\r\n          }else{\r\n            currentPage = Math.floor(offset / logsPerPage);\r\n          }\r\n          let totalPages;\r\n          if(0 === total % logsPerPage){\r\n            totalPages = total / logsPerPage;\r\n          }else{\r\n            totalPages = Math.ceil(total / logsPerPage);\r\n          }\r\n          setPages({\r\n            current: currentPage,\r\n            total: totalPages,\r\n          })\r\n        }\r\n      }\r\n\r\n      const before = new Date();\r\n      var after = new Date(before);\r\n      switch (queryParams.duration) {\r\n        case DurantionDay:\r\n          after.setDate(before.getDate() - 1);\r\n          break;\r\n        case DurantionMonth:\r\n          after.setMonth(before.getMonth() - 1);\r\n          break;\r\n        case DurantionYear:\r\n          after.setFullYear(before.getFullYear() - 1);\r\n          break;\r\n        default:\r\n          showErrorMessage('invalid duration: ' + queryParams.duration);\r\n          return;\r\n      }\r\n\r\n      queryLogs(logsPerPage, queryParams.offset, dateToString(after), dateToString(before), onLoadSuccess, onLoadFail);\r\n    }, [queryParams, checkedMap, showErrorMessage]);\r\n\r\n\r\n    //batch deleting\r\n    const showBatchDeleteDialog = () =>{\r\n      setBatchDeleteDialogVisible(true);\r\n    };\r\n\r\n    const closeBatchDeleteDialog = () =>{\r\n      setBatchDeleteDialogVisible(false);\r\n    }\r\n\r\n    const onBatchDeleteSuccess = count =>{\r\n      closeBatchDeleteDialog();\r\n      showNotifyMessage(count.toString() + ' log(s) deleted');\r\n      writeLog(count.toString() + ' log(s) deleted');\r\n      reloadAllLogs();\r\n    };\r\n\r\n\r\n    const enterBatchMode = () => {\r\n      var updated = new Map();\r\n      //uncheck all\r\n      for(var instanceID of checkedMap.keys()){\r\n        updated.set(instanceID, false);\r\n      }\r\n      setCheckedMap(updated);\r\n      setBatchMode(true);\r\n    }\r\n\r\n    const exitBatchMode = () => {\r\n      setBatchMode(false);\r\n    }\r\n\r\n    const handleLogChecked = (checked, logID) =>{\r\n      var checkedStatus = new Map(checkedMap);\r\n      checkedStatus.set(logID, checked);\r\n      setCheckedMap(checkedStatus);\r\n    }\r\n\r\n    const handleAllClicked = e =>{\r\n      const checked = e.target.checked;\r\n      var updated = new Map();\r\n      for(const logID of checkedMap.keys()){\r\n        updated.set(logID, checked);\r\n      }\r\n      setCheckedMap(updated);\r\n    }\r\n\r\n    const handleDurationChanged = e => {\r\n      const duration = e.target.value;\r\n      setQueryParams({\r\n        offset: 0,\r\n        duration: duration,\r\n      })\r\n\r\n      reloadAllLogs();\r\n    }\r\n\r\n    const changeCurrentPage = index => {\r\n      const offset = index * logsPerPage;\r\n      setQueryParams(previous => ({\r\n        ...previous,\r\n        offset: offset,\r\n      }))\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      // var mounted = true\r\n      // reloadAllLogs();\r\n      // const updateInterval = 5 * 1000;\r\n      // var timerID = setInterval(()=>{\r\n      //   if (mounted){\r\n      //     reloadAllLogs();\r\n      //   }\r\n      // }, updateInterval);\r\n      // return () =>{\r\n      //   mounted = false;\r\n      //   clearInterval(timerID);\r\n      // }\r\n      reloadAllLogs();\r\n    }, [reloadAllLogs]);\r\n\r\n    //reder begin\r\n    var session = getLoggedSession();\r\n    if (null === session){\r\n      return redirectToLogin();\r\n    }\r\n\r\n    const { lang } = props;\r\n    const texts = i18n[lang];\r\n    let content;\r\n    if (!logList){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n    }else if (0 === logList.length){\r\n      content = <Info>{texts.noResource}</Info>;\r\n    }else{\r\n      let rowHeader;\r\n      if(batchMode){\r\n        rowHeader = (\r\n          <Box display='flex' alignItems=\"center\">\r\n            <Box>\r\n              <Checkbox\r\n                onChange={handleAllClicked}\r\n                />\r\n            </Box>\r\n            <Box>\r\n              {texts.time}\r\n            </Box>\r\n          </Box>\r\n        );\r\n      }else{\r\n        rowHeader = texts.time;\r\n      }\r\n      content = (\r\n        <OperableTable\r\n          color=\"primary\"\r\n          headers={[rowHeader, texts.content]}\r\n          rows={\r\n            logList.map(log =>{\r\n              const logID = log.id;\r\n              return (\r\n                <LogRow\r\n                  key={logID}\r\n                  log={log}\r\n                  checked={checkedMap && checkedMap.has(logID) ? checkedMap.get(logID): false}\r\n                  checkable={batchMode}\r\n                  onCheckStatusChanged={handleLogChecked}\r\n                  />\r\n              )\r\n            })}\r\n          />\r\n      );\r\n    }\r\n\r\n    var buttons = [];\r\n    if(batchMode){\r\n      buttons.push(\r\n        <Button size=\"sm\" color=\"info\" round onClick={showBatchDeleteDialog}><DeleteIcon />{texts.batchDelete}</Button>,\r\n        <Button size=\"sm\" color=\"rose\" round onClick={exitBatchMode}><ExitToAppIcon />{texts.exitBatch}</Button>,\r\n      );\r\n    }else{\r\n      buttons.push(\r\n        <Button size=\"sm\" color=\"info\" round onClick={enterBatchMode}><ListIcon />{texts.enterBatch}</Button>\r\n      );\r\n    }\r\n\r\n    const durationOptions = [\r\n      {\r\n        label: texts.day,\r\n        value: DurantionDay,\r\n      },\r\n      {\r\n        label: texts.month,\r\n        value: DurantionMonth,\r\n      },\r\n      {\r\n        label: texts.year,\r\n        value: DurantionYear,\r\n      },\r\n    ];\r\n    const durationRadioGroup = (\r\n      <Box m={0} pt={2}>\r\n        <FormControl component=\"fieldset\" fullWidth>\r\n          <FormLabel component=\"legend\">{texts.duration}</FormLabel>\r\n          <RadioGroup name=\"duration\" value={queryParams.duration} onChange={handleDurationChanged} row>\r\n            <Box display='flex' alignItems='center'>\r\n              {\r\n                durationOptions.map((option, key) => (\r\n                  <Box key={key}>\r\n                    <FormControlLabel value={option.value} control={<Radio />} label={option.label}/>\r\n                  </Box>\r\n                ))\r\n              }\r\n            </Box>\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Box>\r\n    )\r\n\r\n    var batchTargets = [];\r\n    if(checkedMap){\r\n      checkedMap.forEach((checked, id) =>{\r\n        if(checked){\r\n          batchTargets.push(id);\r\n        }\r\n      });\r\n      batchTargets.sort();\r\n    }\r\n\r\n    let pagination;\r\n    if (pages.total > 1){\r\n      var links = [];\r\n      for(var index = 0; index < pages.total; index++){\r\n        const targetPage = index;\r\n        if(index === pages.current){\r\n          links.push(<Typography>{targetPage + 1}</Typography>);\r\n        }else{\r\n          links.push(<Link href='#' underline='none' onClick={() => changeCurrentPage(targetPage)}>{targetPage + 1}</Link>);\r\n        }\r\n      }\r\n      pagination = (\r\n        <Box display='flex' alignItems='center' justifyContent=\"center\">\r\n          {\r\n            links.map((link, key) => (\r\n              <Box key={key} m={1} p={0}>\r\n                {link}\r\n              </Box>\r\n            ))\r\n          }\r\n        </Box>\r\n      )\r\n    }else{\r\n      pagination = <div/>;\r\n    }\r\n\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <GridContainer>\r\n            <GridItem xs={12}>\r\n              {durationRadioGroup}\r\n            </GridItem>\r\n          </GridContainer>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box mt={3} mb={3}>\r\n            <Divider/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box display='flex'>\r\n            {\r\n              buttons.map((button, key) =>(\r\n                <Box key={key} m={1}>\r\n                  {button}\r\n                </Box>\r\n              ))\r\n            }\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>{texts.tableTitle}</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n              {pagination}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <BatchDeleteDialog\r\n            lang={lang}\r\n            open={batchDeleteDialogVisible}\r\n            targets={batchDeleteDialogVisible? batchTargets : []}\r\n            onSuccess={onBatchDeleteSuccess}\r\n            onCancel={closeBatchDeleteDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n// import { Router, Redirect } from \"@reach/router\";\r\n// creates a beautiful scrollbar\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Navbar from \"components/Navbars/Navbar.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport ComputeCells from \"views/ComputeCells/ComputeCells.js\";\r\nimport allRoutes from \"routes.js\";\r\nimport styles from \"assets/jss/material-dashboard-react/layouts/adminStyle.js\";\r\n\r\nimport bgImage from \"assets/img/sidebar.jpg\";\r\n// import logo from \"assets/img/reactlogo.png\";\r\n// import logo from \"assets/img/nano.ico\";\r\nimport logo from \"assets/img/nano_white.svg\";\r\nimport { getLoggedSession, redirectToLogin } from 'utils.js';\r\n\r\nlet ps;\r\n\r\nfunction SwitchRoutes(props) {\r\n  const { routes, ...rest } = props;\r\n  const first = routes[0];\r\n  const firstPath = first.layout + first.path;\r\n  return (\r\n    <Switch>\r\n      {routes.map((item, key) => {\r\n        if (item.layout === \"/admin\") {\r\n          return (\r\n            <Route\r\n              path={item.layout + item.path}\r\n              render={()=> React.createElement(item.component, rest)}\r\n              key={key}\r\n            />\r\n          );\r\n        }\r\n        return null;\r\n      })}\r\n      <Route path=\"/admin/compute_cells/\" render={()=> React.createElement(ComputeCells, rest)}/>\r\n      <Redirect from=\"/admin\" to={firstPath} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Admin({ lang, setLang, ...rest }) {\r\n  // styles\r\n  const classes = useStyles();\r\n  // ref to help us initialize PerfectScrollbar on windows devices\r\n  const mainPanel = React.createRef();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const resizeFunction = () => {\r\n    if (window.innerWidth >= 960) {\r\n      setMobileOpen(false);\r\n    }\r\n  };\r\n  // initialize and destroy the PerfectScrollbar plugin\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(mainPanel.current, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false\r\n      });\r\n      document.body.style.overflow = \"hidden\";\r\n    }\r\n    window.addEventListener(\"resize\", resizeFunction);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n      }\r\n      window.removeEventListener(\"resize\", resizeFunction);\r\n    };\r\n  }, [mainPanel]);\r\n\r\n  var session = getLoggedSession();\r\n  if (null === session){\r\n    return redirectToLogin();\r\n  }\r\n  const menuList = session.menu;\r\n  var authorizedMenus = [];\r\n  allRoutes.forEach( menu => {\r\n    if(menuList.some(name => {\r\n      if(name === menu.name){\r\n        return true;\r\n      }else{\r\n        return false;\r\n      }\r\n    })){\r\n      authorizedMenus.push(menu);\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Sidebar\r\n        routes={authorizedMenus}\r\n        logoText={\"Nano Portal\"}\r\n        logo={logo}\r\n        image={bgImage}\r\n        handleDrawerToggle={handleDrawerToggle}\r\n        open={mobileOpen}\r\n        color=\"blue\"\r\n        lang={lang}\r\n        {...rest}\r\n      />\r\n      <div className={classes.mainPanel} ref={mainPanel}>\r\n        <Navbar\r\n          routes={authorizedMenus}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n          lang={lang}\r\n          setLang={setLang}\r\n          {...rest}\r\n        />\r\n        <div className={classes.content}>\r\n          <div className={classes.container}>\r\n            <SwitchRoutes lang={lang} routes={authorizedMenus}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/*!\r\n\r\n=========================================================\r\n* Material Dashboard React - v1.8.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n\r\nimport Dashboard from 'views/Dashboard/Dashboard.js';\r\nimport ComputePools from 'views/ComputePools/ComputePools.js';\r\nimport AddressPools from 'views/AddressPools/AddressPools.js';\r\nimport StoragePools from 'views/StoragePools/StoragePools.js';\r\nimport MediaImages from 'views/MediaImages/MediaImages.js';\r\nimport DiskImages from 'views/DiskImages/DiskImages.js';\r\nimport SystemTemplates from 'views/SystemTemplates/SystemTemplates.js';\r\nimport Instances from 'views/Instances/Instances.js';\r\nimport Users from 'views/Users/Main';\r\nimport Visibilities from 'views/Visibilities/Visibilities';\r\nimport PolicyGroups from 'views/PolicyGroups/PolicyGroups';\r\nimport Logs from 'views/Logs/Logs';\r\n\r\nimport MultilineChartIcon from '@material-ui/icons/MultilineChart';\r\nimport BlurOnIcon from '@material-ui/icons/BlurOn';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport CloudIcon from '@material-ui/icons/Cloud';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AlbumIcon from '@material-ui/icons/Album';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\nimport SecurityIcon from '@material-ui/icons/Security';\r\n\r\nconst dashboardRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"dashboard\",\r\n    display: {\r\n      'cn': '系统仪表盘',\r\n      'en': 'Dashboard',\r\n    },\r\n    icon: MultilineChartIcon,\r\n    component: Dashboard,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/compute_pools\",\r\n    name: \"compute_pool\",\r\n    display: {\r\n      'cn': '计算资源池',\r\n      'en': 'Compute Pools',\r\n    },\r\n    icon: BlurOnIcon,\r\n    component: ComputePools,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/address_pools\",\r\n    name: \"address_pool\",\r\n    display: {\r\n      'cn': '地址池',\r\n      'en': 'Address Pools',\r\n    },\r\n    icon: ShareIcon,\r\n    component: AddressPools,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/storage_pools\",\r\n    name: \"storage_pool\",\r\n    display: {\r\n      'cn': '存储池',\r\n      'en': 'Storage Pools',\r\n    },\r\n    icon: StorageIcon,\r\n    component: StoragePools,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/instances\",\r\n    name: \"instance\",\r\n    display: {\r\n      'cn': '云主机',\r\n      'en': 'Instances',\r\n    },\r\n    icon: CloudIcon,\r\n    component: Instances,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/disk_images\",\r\n    name: \"image\",\r\n    display: {\r\n      'cn': '磁盘镜像',\r\n      'en': 'Disk Images',\r\n    },\r\n    icon: SaveIcon,\r\n    component: DiskImages,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/media_images\",\r\n    name: \"media\",\r\n    display: {\r\n      'cn': '光盘镜像',\r\n      'en': 'Media Images',\r\n    },\r\n    icon: AlbumIcon,\r\n    component: MediaImages,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/system_templates\",\r\n    name: \"templates\",\r\n    display: {\r\n      'cn': '系统模板',\r\n      'en': 'System Templates',\r\n    },\r\n    icon: TuneIcon,\r\n    component: SystemTemplates,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/security_policies\",\r\n    name: \"policies\",\r\n    display: {\r\n      'cn': '安全策略组',\r\n      'en': 'Security Policies',\r\n    },\r\n    icon: SecurityIcon,\r\n    component: PolicyGroups,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/users\",\r\n    name: \"user\",\r\n    display: {\r\n      'cn': '用户管理',\r\n      'en': 'User Management',\r\n    },\r\n    icon: PeopleIcon,\r\n    component: Users,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/logs\",\r\n    name: \"log\",\r\n    display: {\r\n      'cn': '操作日志',\r\n      'en': 'Operate Logs',\r\n    },\r\n    icon: BorderColorIcon,\r\n    component: Logs,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/visibilities\",\r\n    name: \"visibility\",\r\n    display: {\r\n      'cn': '资源可见性',\r\n      'en': 'Resource Visibilities',\r\n    },\r\n    icon: VisibilityIcon,\r\n    component: Visibilities,\r\n    layout: \"/admin\"\r\n  },\r\n];\r\n\r\nexport default dashboardRoutes;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport ZoneStatus from \"views/Dashboard/ZoneStatus.js\";\r\nimport PoolStatus from \"views/Dashboard/PoolStatus.js\";\r\nimport CellStatus from \"views/Dashboard/CellStatus.js\";\r\n\r\nexport default function Dashboard(props){\r\n  return (\r\n    <div>\r\n      <Route path=\"/admin/dashboard\" exact render={(childrenProps) => React.createElement(ZoneStatus, {\r\n        ...childrenProps,\r\n        ...props,\r\n      })}/>\r\n      <Route path=\"/admin/dashboard/pools/\" exact render={(childrenProps) => React.createElement(PoolStatus, {\r\n        ...childrenProps,\r\n        ...props,\r\n      })}/>\r\n\r\n      <Route path=\"/admin/dashboard/pools/:pool\" exact render={(childrenProps) => React.createElement(CellStatus, {\r\n        ...childrenProps,\r\n        ...props,\r\n      })}/>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport PoolList from \"views/AddressPools/PoolList\";\r\nimport PoolStatus from \"views/AddressPools/PoolStatus\";\r\nimport RangeStatus from \"views/AddressPools/RangeStatus\";\r\n\r\nexport default function AddressPools(props){\r\n  return (\r\n    <div>\r\n      <Route path=\"/admin/address_pools\" exact render={()=> React.createElement(PoolList, props)}/>\r\n      <Route path=\"/admin/address_pools/:pool\" exact render={(current)=> React.createElement(PoolStatus, {\r\n        ...props,\r\n        ...current,\r\n      })}/>\r\n      <Route path=\"/admin/address_pools/:pool/:type/ranges/:start\" render={(current)=> React.createElement(RangeStatus, {\r\n        ...props,\r\n        ...current,\r\n      })}/>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport InstancesInScope from \"views/Instances/InstancesInScope.js\";\r\n// import ControlInstance from \"views/Instances/ControlInstance.js\";\r\nimport InstanceStatus from \"views/Instances/InstanceStatus.js\";\r\nimport Snapshots from \"views/Instances/Snapshots.js\";\r\nimport Details from \"views/Instances/Details.js\";\r\nimport AllInstances from \"views/Instances/AllInstances.js\";\r\nimport SecurityPolicies from \"views/Instances/SecurityPolicies.js\";\r\n\r\nexport default function Instances(props){\r\n  return (\r\n    <div>\r\n      <Route path=\"/admin/instances\" exact render={()=> React.createElement(AllInstances, props)}/>\r\n      <Route path=\"/admin/instances/range/\" render={()=> React.createElement(InstancesInScope, props)}/>\r\n      <Route path=\"/admin/instances/status/:id\" render={(childrenProps)=> React.createElement(InstanceStatus, {\r\n        ...childrenProps,\r\n        ...props,\r\n      })}/>\r\n      <Route path=\"/admin/instances/snapshots/:id\" render={(childrenProps)=> React.createElement(Snapshots, {\r\n        ...childrenProps,\r\n        ...props,\r\n      })}/>\r\n      <Route path=\"/admin/instances/details/:id\" render={(childrenProps)=> React.createElement(Details, {\r\n        ...childrenProps,\r\n        ...props,\r\n      })}/>\r\n      <Route path=\"/admin/instances/policies/:id\" render={(childrenProps)=> React.createElement(SecurityPolicies, {\r\n        ...childrenProps,\r\n        ...props,\r\n      })}/>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport PolicyGroupList from \"views/PolicyGroups/PolicyGroupList.js\";\r\nimport SecurityRules from \"views/PolicyGroups/SecurityRules\";\r\n\r\nexport default function Instances(props){\r\n  return (\r\n    <div>\r\n      <Route path=\"/admin/security_policies/\" exact render={()=> React.createElement(PolicyGroupList, props)}/>\r\n      <Route path=\"/admin/security_policies/:id/rules/\" render={(childrenProps)=> React.createElement(SecurityRules, {\r\n        ...childrenProps,\r\n        ...props,\r\n      })}/>\r\n    </div>\r\n  )\r\n}\r\n","import {\r\n  drawerWidth,\r\n  transition,\r\n  container\r\n} from \"assets/jss/material-dashboard-react.js\";\r\n\r\nconst appStyle = theme => ({\r\n  wrapper: {\r\n    position: \"relative\",\r\n    top: \"0\",\r\n    height: \"100vh\"\r\n  },\r\n  mainPanel: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`\r\n    },\r\n    overflow: \"auto\",\r\n    position: \"relative\",\r\n    float: \"right\",\r\n    ...transition,\r\n    maxHeight: \"100%\",\r\n    width: \"100%\",\r\n    overflowScrolling: \"touch\"\r\n  },\r\n  content: {\r\n    marginTop: \"70px\",\r\n    padding: \"30px 15px\",\r\n    minHeight: \"calc(100vh - 123px)\"\r\n  },\r\n  container,\r\n  map: {\r\n    marginTop: \"70px\"\r\n  }\r\n});\r\n\r\nexport default appStyle;\r\n","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { Redirect } from 'react-router-dom';\r\n// import { Redirect } from \"@reach/router\";\r\nimport bgImage from 'assets/img/login_background.jpg';\r\nimport LanguageSelector from \"components/Language/Selector.js\";\r\nimport { loginUser, writeLog, getSystemStatus } from 'nano_api.js';\r\nimport { saveLoggedSession } from 'utils.js';\r\n\r\nconst getClasses = makeStyles(()=>({\r\n  background:{\r\n    backgroundImage: \"url(\" + bgImage + \")\",\r\n    height: '100vh',\r\n  }\r\n}));\r\n\r\nconst i18n = {\r\n  'cn':{\r\n    title: 'Nano管理门户',\r\n    user: '用户名',\r\n    password: '密码',\r\n    login: '登录',\r\n  },\r\n  'en':{\r\n    title: 'Nano Web Portal',\r\n    user: 'User',\r\n    password: 'Password',\r\n    login: 'Login',\r\n  }\r\n};\r\n\r\nexport default function Login(props){\r\n  const { lang, setLang } = props;\r\n  const texts = i18n[lang];\r\n  const classes = getClasses();\r\n  const [ request, setRequest ] = React.useState({\r\n    user: '',\r\n    password: '',\r\n    nonce: 'stub',\r\n    type: 'manager',\r\n  });\r\n  const [ errorMessage, setError ] = React.useState('');\r\n  const [ systemReady, setSystemReady ] = React.useState(true);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n  const [ isLogged, setLogged ] = React.useState(false);\r\n\r\n  const notifyError = React.useCallback(message =>{\r\n    const notifyElapsed = 5000;\r\n    setError(message);\r\n    setTimeout(()=>{\r\n      setError('');\r\n    }, notifyElapsed);\r\n  }, [setError]);\r\n\r\n  const handleRequestPropsChanged = name => e => {\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const onLoginFail = React.useCallback(msg =>{\r\n    notifyError(msg);\r\n  }, [notifyError]);\r\n\r\n  const onLoginSuccess = payload =>{\r\n    var session = {\r\n      id: payload.session,\r\n      timeout: payload.timeout,\r\n      menu: payload.menu,\r\n      address: payload.address,\r\n      user: request.user,\r\n      group: payload.group,\r\n      nonce: request.nonce,\r\n      type: request.type,\r\n    }\r\n    saveLoggedSession(session);\r\n    if (!isLogged){\r\n        setLogged(true);\r\n        writeLog('login success');\r\n    }\r\n  };\r\n\r\n  const handleLoginClick = () =>{\r\n    loginUser(request.user, request.password, onLoginSuccess, onLoginFail);\r\n  };\r\n\r\n  React.useEffect(() =>{\r\n    if(initialed){\r\n      return;\r\n    }\r\n    const onQueryStatusSuccess = result => {\r\n      if (!result.ready){\r\n        setSystemReady(false);\r\n      }\r\n      setInitialed(true);\r\n    }\r\n\r\n    getSystemStatus(onQueryStatusSuccess, onLoginFail);\r\n  }, [initialed, onLoginFail]);\r\n\r\n  let content, button;\r\n  if (!initialed){\r\n    content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n  } else if (!systemReady){\r\n    return <Redirect to='/initial'/>;\r\n  } else if (isLogged){\r\n    const PreviousKey = \"previous\";\r\n    var params = new URLSearchParams(window.location.search);\r\n    if (params.has(PreviousKey)){\r\n      return <Redirect to={decodeURIComponent(params.get(PreviousKey))}/>;\r\n    }else{\r\n      return <Redirect to='/admin'/>;\r\n    }\r\n  }else{\r\n    let errorBar;\r\n    if (errorMessage){\r\n      errorBar = (\r\n        <GridItem xs={12}>\r\n          <SnackbarContent message={errorMessage} color=\"danger\"/>\r\n        </GridItem>\r\n      );\r\n    }else{\r\n      errorBar = <GridItem xs={12}/>;\r\n    }\r\n    button = <Button color=\"info\" onClick={handleLoginClick}>{texts.login}</Button>;\r\n    content = (\r\n      <Grid container>\r\n        <GridItem xs={12}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.user}\r\n              onChange={handleRequestPropsChanged('user')}\r\n              value={request.user}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box m={0} pt={2}>\r\n            <TextField\r\n              label={texts.password}\r\n              onChange={handleRequestPropsChanged('password')}\r\n              value={request.password}\r\n              margin=\"normal\"\r\n              type='password'\r\n              required\r\n              fullWidth\r\n            />\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          <Box alignItems='center' display='flex' m={1}>\r\n            {button}\r\n            <Box flexGrow={1}/>\r\n            <LanguageSelector lang={lang} setLang={setLang}/>\r\n          </Box>\r\n        </GridItem>\r\n        <GridItem xs={12}>\r\n          {errorBar}\r\n        </GridItem>\r\n      </Grid>\r\n    );\r\n  }\r\n  return(\r\n    <Box component='div' className={classes.background}>\r\n      <Container maxWidth='lg'>\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={10} sm={6} md={4}>\r\n            <Box mt={20} p={0}>\r\n              <Card>\r\n                <CardHeader color=\"primary\">\r\n                  <h4 className={classes.cardTitleWhite}>{texts.title}</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  {content}\r\n                </CardBody>\r\n              </Card>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport dashboardStyles from \"assets/jss/material-dashboard-react/views/dashboardStyle.js\";\r\nimport LanguageSelector from \"components/Language/Selector.js\";\r\n\r\nimport bgImage from 'assets/img/login_background.jpg';\r\nimport { getSystemStatus, initialSystem, getAllMenus } from 'nano_api.js';\r\n\r\nconst getClasses = makeStyles(()=>({\r\n  ...dashboardStyles,\r\n  background:{\r\n    backgroundImage: \"url(\" + bgImage + \")\",\r\n    height: '100vh',\r\n  }\r\n}));\r\n\r\nconst i18n = {\r\n  'cn':{\r\n    welcome: '欢迎使用Nano云平台',\r\n    description: '请设定管理员账号及密码，开始初始化系统',\r\n    user: '默认管理员帐号',\r\n    password: '密码',\r\n    password2: '确认密码',\r\n    initial: '初始化',\r\n    confirm: '确认',\r\n    success: '系统初始化成功，点击进入登录页面',\r\n  },\r\n  'en':{\r\n    welcome: 'Welcome to Nano',\r\n    description: 'Please set up a new admin account',\r\n    user: 'Super Admin Name',\r\n    password: 'Password',\r\n    password2: 'Confirm Password',\r\n    initial: 'Initial System',\r\n    confirm: 'Confirm',\r\n    success: 'System initialed, click to login',\r\n  }\r\n};\r\n\r\nexport default function InitialSystem(props){\r\n  const StageEnum = {\r\n    uninitial: 0,\r\n    input: 1,\r\n    initialed: 2,\r\n    redirect: 3,\r\n  };\r\n  const classes = getClasses();\r\n  const { lang, setLang } = props;\r\n  const texts = i18n[lang];\r\n  const [ request, setRequest ] = React.useState({\r\n    user: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n\r\n  const [ errorMessage, setError ] = React.useState('');\r\n  const [ stage, setStage ] = React.useState(StageEnum.uninitial);\r\n\r\n  const notifyError = (message) =>{\r\n    const notifyElapsed = 5000;\r\n    setError(message);\r\n    setTimeout(()=>{\r\n      setError('');\r\n    }, notifyElapsed);\r\n  };\r\n\r\n  const handleRequestPropsChanged = name => e =>{\r\n    var value = e.target.value\r\n    setRequest(previous => ({\r\n      ...previous,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const onInitialFail = React.useCallback(msg =>{\r\n    notifyError(msg);\r\n  }, []);\r\n\r\n  const onInitialSuccess = () =>{\r\n    setError('');\r\n    setStage(StageEnum.initialed);\r\n  }\r\n\r\n  const redirect = React.useCallback(() =>{\r\n    setStage(StageEnum.redirect);\r\n  }, [StageEnum.redirect]);\r\n\r\n  const onResultConfirm = () => {\r\n    redirect();\r\n  }\r\n\r\n  const confirmInitial = () =>{\r\n    const namePattern = new RegExp('[^\\\\w-.]');\r\n    if(!request.user){\r\n      onInitialFail('must specify user name');\r\n      return;\r\n    }else if (namePattern.test(request.user)){\r\n      onInitialFail(\"only letter/digit/'-'/'_'/'.' allowed in username\");\r\n      return;\r\n    }\r\n\r\n    if(!request.password){\r\n      onInitialFail('please input password');\r\n      return;\r\n    }else if (request.password2 !== request.password){\r\n      onInitialFail('password mismatch');\r\n      return;\r\n    }\r\n    var menuList = []\r\n    getAllMenus(lang).forEach(menu => {\r\n      menuList.push(menu.value);\r\n    });\r\n    initialSystem(request.user, null, null, null, request.password, menuList, onInitialSuccess, onInitialFail);\r\n  }\r\n\r\n  React.useEffect(() =>{\r\n    const onQueryStatusSuccess = result => {\r\n      if (result.ready){\r\n        redirect();\r\n        return;\r\n      }\r\n      //need initial\r\n      setStage(StageEnum.input);\r\n    }\r\n\r\n    getSystemStatus(onQueryStatusSuccess, onInitialFail);\r\n  }, [StageEnum.input, onInitialFail, redirect]);\r\n\r\n  let errorBar;\r\n  if (errorMessage && '' !== errorMessage){\r\n    errorBar = (\r\n      <GridItem xs={12}>\r\n        <SnackbarContent message={errorMessage} color=\"danger\"/>\r\n      </GridItem>\r\n    );\r\n  }else{\r\n    errorBar = <GridItem xs={12}/>;\r\n  }\r\n\r\n  let content, button;\r\n  switch (stage) {\r\n    case StageEnum.input:\r\n      button = <Button color=\"info\" onClick={confirmInitial}>{texts.initial}</Button>;\r\n      content = (\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            <Box justifyContent=\"center\" display='flex'>\r\n              <Typography className={classes.cardTitle}>\r\n                {texts.description}\r\n              </Typography>\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.user}\r\n                onChange={handleRequestPropsChanged('user')}\r\n                value={request.user}\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.password}\r\n                onChange={handleRequestPropsChanged('password')}\r\n                value={request.password}\r\n                margin=\"normal\"\r\n                type='password'\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            <Box m={0} pt={2}>\r\n              <TextField\r\n                label={texts.password2}\r\n                onChange={handleRequestPropsChanged('password2')}\r\n                value={request.password2}\r\n                margin=\"normal\"\r\n                type='password'\r\n                required\r\n                fullWidth\r\n              />\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            <Box alignItems='center' display='flex' m={1}>\r\n              {button}\r\n              <Box flexGrow={1}/>\r\n              <LanguageSelector lang={lang} setLang={setLang}/>\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            {errorBar}\r\n          </GridItem>\r\n        </Grid>\r\n      )\r\n      break;\r\n    case StageEnum.initialed:\r\n      button = <Button color=\"info\" onClick={onResultConfirm}>{texts.confirm}</Button>;\r\n      content = (\r\n        <Grid container>\r\n          <GridItem xs={12}>\r\n            <Box justifyContent=\"center\" display='flex'>\r\n              <Typography variant='body1' component='span' className={classes.cardTitle}>\r\n                {texts.success}\r\n              </Typography>\r\n            </Box>\r\n          </GridItem>\r\n          <GridItem xs={12}>\r\n            <Box justifyContent=\"center\" display='flex'>\r\n              {button}\r\n            </Box>\r\n          </GridItem>\r\n        </Grid>\r\n      )\r\n      break;\r\n    case StageEnum.redirect:\r\n      return <Redirect to='/login'/>;\r\n    default:\r\n      //uninitial\r\n      content = (\r\n        <div>\r\n          <Skeleton variant=\"rect\" style={{height: '10rem'}}/>\r\n          {errorBar}\r\n        </div>\r\n      );\r\n  }\r\n\r\n  return(\r\n    <Box component='div' className={classes.background}>\r\n      <Container maxWidth='lg'>\r\n        <Grid container justify=\"center\">\r\n          <Grid item xs={12} sm={8} md={4}>\r\n            <Box mt={20} p={0}>\r\n              <Card>\r\n                <CardHeader color=\"primary\">\r\n                  <h4 className={classes.cardTitleWhite}>{texts.welcome}</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  {content}\r\n                </CardBody>\r\n              </Card>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport RFB from '@novnc/novnc';\r\n\r\nexport default function VncDisplay(props){\r\n  const { url, password, callback, onFocusChanged } = props;\r\n  const canvas = React.createRef();\r\n  const [ connection, setConnection ] = React.useState(null);\r\n  const [ mounted, setMounted ] = React.useState(false);\r\n  const [ initialed, setInitialed ] = React.useState(false);\r\n\r\n  const activateFocus = () =>{\r\n    if (!mounted){\r\n      return;\r\n    }\r\n    if (!connection){\r\n      return;\r\n    }\r\n    connection.focus();\r\n    onFocusChanged(true);\r\n  };\r\n\r\n  const deactivateFocus = () =>{\r\n    if (!mounted){\r\n      return;\r\n    }\r\n    if (!connection){\r\n      return;\r\n    }\r\n    connection.blur();\r\n    onFocusChanged(false);\r\n  };\r\n\r\n  const sendEmergencyKeys = () =>{\r\n    if (!mounted){\r\n      return;\r\n    }\r\n    if (!connection){\r\n      return;\r\n    }\r\n    connection.sendCtrlAltDel();\r\n  };\r\n\r\n  const clickScreen = e => {\r\n    e.preventDefault();\r\n    activateFocus();\r\n  }\r\n\r\n  React.useEffect(()=>{\r\n    if (!canvas ||!canvas.current || !url || !password){\r\n      return;\r\n    }\r\n\r\n    setMounted(true);\r\n    if (!initialed){\r\n      const options = {\r\n        credentials: {\r\n          password: password,\r\n        },\r\n        clipViewport: true,\r\n        focusOnClick: false,\r\n        // scaleViewport: true,\r\n        qualityLevel: 8,\r\n      };\r\n\r\n\r\n      var conn = new RFB(canvas.current, url, options);\r\n      // const disconnect = () =>{\r\n      //   conn.disconnect();\r\n      //   setConnection(null);\r\n      // }\r\n      // conn.focus();\r\n      setConnection(conn);\r\n      setInitialed(true);\r\n    }\r\n\r\n    return () => {\r\n      // disconnect();\r\n      setMounted(false);\r\n    }\r\n  }, [canvas, password, url, initialed]);\r\n\r\n  //render\r\n  //bind callback\r\n  callback.onEmergency = sendEmergencyKeys;\r\n  return (\r\n    <div\r\n      ref={canvas}\r\n      onMouseOver={activateFocus}\r\n      onMouseOut={deactivateFocus}\r\n      onMouseDown={clickScreen}\r\n    />\r\n  )\r\n}\r\n","import React from \"react\";\r\n// @material-ui/core components\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Box from '@material-ui/core/Box';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport KeyboardHideIcon from '@material-ui/icons/KeyboardHide';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport RotateRightIcon from '@material-ui/icons/RotateRight';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\n\r\n// dashboard components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\r\nimport VncDisplay from \"views/Instances/VncDisplay.js\";\r\nimport InsertMediaDialog from \"views/Instances/InsertMediaDialog.js\";\r\nimport { getInstanceConfig, openMonitorChannel, getMonitorURL, ejectMedia,\r\n  stopInstance, restartInstance, resetInstance, writeLog } from \"nano_api.js\";\r\n\r\nconst i18n = {\r\n  'en':{\r\n    instance: 'Instance',\r\n    sendKeys: 'Send Ctrl+Alt+Delete',\r\n    stop: 'Stop Instance',\r\n    reboot: 'Reboot Instance',\r\n    reset: 'Reset Instance',\r\n    insertMedia: 'Insert Media',\r\n    ejectMedia: 'Eject Media',\r\n    activated: 'The input is already redirected, move out the mouse to release control',\r\n    deactivated: 'Move the mouse to the screen to control the instance',\r\n  },\r\n  'cn':{\r\n    instance: '云主机',\r\n    sendKeys: '发送 Ctrl+Alt+Delete',\r\n    stop: '停止云主机',\r\n    reboot: '重启云主机',\r\n    reset: '强制重启云主机',\r\n    insertMedia: '插入光盘镜像',\r\n    ejectMedia: '弹出光盘镜像',\r\n    activated: '输入已重定向到云主机，鼠标离开画面解除控制',\r\n    deactivated: '鼠标移动到监控画面开始控制云主机',\r\n  }\r\n}\r\n\r\nexport default function ControlInstance(props){\r\n    const instanceID = props.match.params.id;\r\n    const { lang } = props;\r\n    const [ channel, setChannel ] = React.useState(null);\r\n    const [ focus, setFocus ] = React.useState(false);\r\n    const [ mounted, setMounted ] = React.useState(false);\r\n    const [ initialed, setInitialed ] = React.useState(false);\r\n    const [ initializing, setInitializing ] = React.useState(false);\r\n    //for dialog\r\n    const [ insertMediaDialogVisible, setInsertMediaDialogVisible ] = React.useState(false);\r\n    const [ notifyColor, setNotifyColor ] = React.useState('warning');\r\n    const [ notifyMessage, setNotifyMessage ] = React.useState(\"\");\r\n    const texts = i18n[lang];\r\n\r\n    const closeNotify = () => {\r\n      setNotifyMessage(\"\");\r\n    }\r\n\r\n    const showErrorMessage = React.useCallback((msg) => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('warning');\r\n      setNotifyMessage(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    }, [mounted, setNotifyColor, setNotifyMessage]);\r\n\r\n    const showNotifyMessage = (msg) => {\r\n      if(!mounted){\r\n        return;\r\n      }\r\n      const notifyDuration = 3000;\r\n      setNotifyColor('info');\r\n      setNotifyMessage(msg);\r\n      writeLog(msg);\r\n      setTimeout(closeNotify, notifyDuration);\r\n    };\r\n\r\n    const onMonitorFail = React.useCallback(msg =>{\r\n      showErrorMessage(msg);\r\n    }, [showErrorMessage]);\r\n\r\n    //insert media\r\n    const showInsertMediaDialog = () =>{\r\n      setInsertMediaDialogVisible(true);\r\n    }\r\n\r\n    const closeInsertMediaDialog = () =>{\r\n      setInsertMediaDialogVisible(false);\r\n    }\r\n\r\n    const onInsertMediaSuccess = () =>{\r\n      closeInsertMediaDialog();\r\n      showNotifyMessage('media insert into instance ' + channel.name);\r\n    };\r\n\r\n    const handleEjectMedia = () => {\r\n      const onOperateSuccess = () => {\r\n        showNotifyMessage('media of instance ' + channel.name + ' ejected')\r\n      }\r\n      ejectMedia(instanceID, onOperateSuccess, onMonitorFail);\r\n    }\r\n\r\n    const handleStopInstance = () =>{\r\n      const onOperateSuccess = () =>{\r\n        showNotifyMessage('instance ' + channel.name + ' stopped');\r\n      }\r\n      stopInstance(instanceID, onOperateSuccess, onMonitorFail);\r\n    }\r\n\r\n    const handleRebootInstance = () =>{\r\n      const onOperateSuccess = () =>{\r\n        showNotifyMessage('instance ' + channel.name + ' reboot');\r\n      }\r\n      restartInstance(instanceID, onOperateSuccess, onMonitorFail);\r\n    }\r\n\r\n    const handleResetInstance = () =>{\r\n      const onOperateSuccess = () =>{\r\n        showNotifyMessage('instance ' + channel.name + ' reset');\r\n      }\r\n      resetInstance(instanceID, onOperateSuccess, onMonitorFail);\r\n    }\r\n\r\n    const handleEmergencyKeys = () =>{\r\n        if(channel&&channel.delegate&&channel.delegate.onEmergency){\r\n          channel.delegate.onEmergency();\r\n        }\r\n    }\r\n\r\n    const handleFocusChanged = isActivated => {\r\n      setFocus(isActivated);\r\n    }\r\n\r\n    React.useEffect(() =>{\r\n      if (!instanceID){\r\n        return;\r\n      }\r\n\r\n      setMounted(true);\r\n      if (!initializing && !initialed){\r\n        setInitializing(true);\r\n        const onGetInstanceSuccess = status =>{\r\n          const onOpenChannelSuccess = (id, password) =>{\r\n            const channelData = {\r\n              name: status.name,\r\n              pool: status.pool,\r\n              cell: status.cell,\r\n              channel: id,\r\n              password: password,\r\n              delegate: {},\r\n            }\r\n            setChannel(channelData);\r\n            setInitialed(true);\r\n            setInitializing(false);\r\n          }\r\n          openMonitorChannel(instanceID, onOpenChannelSuccess, onMonitorFail);\r\n        }\r\n        getInstanceConfig(instanceID, onGetInstanceSuccess, onMonitorFail);\r\n      }\r\n      return () =>{\r\n        setMounted(false);\r\n      }\r\n    }, [instanceID, onMonitorFail, initialed, initializing]);\r\n\r\n    let content, headers;\r\n    if (!initialed){\r\n      content = <Skeleton variant=\"rect\" style={{height: '10rem'}}/>;\r\n      headers = <Box/>;\r\n    }else{\r\n      const url = getMonitorURL(channel.channel);\r\n      content = (\r\n        <VncDisplay\r\n          url={url}\r\n          password={channel.password}\r\n          callback={channel.delegate}\r\n          onFocusChanged={handleFocusChanged}\r\n          />\r\n      );\r\n      const operators = [\r\n        {\r\n          tips: texts.sendKeys,\r\n          icon: KeyboardHideIcon,\r\n          handler: handleEmergencyKeys,\r\n        },\r\n        {\r\n          tips: texts.insertMedia,\r\n          icon: ArrowDropDownIcon,\r\n          handler: showInsertMediaDialog,\r\n        },\r\n        {\r\n          tips: texts.ejectMedia,\r\n          icon: ArrowDropUpIcon,\r\n          handler: handleEjectMedia,\r\n        },\r\n        {\r\n          tips: texts.stop,\r\n          icon: PowerSettingsNewIcon,\r\n          handler: handleStopInstance,\r\n        },\r\n        {\r\n          tips: texts.reboot,\r\n          icon: RotateRightIcon,\r\n          handler: handleRebootInstance,\r\n        },\r\n        {\r\n          tips: texts.reset,\r\n          icon: RefreshIcon,\r\n          handler: handleResetInstance,\r\n        },\r\n      ];\r\n      headers = (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Box flexGrow={1}  fontWeight=\"fontWeightBold\" letterSpacing={10}>\r\n            <Typography component='span'>\r\n              {texts.instance + ': ' + channel.name + '  ('+ ( focus? texts.activated : texts.deactivated ) +')'}\r\n            </Typography>\r\n          </Box>\r\n          {\r\n            operators.map((operator, key) => (\r\n              <Box key={key}>\r\n                <Tooltip\r\n                  title={operator.tips}\r\n                  placement=\"top\"\r\n                  >\r\n                  <IconButton\r\n                    color=\"inherit\"\r\n                    onClick={operator.handler}\r\n                    >\r\n                    {React.createElement(operator.icon)}\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Box>\r\n            ))\r\n          }\r\n        </Box>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              {headers}\r\n            </CardHeader>\r\n            <CardBody>\r\n              {content}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Snackbar\r\n            place=\"tr\"\r\n            color={notifyColor}\r\n            message={notifyMessage}\r\n            open={\"\" !== notifyMessage}\r\n            closeNotification={closeNotify}\r\n            close\r\n          />\r\n        </GridItem>\r\n        <GridItem>\r\n          <InsertMediaDialog\r\n            lang={lang}\r\n            instanceID={instanceID}\r\n            open={insertMediaDialogVisible}\r\n            onSuccess={onInsertMediaSuccess}\r\n            onCancel={closeInsertMediaDialog}\r\n            />\r\n        </GridItem>\r\n      </GridContainer>\r\n    );\r\n}\r\n","/*!\r\n\r\n=========================================================\r\n* Material Dashboard React - v1.8.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Danger from \"components/Typography/Danger.js\";\r\nimport { primaryColor, infoColor, dangerColor } from \"assets/jss/material-dashboard-react.js\";\r\n// core components\r\nimport Admin from \"layouts/Admin.js\";\r\nimport Login from \"views/Login/Login.js\";\r\nimport Initial from \"views/Login/Initial.js\";\r\nimport ControlInstance from \"views/Instances/ControlInstance.js\";\r\nimport { getLanguage } from \"utils.js\";\r\n\r\nimport \"assets/css/material-dashboard-react.css?v=1.8.0\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n      error: null,\r\n      errorStack: null,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // 更新 state 使下一次渲染能够显示降级后的 UI\r\n    return {\r\n      hasError: true,\r\n      error: error.message,\r\n      errorStack: error.stack,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError){\r\n      return <Danger>{this.state.error}</Danger>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nconst history = createBrowserHistory();\r\nconst mainTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      light: primaryColor[1],\r\n      main: primaryColor[0],\r\n    },\r\n    secondary:{\r\n      light: infoColor[1],\r\n      main: infoColor[0],\r\n    },\r\n    error:{\r\n      light: dangerColor[1],\r\n      main: dangerColor[0],\r\n    },\r\n  },\r\n});\r\n\r\nfunction LanguageProvider(props){\r\n  const [ lang, setLang ] = React.useState(getLanguage());\r\n\r\n  return (\r\n    <ThemeProvider theme={mainTheme}>\r\n      <ErrorBoundary>\r\n        <Router history={history}>\r\n          <Switch>\r\n            <Route path=\"/admin\" render={ (props) => <Admin lang={lang} setLang={setLang}/>}/>\r\n            <Route path=\"/login\" render={ (props) => <Login lang={lang} setLang={setLang}/>}/>\r\n            <Route path=\"/initial\" render={ (props) => <Initial lang={lang} setLang={setLang}/>}/>\r\n            <Route path=\"/monitor/:id\" render={ props => <ControlInstance lang={lang} {...props}/>}/>\r\n            <Redirect from=\"/\" to=\"/login\" />\r\n          </Switch>\r\n        </Router>\r\n      </ErrorBoundary>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <LanguageProvider/>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}